// ignore_for_file: type=lint

import 'dart:convert';

import 'package:lib_openapi/lib_openapi.dart';
import 'package:lib_openapi/openapi_v2.dart' as v2;
import 'package:lib_openapi/openapi_v3.dart' as v3;
import 'package:lib_openapi/surface.dart' as surface;

/// From: 2_0/postBodyTest.json
final OpenApiProto<v2.Document> fixtures_2_0_post_body_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEh4KBkFuaW1hbCoUCgJpZBIHaW50ZWdlciIFaW50NjQSHgoGSW5zZWN0KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NBJiChZQT1NUX2FuaW1hbHNQYXJhbWV0ZXJzGjdQT1NUX2FuaW1hbHNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9hbmltYWxzKg8KA3BldBIGQW5pbWFsGAISYgoWUE9TVF9pbnNlY3RzUGFyYW1ldGVycxo3UE9TVF9pbnNlY3RzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBPU1RfaW5zZWN0cyoPCgNwZXQSBkluc2VjdBgDGjYSCC9hbmltYWxzGgRQT1NUKgxQT1NUX2FuaW1hbHNKFlBPU1RfYW5pbWFsc1BhcmFtZXRlcnMaNhIIL2luc2VjdHMaBFBPU1QqDFBPU1RfaW5zZWN0c0oWUE9TVF9pbnNlY3RzUGFyYW1ldGVycw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS3QEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGoEBVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiBGb3IgdGhpcyBzYW1wbGUsIHlvdSBjYW4gdXNlIHRoZSBhcGkga2V5ICJzcGVjaWFsLWtleSIgdG8gdGVzdCB0aGUgYXV0aG9yaXphdGlvbiBmaWx0ZXJzMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbBoTcGV0c3RvcmUuc3dhZ2dlci5pbyIDL3YyKgRodHRwQt8CErQBCggvYW5pbWFscxKnASKkAQoDcGV0Eh1BZGQgYSBuZXcgYW5pbWFsIHRvIHRoZSBzdG9yZToQYXBwbGljYXRpb24vanNvbjoPYXBwbGljYXRpb24veG1sQj8KPQo7CgdBbmltYWxzEgNwZXQaBGJvZHkqJbIBBwoFYXJyYXm6ARgKFgoUIy9kZWZpbml0aW9ucy9BbmltYWxKGgoYCgM0MDUSEQoPCg1JbnZhbGlkIGlucHV0EqUBCggvaW5zZWN0cxKYASKVAQoDcGV0Eh1BZGQgYSBuZXcgaW5zZWN0IHRvIHRoZSBzdG9yZToQYXBwbGljYXRpb24vanNvbjoPYXBwbGljYXRpb24veG1sQjAKLgosCgdJbnNlY3RzEgNwZXQaBGJvZHkqFgoUIy9kZWZpbml0aW9ucy9JbnNlY3RKGgoYCgM0MDUSEQoPCg1JbnZhbGlkIGlucHV0SlQKKAoGQW5pbWFsEh7KARsKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXIKKAoGSW5zZWN0Eh7KARsKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXI=')),
);

/// From: 2_0/petstore-with-spring-pageable.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_with_spring_pageable = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/globalConsumesAndProduces.json
final OpenApiProto<v2.Document> fixtures_2_0_global_consumes_and_produces = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjMKC0N1c3RvbU1vZGVsKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSmgEKIUxvY2FsQ29uc3VtZXNBbmRQcm9kdWNlc1Jlc3BvbnNlcxpNTG9jYWxDb25zdW1lc0FuZFByb2R1Y2VzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMb2NhbENvbnN1bWVzQW5kUHJvZHVjZXMqJgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXIiBWludDY0EqgBCiJHbG9iYWxDb25zdW1lc0FuZFByb2R1Y2VzUmVzcG9uc2VzGk9HbG9iYWxDb25zdW1lc0FuZFByb2R1Y2VzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHbG9iYWxDb25zdW1lc0FuZFByb2R1Y2VzKjEKHzIwMCBhcHBsaWNhdGlvbi9nbG9iYWxfcHJvZHVjZXMSB2ludGVnZXIiBWludDY0Gn0KGGxvY2FsQ29uc3VtZXNBbmRQcm9kdWNlcxIfL3Rlc3RzL2xvY2FsQ29uc3VtZXNBbmRQcm9kdWNlcxoDR0VUKhhMb2NhbENvbnN1bWVzQW5kUHJvZHVjZXNSIUxvY2FsQ29uc3VtZXNBbmRQcm9kdWNlc1Jlc3BvbnNlcxqBAQoZZ2xvYmFsQ29uc3VtZXNBbmRQcm9kdWNlcxIgL3Rlc3RzL2dsb2JhbENvbnN1bWVzQW5kUHJvZHVjZXMaA0dFVCoZR2xvYmFsQ29uc3VtZXNBbmRQcm9kdWNlc1IiR2xvYmFsQ29uc3VtZXNBbmRQcm9kdWNlc1Jlc3BvbnNlcxppCh1sb2NhbFJlc2V0Q29uc3VtZXNBbmRQcm9kdWNlcxIkL3Rlc3RzL2xvY2FsUmVzZXRDb25zdW1lc0FuZFByb2R1Y2VzGgNHRVQqHUxvY2FsUmVzZXRDb25zdW1lc0FuZFByb2R1Y2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASiAEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGi1TcGVjIGZvciB0ZXN0aW5nIGdsb2JhbCBjb25zdW1lcyBhbmQgcHJvZHVjZXMyPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sGhNwZXRzdG9yZS5zd2FnZ2VyLmlvIgMvdjIqBGh0dHAyG2FwcGxpY2F0aW9uL2dsb2JhbF9jb25zdW1lczobYXBwbGljYXRpb24vZ2xvYmFsX3Byb2R1Y2VzQqQFEusBCh8vdGVzdHMvbG9jYWxDb25zdW1lc0FuZFByb2R1Y2VzEscBEsQBCgV0ZXN0cxIqT3BlcmF0aW9uIHdpdGggbG9jYWwgY29uc3VtZXMgYW5kIHByb2R1Y2VzKhhsb2NhbENvbnN1bWVzQW5kUHJvZHVjZXMyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25KUQpPCgMyMDASSApGCi1zdWNjZXNzZnVsIG9wZXJhdGlvbi4gUmV0dXJuaW5nIGEgc2ltcGxlIGludC4SFQoTEgVpbnQ2NLIBCQoHaW50ZWdlchLKAQogL3Rlc3RzL2dsb2JhbENvbnN1bWVzQW5kUHJvZHVjZXMSpQESogEKBXRlc3RzEitPcGVyYXRpb24gd2l0aCBnbG9iYWwgY29uc3VtZXMgYW5kIHByb2R1Y2VzKhlnbG9iYWxDb25zdW1lc0FuZFByb2R1Y2VzSlEKTwoDMjAwEkgKRgotc3VjY2Vzc2Z1bCBvcGVyYXRpb24uIFJldHVybmluZyBhIHNpbXBsZSBpbnQuEhUKExIFaW50NjSyAQkKB2ludGVnZXIS5gEKJC90ZXN0cy9sb2NhbFJlc2V0Q29uc3VtZXNBbmRQcm9kdWNlcxK9ARK6AQoFdGVzdHMSP09wZXJhdGlvbiB3aXRoIGxvY2FsIGNvbnN1bWVzIGFuZCBwcm9kdWNlcyBzZXQgdG8gZW1wdHkgKHJlc2V0KSodbG9jYWxSZXNldENvbnN1bWVzQW5kUHJvZHVjZXNKUQpPCgMyMDASSApGCi1zdWNjZXNzZnVsIG9wZXJhdGlvbi4gUmV0dXJuaW5nIGEgc2ltcGxlIGludC4SFQoTEgVpbnQ2NLIBCQoHaW50ZWdlckpVClMKC0N1c3RvbU1vZGVsEkSaAQJpZMoBPAoZCgJpZBITEgVpbnQ2NLIBCQoHaW50ZWdlcgofCgRuYW1lEheyAQgKBnN0cmluZ/IBCRIHZG9nZ2llCmrJAQomCgdhcGlfa2V5EhsSGQoGYXBpS2V5EgdhcGlfa2V5GgZoZWFkZXIKngEKDXBldHN0b3JlX2F1dGgSjAEaiQEKBm9hdXRoMhIIaW1wbGljaXQaSAopCgp3cml0ZTpwZXRzEhttb2RpZnkgcGV0cyBpbiB5b3VyIGFjY291bnQKGwoJcmVhZDpwZXRzEg5yZWFkIHlvdXIgcGV0cyIraHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vYXBpL29hdXRoL2RpYWxvZw==')),
);

/// From: 2_0/petstore-with-fake-endpoints-models-for-testing-saga-and-records.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_with_fake_endpoints_models_for_testing_saga_and_records = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/petstore-orig.json
final OpenApiProto<v2.Document> fixtures_2_0_petstore_orig = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/responseSelectionTest.json
final OpenApiProto<v2.Document> fixtures_2_0_response_selection_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjMKC0N1c3RvbU1vZGVsKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcS3gIKIVdpdGhUd29IdW5kcmVkQW5kRGVmYXVsdFJlc3BvbnNlcxpNV2l0aFR3b0h1bmRyZWRBbmREZWZhdWx0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBXaXRoVHdvSHVuZHJlZEFuZERlZmF1bHQqKgoYZGVmYXVsdCBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyIgVpbnQzMiomChQxMDAgYXBwbGljYXRpb24vanNvbhIHaW50ZWdlciIFaW50MzIqJgoUMjAyIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXIiBWludDY0KiYKFDIwMyBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyIgVpbnQzMiomChQ0MDAgYXBwbGljYXRpb24vanNvbhIHaW50ZWdlciIFaW50MzIqHgoUMjAxIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxLvAQokV2l0aG91dFR3b0h1bmRyZWRCdXREZWZhdWx0UmVzcG9uc2VzGlNXaXRob3V0VHdvSHVuZHJlZEJ1dERlZmF1bHRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFdpdGhvdXRUd29IdW5kcmVkQnV0RGVmYXVsdCoiChhkZWZhdWx0IGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZyomChQxMDAgYXBwbGljYXRpb24vanNvbhIHaW50ZWdlciIFaW50MzIqJgoUMzAxIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXIiBWludDY0Gn0KGHdpdGhUd29IdW5kcmVkQW5kRGVmYXVsdBIfL3Rlc3RzL3dpdGhUd29IdW5kcmVkQW5kRGVmYXVsdBoDR0VUKhhXaXRoVHdvSHVuZHJlZEFuZERlZmF1bHRSIVdpdGhUd29IdW5kcmVkQW5kRGVmYXVsdFJlc3BvbnNlcxqJAQobd2l0aG91dFR3b0h1bmRyZWRCdXREZWZhdWx0EiIvdGVzdHMvd2l0aG91dFR3b0h1bmRyZWRCdXREZWZhdWx0GgNHRVQqG1dpdGhvdXRUd29IdW5kcmVkQnV0RGVmYXVsdFIkV2l0aG91dFR3b0h1bmRyZWRCdXREZWZhdWx0UmVzcG9uc2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS3QEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGoEBVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiBGb3IgdGhpcyBzYW1wbGUsIHlvdSBjYW4gdXNlIHRoZSBhcGkga2V5ICJzcGVjaWFsLWtleSIgdG8gdGVzdCB0aGUgYXV0aG9yaXphdGlvbiBmaWx0ZXJzMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbBoTcGV0c3RvcmUuc3dhZ2dlci5pbyIDL3YyKgRodHRwQuQFErQDCh8vdGVzdHMvd2l0aFR3b0h1bmRyZWRBbmREZWZhdWx0EpADEo0DEjxPcGVyYXRpb24gd2l0aCBzZXZlcmFsIHVub3JkZXJlZCAyWFggcmVzdWx0cyBhbmQgb25lIGRlZmF1bHQqGHdpdGhUd29IdW5kcmVkQW5kRGVmYXVsdDIQYXBwbGljYXRpb24vanNvbkqgAgo2CgdkZWZhdWx0EisKKQoQZGVmYXVsdCByZXNwb25zZRIVChMSBWludDMysgEJCgdpbnRlZ2VyCi4KAzEwMBInCiUKDDEwMCByZXNwb25zZRIVChMSBWludDMysgEJCgdpbnRlZ2VyCi4KAzIwMhInCiUKDDIwMSByZXNwb25zZRIVChMSBWludDY0sgEJCgdpbnRlZ2VyCi4KAzIwMxInCiUKDDIwMiByZXNwb25zZRIVChMSBWludDMysgEJCgdpbnRlZ2VyCi4KAzQwMBInCiUKDDQwMCByZXNwb25zZRIVChMSBWludDMysgEJCgdpbnRlZ2VyCiYKAzIwMRIfCh0KDDIwMCByZXNwb25zZRINCguyAQgKBnN0cmluZxKqAgoiL3Rlc3RzL3dpdGhvdXRUd29IdW5kcmVkQnV0RGVmYXVsdBKDAhKAAhI8T3BlcmF0aW9uIHdpdGggc2V2ZXJhbCB1bm9yZGVyZWQgMlhYIHJlc3VsdHMgYW5kIG9uZSBkZWZhdWx0Kht3aXRob3V0VHdvSHVuZHJlZEJ1dERlZmF1bHQyEGFwcGxpY2F0aW9uL2pzb25KkAEKLgoHZGVmYXVsdBIjCiEKEGRlZmF1bHQgcmVzcG9uc2USDQoLsgEICgZzdHJpbmcKLgoDMTAwEicKJQoMMTAwIHJlc3BvbnNlEhUKExIFaW50MzKyAQkKB2ludGVnZXIKLgoDMzAxEicKJQoMMzAxIHJlc3BvbnNlEhUKExIFaW50NjSyAQkKB2ludGVnZXJKVQpTCgtDdXN0b21Nb2RlbBJEmgECaWTKATwKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXIKHwoEbmFtZRIXsgEICgZzdHJpbmfyAQkSB2RvZ2dpZQpqyQEKJgoHYXBpX2tleRIbEhkKBmFwaUtleRIHYXBpX2tleRoGaGVhZGVyCp4BCg1wZXRzdG9yZV9hdXRoEowBGokBCgZvYXV0aDISCGltcGxpY2l0GkgKKQoKd3JpdGU6cGV0cxIbbW9kaWZ5IHBldHMgaW4geW91ciBhY2NvdW50ChsKCXJlYWQ6cGV0cxIOcmVhZCB5b3VyIHBldHMiK2h0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL2FwaS9vYXV0aC9kaWFsb2c=')),
);

/// From: 2_0/regression_6905.yaml
final OpenApiProto<v2.Document> fixtures_2_0_regression_6905 = (
  model: surface.Model.fromBuffer(base64Decode('Ch1UZXN0IENvbW1hbmQgbW9kZWwgZ2VuZXJhdGlvbhIcCglQYXJ0eVR5cGUqDwoFdmFsdWUSBnN0cmluZxIfCgxDdXN0b21lclR5cGUqDwoFdmFsdWUSBnN0cmluZxIWCgZFbnRpdHkqDAoCaWQSBnN0cmluZxJBCgtQYXJ0eUFsbE9mMioZCgpwYXJ0eV90eXBlEglQYXJ0eVR5cGUYAyoXCg10YXhfaWRfbnVtYmVyEgZzdHJpbmcSOAoFUGFydHkqFAoIYWxsX29mXzESBkVudGl0eRgDKhkKCGFsbF9vZl8yEgtQYXJ0eUFsbE9mMhgDEmEKDUNvbnRhY3RBbGxPZjIqFAoKZmlyc3RfbmFtZRIGc3RyaW5nKhMKCWxhc3RfbmFtZRIGc3RyaW5nKhAKBnN1ZmZpeBIGc3RyaW5nKhMKA2RvYhIGc3RyaW5nIgRkYXRlEjsKB0NvbnRhY3QqEwoIYWxsX29mXzESBVBhcnR5GAMqGwoIYWxsX29mXzISDUNvbnRhY3RBbGxPZjIYAxJqCg5DdXN0b21lckFsbE9mMiofCg1jdXN0b21lcl90eXBlEgxDdXN0b21lclR5cGUYAyoWCgxjdXN0b21lcl9udW0SBnN0cmluZyofChVleHRlcm5hbF9jdXN0b21lcl9udW0SBnN0cmluZxI9CghDdXN0b21lcioTCghhbGxfb2ZfMRIFUGFydHkYAyocCghhbGxfb2ZfMhIOQ3VzdG9tZXJBbGxPZjIYAxI5CgxQZXJzb25BbGxPZjIqFAoKZmlyc3RfbmFtZRIGc3RyaW5nKhMKCWxhc3RfbmFtZRIGc3RyaW5nEjwKBlBlcnNvbioWCghhbGxfb2ZfMRIIQ3VzdG9tZXIYAyoaCghhbGxfb2ZfMhIMUGVyc29uQWxsT2YyGAMSMQoST3JnYW5pemF0aW9uQWxsT2YyKhsKEW9yZ2FuaXphdGlvbl9uYW1lEgZzdHJpbmcSSAoMT3JnYW5pemF0aW9uKhYKCGFsbF9vZl8xEghDdXN0b21lchgDKiAKCGFsbF9vZl8yEhJPcmdhbml6YXRpb25BbGxPZjIYAxItCghBcGlFcnJvcioOCgRjb2RlEgZzdHJpbmcqEQoHbWVzc2FnZRIGc3RyaW5nGjEKDnF1ZXJ5Q3VzdG9tZXJzEgovY3VzdG9tZXJzGgNHRVQqDlF1ZXJ5Q3VzdG9tZXJzGi4KDXF1ZXJ5Q29udGFjdHMSCS9jb250YWN0cxoDR0VUKg1RdWVyeUNvbnRhY3RzGhwSCC9wYXJ0aWVzGgNHRVQqC0dFVF9wYXJ0aWVz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASRQodVGVzdCBDb21tYW5kIG1vZGVsIGdlbmVyYXRpb24SBTEuMC4wGh1UZXN0IENvbW1hbmQgbW9kZWwgZ2VuZXJhdGlvbkKcBRLtAQoKL2N1c3RvbWVycxLeARLbAQoIQ3VzdG9tZXISDUdldCBjdXN0b21lcnMqDnF1ZXJ5Q3VzdG9tZXJzSq8BCj0KAzIwMBI2CjQKB1N1Y2Nlc3MSKQonsgEHCgVhcnJheboBGgoYChYjL2RlZmluaXRpb25zL0N1c3RvbWVyCjMKAzQwMBIsCioKDEJhZCByZXF1ZXN0LhIaChgKFiMvZGVmaW5pdGlvbnMvQXBpRXJyb3IKOQoHZGVmYXVsdBIuCiwKDlVua25vd24gZXJyb3IuEhoKGAoWIy9kZWZpbml0aW9ucy9BcGlFcnJvchLnAQoJL2NvbnRhY3RzEtkBEtYBCgdDb250YWN0EgtHZXQgY29udGFjdCoNcXVlcnlDb250YWN0c0quAQo8CgMyMDASNQozCgdTdWNjZXNzEigKJrIBBwoFYXJyYXm6ARkKFwoVIy9kZWZpbml0aW9ucy9Db250YWN0CjMKAzQwMBIsCioKDEJhZCByZXF1ZXN0LhIaChgKFiMvZGVmaW5pdGlvbnMvQXBpRXJyb3IKOQoHZGVmYXVsdBIuCiwKDlVua25vd24gZXJyb3IuEhoKGAoWIy9kZWZpbml0aW9ucy9BcGlFcnJvchK/AQoIL3BhcnRpZXMSsgESrwFKrAEKOgoDMjAwEjMKMQoHU3VjY2VzcxImCiSyAQcKBWFycmF5ugEXChUKEyMvZGVmaW5pdGlvbnMvUGFydHkKMwoDNDAwEiwKKgoMQmFkIHJlcXVlc3QuEhoKGAoWIy9kZWZpbml0aW9ucy9BcGlFcnJvcgo5CgdkZWZhdWx0Ei4KLAoOVW5rbm93biBlcnJvci4SGgoYChYjL2RlZmluaXRpb25zL0FwaUVycm9ySpYJCjkKCVBhcnR5VHlwZRIsIgR0eXBlogELEgljdXN0b21lcgqiAQoSCGNvbnRhY3QKsgEICgZzdHJpbmcKPwoMQ3VzdG9tZXJUeXBlEi8iBHR5cGWiAQkSB3BlcnNvbgqiAQ8SDW9yZ2FuaXphdGlvbgqyAQgKBnN0cmluZwouCgZFbnRpdHkSJLIBCAoGb2JqZWN0ygEWChQKAmlkEg6yAQgKBnN0cmluZ9gBAQqYAQoFUGFydHkSjgHCARYKFCMvZGVmaW5pdGlvbnMvRW50aXR5wgFymgEKcGFydHlfdHlwZbIBCAoGb2JqZWN0ygFKCioKCnBhcnR5X3R5cGUSHAoXIy9kZWZpbml0aW9ucy9QYXJ0eVR5cGXYAQEKHAoNdGF4X2lkX251bWJlchILsgEICgZzdHJpbmfSAQpwYXJ0eV90eXBlCsEBCgdDb250YWN0ErUBwgEVChMjL2RlZmluaXRpb25zL1BhcnR5wgF0sgEICgZvYmplY3TKAWYKGQoKZmlyc3RfbmFtZRILsgEICgZzdHJpbmcKGAoJbGFzdF9uYW1lEguyAQgKBnN0cmluZwoVCgZzdWZmaXgSC7IBCAoGc3RyaW5nChgKA2RvYhIREgRkYXRlsgEICgZzdHJpbmf6ASMKFXgtZGlzY3JpbWluYXRvci12YWx1ZRIKEghjb250YWN0CgrzAQoIQ3VzdG9tZXIS5gHCARUKEyMvZGVmaW5pdGlvbnMvUGFydHnCAaMBmgENY3VzdG9tZXJfdHlwZbIBCAoGb2JqZWN0ygF1CjAKDWN1c3RvbWVyX3R5cGUSHwoaIy9kZWZpbml0aW9ucy9DdXN0b21lclR5cGXYAQEKGwoMY3VzdG9tZXJfbnVtEguyAQgKBnN0cmluZwokChVleHRlcm5hbF9jdXN0b21lcl9udW0SC7IBCAoGc3RyaW5n0gENY3VzdG9tZXJfdHlwZfoBJAoVeC1kaXNjcmltaW5hdG9yLXZhbHVlEgsSCWN1c3RvbWVyCgqRAQoGUGVyc29uEoYBwgEYChYjL2RlZmluaXRpb25zL0N1c3RvbWVywgFDsgEICgZvYmplY3TKATUKGQoKZmlyc3RfbmFtZRILsgEICgZzdHJpbmcKGAoJbGFzdF9uYW1lEguyAQgKBnN0cmluZ/oBIgoVeC1kaXNjcmltaW5hdG9yLXZhbHVlEgkSB3BlcnNvbgoKngEKDE9yZ2FuaXphdGlvbhKNAcIBGAoWIy9kZWZpbml0aW9ucy9DdXN0b21lcsIBRJoBEW9yZ2FuaXphdGlvbl9uYW1lsgEICgZvYmplY3TKASIKIAoRb3JnYW5pemF0aW9uX25hbWUSC7IBCAoGc3RyaW5n+gEoChV4LWRpc2NyaW1pbmF0b3ItdmFsdWUSDxINb3JnYW5pemF0aW9uCgpeCghBcGlFcnJvchJSmgEEY29kZZoBB21lc3NhZ2WyAQgKBm9iamVjdMoBMwoWCgRjb2RlEg6yAQgKBnN0cmluZ9gBAQoZCgdtZXNzYWdlEg6yAQgKBnN0cmluZ9gBAQ==')),
);

/// From: 2_0/issue_9086_expected.yaml
final OpenApiProto<v3.Document> fixtures_2_0_issue_9086_expected = (
  model: surface.Model.fromBuffer(base64Decode('CglCdWdneSBBcGkSEwoEYmFyMioLCgFuEgZudW1iZXISKQoaX2Zvb19iYXJfcG9zdF8yMDBfcmVzcG9uc2UqCwoBbhIGbnVtYmVyEncKFVBPU1RfZm9vX2JhclJlc3BvbnNlcxo1UE9TVF9mb29fYmFyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2Zvb19iYXIqJwoHMjAwICovKhIaX2Zvb19iYXJfcG9zdF8yMDBfcmVzcG9uc2UYAxJkChZQT1NUX2Zvb19iYXIyUmVzcG9uc2VzGjdQT1NUX2Zvb19iYXIyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2Zvb19iYXIyKhEKBzIwMCAqLyoSBGJhcjIYAxo1EggvZm9vL2JhchoEUE9TVCoMUE9TVF9mb29fYmFyUhVQT1NUX2Zvb19iYXJSZXNwb25zZXMaOBIJL2Zvby9iYXIyGgRQT1NUKg1QT1NUX2Zvb19iYXIyUhZQT1NUX2Zvb19iYXIyUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglCdWdneSBBcGkyAzEuMBoDCgEvIq0BCl8KCC9mb28vYmFyElMyUUJPEk0KAzIwMBJGCkQKAm9rGj4KPAoDKi8qEjUKMxIxCi8jL2NvbXBvbmVudHMvc2NoZW1hcy9fZm9vX2Jhcl9wb3N0XzIwMF9yZXNwb25zZQpKCgkvZm9vL2JhcjISPTI7QjkSNwoDMjAwEjAKLgoCb2saKAomCgMqLyoSHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL2JhcjIqoQEKngEKQgoEYmFyMhI6Cjg6ChIIbjogNC41NgrKAQZvYmplY3T6ARsKGQoBbhIUChI6BxIFNC41NgrKAQZudW1iZXKCAgIQAApYChpfZm9vX2Jhcl9wb3N0XzIwMF9yZXNwb25zZRI6Cjg6ChIIbjogMS4yMwrKAQZvYmplY3T6ARsKGQoBbhIUChI6BxIFMS4yMwrKAQZudW1iZXKCAgIQAEomChp4LW9yaWdpbmFsLXN3YWdnZXItdmVyc2lvbhIIEgYiMi4wIgo=')),
);

/// From: 2_0/issue_9086.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue_9086 = (
  model: surface.Model.fromBuffer(base64Decode('CglCdWdneSBBcGkSEwoEYmFyMioLCgFuEgZudW1iZXISEQoCT0sqCwoBbhIGbnVtYmVyGh4SCC9mb28vYmFyGgRQT1NUKgxQT1NUX2Zvb19iYXIaIBIJL2Zvby9iYXIyGgRQT1NUKg1QT1NUX2Zvb19iYXIy')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASEAoJQnVnZ3kgQXBpEgMxLjAyEGFwcGxpY2F0aW9uL2pzb25CjgESUgoIL2Zvby9iYXISRiJESkIKQAoDMjAwEjkKNwoCb2sSMQovqgECEACyAQgKBm9iamVjdMoBHAoaCgFuEhWyAQgKBm51bWJlcvIBBxIFMS4yMwoSOAoJL2Zvby9iYXIyEisiKUonCiUKAzIwMBIeChwKAm9rEhYKFAoSIy9kZWZpbml0aW9ucy9iYXIySjkKNwoEYmFyMhIvqgECEACyAQgKBm9iamVjdMoBHAoaCgFuEhWyAQgKBm51bWJlcvIBBxIFNC41Ngo=')),
);

/// From: 2_0/arrayRefBody.yaml
final OpenApiProto<v2.Document> fixtures_2_0_array_ref_body = (
  model: surface.Model.fromBuffer(base64Decode('CgxhcnJheVJlZkJvZHkSRQoFSW5wdXQqDAoCaWQSBnN0cmluZyoVCgNhZ2USB2ludGVnZXIiBWludDMyKhcKAmR0EgZzdHJpbmciCWRhdGUtdGltZRJoChhDcmVhdGVFeGFtcGxlc1BhcmFtZXRlcnMaO0NyZWF0ZUV4YW1wbGVzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZUV4YW1wbGVzKg8KBGJvZHkSBUlucHV0GAIaZgoOY3JlYXRlRXhhbXBsZXMSCS9leGFtcGxlcxoEUE9TVCIZQ3JlYXRlIGFuIGFycmF5IG9mIGlucHV0cyoOQ3JlYXRlRXhhbXBsZXNKGENyZWF0ZUV4YW1wbGVzUGFyYW1ldGVycw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASEAoMYXJyYXlSZWZCb2R5KgAaD3d3dy5leGFtcGxlLmNvbSIBLyoFaHR0cHMyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25CzgESywEKCS9leGFtcGxlcxK9ASK6AQoIRXhhbXBsZXMaGUNyZWF0ZSBhbiBhcnJheSBvZiBpbnB1dHMqDmNyZWF0ZUV4YW1wbGVzMhBhcHBsaWNhdGlvbi9qc29uQkwKSgpIChJpbnB1dHMgZGVzY3JpcHRpb24SBGJvZHkaBGJvZHkgASoksgEHCgVhcnJheboBFwoVChMjL2RlZmluaXRpb25zL0lucHV0SiMKIQoDMjAwEhoKGAoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aAEptCmsKBUlucHV0EmIaBUlucHV0sgEICgZvYmplY3TKAU0KEQoCaWQSC7IBCAoGc3RyaW5nChoKA2FnZRITEgVpbnQzMrIBCQoHaW50ZWdlcgocCgJkdBIWEglkYXRlLXRpbWWyAQgKBnN0cmluZ3IaCghFeGFtcGxlcxIORXhhbXBsZSBpbnB1dHM=')),
);

/// From: 2_0/python-flask/petstore.yaml
final OpenApiProto<v2.Document> fixtures_2_0_python_flask_petstore = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/petstore-with-fake-endpoints-for-testing-playframework-with-security.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_with_fake_endpoints_for_testing_playframework_with_security = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEpgBCgVPcmRlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqFwoFcGV0SWQSB2ludGVnZXIiBWludDY0KhoKCHF1YW50aXR5EgdpbnRlZ2VyIgVpbnQzMiodCghzaGlwRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqEAoGc3RhdHVzEgZzdHJpbmcqEwoIY29tcGxldGUSB2Jvb2xlYW4SMAoIQ2F0ZWdvcnkqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZxKtAQoEVXNlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqEgoIdXNlcm5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKg8KBWVtYWlsEgZzdHJpbmcqEgoIcGFzc3dvcmQSBnN0cmluZyoPCgVwaG9uZRIGc3RyaW5nKhwKCnVzZXJTdGF0dXMSB2ludGVnZXIiBWludDMyEisKA1RhZyoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEnsKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqDQoEdGFncxIDVGFnGAIqEAoGc3RhdHVzEgZzdHJpbmcSSAoLQXBpUmVzcG9uc2UqFgoEY29kZRIHaW50ZWdlciIFaW50MzIqDgoEdHlwZRIGc3RyaW5nKhEKB21lc3NhZ2USBnN0cmluZxJXChNVcGRhdGVQZXRQYXJhbWV0ZXJzGjFVcGRhdGVQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVXBkYXRlUGV0Kg0KBGJvZHkSA1BldBgDEk4KEEFkZFBldFBhcmFtZXRlcnMaK0FkZFBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBBZGRQZXQqDQoEYm9keRIDUGV0GAMScwoaRmluZFBldHNCeVN0YXR1c1BhcmFtZXRlcnMaP0ZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRmluZFBldHNCeVN0YXR1cyoUCgZzdGF0dXMSBnN0cmluZxgCKAMSlwEKGUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMaPUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEZpbmRQZXRzQnlTdGF0dXMqHAoTMjAwIGFwcGxpY2F0aW9uL3htbBIDUGV0GAIqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgCGjYKCXVwZGF0ZVBldBIEL3BldBoDUFVUKglVcGRhdGVQZXRKE1VwZGF0ZVBldFBhcmFtZXRlcnMaLgoGYWRkUGV0EgQvcGV0GgRQT1NUKgZBZGRQZXRKEEFkZFBldFBhcmFtZXRlcnMauAEKEGZpbmRQZXRzQnlTdGF0dXMSES9wZXQvZmluZEJ5U3RhdHVzGgNHRVQiQ011bHRpcGxlIHN0YXR1cyB2YWx1ZXMgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MqEEZpbmRQZXRzQnlTdGF0dXNKGkZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzUhlGaW5kUGV0c0J5U3RhdHVzUmVzcG9uc2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS3gEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGoIBVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiBGb3IgdGhpcyBzYW1wbGUsIHlvdSBjYW4gdXNlIHRoZSBhcGkga2V5IGBzcGVjaWFsLWtleWAgdG8gdGVzdCB0aGUgYXV0aG9yaXphdGlvbiBmaWx0ZXJzLjI+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwaE3BldHN0b3JlLnN3YWdnZXIuaW8iAy92MioEaHR0cEKZCBLfBAoEL3BldBLWBBrQAgoDcGV0EhZVcGRhdGUgYW4gZXhpc3RpbmcgcGV0Kgl1cGRhdGVQZXQyD2FwcGxpY2F0aW9uL3htbDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbjoPYXBwbGljYXRpb24veG1sQlcKVQpTCi5QZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlEgRib2R5GgRib2R5IAEqEwoRIy9kZWZpbml0aW9ucy9QZXRKWwoeCgM0MDASFwoVChNJbnZhbGlkIElEIHN1cHBsaWVkChgKAzQwNBIRCg8KDVBldCBub3QgZm91bmQKHwoDNDA1EhgKFgoUVmFsaWRhdGlvbiBleGNlcHRpb25iKgooCg1wZXRzdG9yZV9hdXRoEhcKCndyaXRlOnBldHMKCXJlYWQ6cGV0cyKAAgoDcGV0EhpBZGQgYSBuZXcgcGV0IHRvIHRoZSBzdG9yZSoGYWRkUGV0Mg9hcHBsaWNhdGlvbi94bWwyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb246D2FwcGxpY2F0aW9uL3htbEJXClUKUwouUGV0IG9iamVjdCB0aGF0IG5lZWRzIHRvIGJlIGFkZGVkIHRvIHRoZSBzdG9yZRIEYm9keRoEYm9keSABKhMKESMvZGVmaW5pdGlvbnMvUGV0ShoKGAoDNDA1EhEKDwoNSW52YWxpZCBpbnB1dGIaChgKDnBldHN0b3JlX3Rva2VuEgYKBGJhc2UStAMKES9wZXQvZmluZEJ5U3RhdHVzEp4DEpsDCgNwZXQSFEZpbmRzIFBldHMgYnkgc3RhdHVzGkNNdWx0aXBsZSBzdGF0dXMgdmFsdWVzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzKhBmaW5kUGV0c0J5U3RhdHVzMg9hcHBsaWNhdGlvbi94bWwyEGFwcGxpY2F0aW9uL2pzb25CmQEKlgESkwEakAEIARIFcXVlcnkaM1N0YXR1cyB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIGNvbnNpZGVyZWQgZm9yIGZpbHRlciIGc3RhdHVzMgVhcnJheUI8CgZzdHJpbmcqDBIKYXZhaWxhYmxlCoIBDBIKYXZhaWxhYmxlCoIBChIIcGVuZGluZwqCAQcSBXNvbGQKSgNjc3ZKaApFCgMyMDASPgo8ChRzdWNjZXNzZnVsIG9wZXJhdGlvbhIkCiKyAQcKBWFycmF5ugEVChMKESMvZGVmaW5pdGlvbnMvUGV0Ch8KAzQwMBIYChYKFEludmFsaWQgc3RhdHVzIHZhbHVlSp0LCsYCCgVPcmRlchK8AhoJUGV0IE9yZGVyIiZBbiBvcmRlciBmb3IgYSBwZXRzIGZyb20gdGhlIHBldCBzdG9yZbIBCAoGb2JqZWN0ygHwAQoZCgJpZBITEgVpbnQ2NLIBCQoHaW50ZWdlcgocCgVwZXRJZBITEgVpbnQ2NLIBCQoHaW50ZWdlcgofCghxdWFudGl0eRITEgVpbnQzMrIBCQoHaW50ZWdlcgoiCghzaGlwRGF0ZRIWEglkYXRlLXRpbWWyAQgKBnN0cmluZwpMCgZzdGF0dXMSQiIMT3JkZXIgU3RhdHVzogEJEgdwbGFjZWQKogELEglhcHByb3ZlZAqiAQwSCmRlbGl2ZXJlZAqyAQgKBnN0cmluZwoiCghjb21wbGV0ZRIWKggSBmZhbHNlCrIBCQoHYm9vbGVhbuIBBwoFT3JkZXIKewoIQ2F0ZWdvcnkSbxoMUGV0IGNhdGVnb3J5IhRBIGNhdGVnb3J5IGZvciBhIHBldLIBCAoGb2JqZWN0ygEwChkKAmlkEhMSBWludDY0sgEJCgdpbnRlZ2VyChMKBG5hbWUSC7IBCAoGc3RyaW5n4gEKCghDYXRlZ29yeQqyAgoEVXNlchKpAhoGYSBVc2VyIitBIFVzZXIgd2hvIGlzIHB1cmNoYXNpbmcgZnJvbSB0aGUgcGV0IHN0b3JlsgEICgZvYmplY3TKAdwBChkKAmlkEhMSBWludDY0sgEJCgdpbnRlZ2VyChcKCHVzZXJuYW1lEguyAQgKBnN0cmluZwoYCglmaXJzdE5hbWUSC7IBCAoGc3RyaW5nChcKCGxhc3ROYW1lEguyAQgKBnN0cmluZwoUCgVlbWFpbBILsgEICgZzdHJpbmcKFwoIcGFzc3dvcmQSC7IBCAoGc3RyaW5nChQKBXBob25lEguyAQgKBnN0cmluZwouCgp1c2VyU3RhdHVzEiASBWludDMyIgtVc2VyIFN0YXR1c7IBCQoHaW50ZWdlcuIBBgoEVXNlcgpnCgNUYWcSYBoHUGV0IFRhZyIPQSB0YWcgZm9yIGEgcGV0sgEICgZvYmplY3TKATAKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXIKEwoEbmFtZRILsgEICgZzdHJpbmfiAQUKA1RhZwqAAwoDUGV0EvgCGgVhIFBldCIfQSBwZXQgZm9yIHNhbGUgaW4gdGhlIHBldCBzdG9yZZoBBG5hbWWaAQlwaG90b1VybHOyAQgKBm9iamVjdMoBpgIKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXIKJAoIY2F0ZWdvcnkSGAoWIy9kZWZpbml0aW9ucy9DYXRlZ29yeQofCgRuYW1lEheyAQgKBnN0cmluZ/IBCRIHZG9nZ2llCgo2CglwaG90b1VybHMSKbIBBwoFYXJyYXm6AQ0KC7IBCAoGc3RyaW5n4gEMCghwaG90b1VybCgBCjQKBHRhZ3MSLLIBBwoFYXJyYXm6ARUKEwoRIy9kZWZpbml0aW9ucy9UYWfiAQcKA3RhZygBClQKBnN0YXR1cxJKIhdwZXQgc3RhdHVzIGluIHRoZSBzdG9yZaIBDBIKYXZhaWxhYmxlCqIBChIIcGVuZGluZwqiAQcSBXNvbGQKsgEICgZzdHJpbmfiAQUKA1BldAqzAQoLQXBpUmVzcG9uc2USowEaFEFuIHVwbG9hZGVkIHJlc3BvbnNlIjNEZXNjcmliZXMgdGhlIHJlc3VsdCBvZiB1cGxvYWRpbmcgYW4gaW1hZ2UgcmVzb3VyY2WyAQgKBm9iamVjdMoBSgobCgRjb2RlEhMSBWludDMysgEJCgdpbnRlZ2VyChMKBHR5cGUSC7IBCAoGc3RyaW5nChYKB21lc3NhZ2USC7IBCAoGc3RyaW5nar0FCpIFCg5wZXRzdG9yZV90b2tlbhL/BDL8BAoGb2F1dGgyEgphY2Nlc3NDb2RlGm4KbAoEYmFzZRJkbm90IHN1cmUgaWYgd2Ugd2lsbCBiZSB1c2luZyBzY29wZXMsIGF0IGxlYXN0IGluIHRoZSBiZWdpbm5pbmcsIGJ1dCBzaW5jZSB3ZSBuZWVkIHRvIHNwZWNpZnkgb25lLi4uLiJbaHR0cHM6Ly9rZXljbG9hay1kZXYuYnVzaW5lc3Muc3RpbmdyYXkuY29tL2F1dGgvcmVhbG1zL0NTTG9jYWwvcHJvdG9jb2wvb3BlbmlkLWNvbm5lY3QvYXV0aCpcaHR0cHM6Ly9rZXljbG9hay1kZXYuYnVzaW5lc3Muc3RpbmdyYXkuY29tL2F1dGgvcmVhbG1zL0NTTG9jYWwvcHJvdG9jb2wvb3BlbmlkLWNvbm5lY3QvdG9rZW4ySHNlY3VyaXR5IGRlZmluaXRpb24gZm9yIHVzaW5nIGtleWNsb2FrIGF1dGhlbnRpY2F0aW9uIHdpdGggY29udHJvbCBzaXRlLjpsCgl4LWp3a3NVcmwSXxJdaHR0cHM6Ly9rZXljbG9hay1kZXYuYnVzaW5lc3Muc3RpbmdyYXkuY29tL2F1dGgvcmVhbG1zL0NTTG9jYWwvcHJvdG9jb2wvb3BlbmlkLWNvbm5lY3QvY2VydHMKOoIBChR4LXRva2VuSW50cm9zcGVjdFVybBJqEmhodHRwczovL2tleWNsb2FrLWRldi5idXNpbmVzcy5zdGluZ3JheS5jb20vYXV0aC9yZWFsbXMvQ1NMb2NhbC9wcm90b2NvbC9vcGVuaWQtY29ubmVjdC90b2tlbi9pbnRyb3NwZWN0CgomCgdhcGlfa2V5EhsSGQoGYXBpS2V5EgdhcGlfa2V5GgZoZWFkZXJyIQoDcGV0EhpFdmVyeXRoaW5nIGFib3V0IHlvdXIgUGV0c3IiCgVzdG9yZRIZQWNjZXNzIHRvIFBldHN0b3JlIG9yZGVyc3IdCgR1c2VyEhVPcGVyYXRpb25zIGFib3V0IHVzZXI=')),
);

/// From: 2_0/rust-server/rust-server-test.yaml
final OpenApiProto<v2.Document> fixtures_2_0_rust_server_rust_server_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBydXN0LXNlcnZlci10ZXN0EkoKGmFkZGl0aW9uYWxQcm9wZXJ0aWVzT2JqZWN0KiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARJACgthbGxPZk9iamVjdCoYCg5zYW1wbGVQcm9wZXJ0eRIGc3RyaW5nKhcKCGFsbF9vZl8xEgliYXNlQWxsT2YYAxIpCgliYXNlQWxsT2YqHAoSc2FtcGxlQmFzZVByb3BlcnR5EgZzdHJpbmcSTgoSYU51bGxhYmxlQ29udGFpbmVyKhcKDU51bGxhYmxlVGhpbmcSBnN0cmluZyofChVSZXF1aXJlZE51bGxhYmxlVGhpbmcSBnN0cmluZxI8CgVpbm5lcioYCg5yZXF1aXJlZF90aGluZxIGc3RyaW5nKhkKDm9wdGlvbmFsX3RoaW5nEgdpbnRlZ2VyEiMKD09iamVjdE9mT2JqZWN0cyoQCgVpbm5lchIFaW5uZXIYAxIkChFnZXRfeWFtbF9yZXNwb25zZSoPCgV2YWx1ZRIGc3RyaW5nEjMKD25lc3RlZF9yZXNwb25zZSoMCgJpZBIGc3RyaW5nKhIKCHBhc3N3b3JkEgZzdHJpbmcSNwoPbmVzdGVkX3Jlc3BvbnNlKiQKD25lc3RlZF9yZXNwb25zZRIPbmVzdGVkX3Jlc3BvbnNlGAMSawoSRHVtbXlQdXRQYXJhbWV0ZXJzGi9EdW1teVB1dFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBEdW1teVB1dCokCg9uZXN0ZWRfcmVzcG9uc2USD25lc3RlZF9yZXNwb25zZRgDElUKEkh0bWxQb3N0UGFyYW1ldGVycxovSHRtbFBvc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gSHRtbFBvc3QqDgoEYm9keRIGc3RyaW5nElsKEUh0bWxQb3N0UmVzcG9uc2VzGi1IdG1sUG9zdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgSHRtbFBvc3QqFwoNMjAwIHRleHQvaHRtbBIGc3RyaW5nEh4KDXJhd19qc29uR2V0T0sQASILaW50ZXJmYWNle30SFgoFdmFsdWUQASILaW50ZXJmYWNle30SbAoZU29sb19vYmplY3RQb3N0UGFyYW1ldGVycxo9U29sb19vYmplY3RQb3N0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFNvbG9fb2JqZWN0UG9zdCoQCgV2YWx1ZRIFdmFsdWUYAxJZChNQb3N0X3lhbWxQYXJhbWV0ZXJzGjFQb3N0X3lhbWxQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUG9zdF95YW1sKg8KBXZhbHVlEgZzdHJpbmcSigEKGkdldFN0cnVjdHVyZWRZYW1sUmVzcG9uc2VzGj9HZXRTdHJ1Y3R1cmVkWWFtbFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0U3RydWN0dXJlZFlhbWwqKwoUMjAwIGFwcGxpY2F0aW9uL3lhbWwSEWdldF95YW1sX3Jlc3BvbnNlGAMaIQoIZHVtbXlHZXQSBi9kdW1teRoDR0VUKghEdW1teUdldBo1CghkdW1teVB1dBIGL2R1bW15GgNQVVQqCER1bW15UHV0ShJEdW1teVB1dFBhcmFtZXRlcnMaSAoIaHRtbFBvc3QSBS9odG1sGgRQT1NUKghIdG1sUG9zdEoSSHRtbFBvc3RQYXJhbWV0ZXJzUhFIdG1sUG9zdFJlc3BvbnNlcxo5ChBmaWxlX3Jlc3BvbnNlR2V0Eg4vZmlsZV9yZXNwb25zZRoDR0VUKhBGaWxlX3Jlc3BvbnNlR2V0GioKC3Jhd19qc29uR2V0EgkvcmF3X2pzb24aA0dFVCoLUmF3X2pzb25HZXQaUQoPc29sb19vYmplY3RQb3N0Egwvc29sby1vYmplY3QaBFBPU1QqD1NvbG9fb2JqZWN0UG9zdEoZU29sb19vYmplY3RQb3N0UGFyYW1ldGVycxp3Cglwb3N0X3lhbWwSCi9wb3N0LXlhbWwaBFBPU1QiOFRlc3Qgc2VuZGluZyBhbiBhcmJpdHJhcnkgdW5zdXBwb3J0ZWQgZm9ybWF0IC0gZS5nLiBZQU1MKglQb3N0X3lhbWxKE1Bvc3RfeWFtbFBhcmFtZXRlcnMahwEKEWdldFN0cnVjdHVyZWRZYW1sEhQvZ2V0LXN0cnVjdHVyZWQteWFtbBoDR0VUIihUZXN0IHJldHVybmluZyBhcmJpdHJhcnkgc3RydWN0dXJlZCBZQU1MKhFHZXRTdHJ1Y3R1cmVkWWFtbFIaR2V0U3RydWN0dXJlZFlhbWxSZXNwb25zZXMaTAoJQWxsT2ZfR2V0EgYvYWxsT2YaA0dFVCInVGVzdCBnZXR0aW5nIGFuIG9iamVjdCB3aGljaCB1c2VzIGFsbE9mKglBbGxPZl9HZXQ=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASTwoQcnVzdC1zZXJ2ZXItdGVzdBIFMi4zLjQaNFRoaXMgc3BlYyBpcyBmb3IgdGVzdGluZyBydXN0LXNlcnZlci1zcGVjaWZpYyB0aGluZ3MqBGh0dHBCwAgSmwEKBi9kdW1teRKQARJKEihBIGR1bW15IGVuZHBvaW50IHRvIG1ha2UgdGhlIHNwZWMgdmFsaWQuKghkdW1teUdldEoUChIKAzIwMBILCgkKB1N1Y2Nlc3MaQioIZHVtbXlQdXRCIBIeChwjL3BhcmFtZXRlcnMvbmVzdGVkX3Jlc3BvbnNlShQKEgoDMjAwEgsKCQoHU3VjY2VzcxKFAQoFL2h0bWwSfCJ6EhJUZXN0IEhUTUwgaGFuZGxpbmcqCGh0bWxQb3N0Mgl0ZXh0L2h0bWw6CXRleHQvaHRtbEIfCh0KGxIEYm9keRoEYm9keSABKguyAQgKBnN0cmluZ0ojCiEKAzIwMBIaChgKB1N1Y2Nlc3MSDQoLsgEICgZzdHJpbmcSZAoOL2ZpbGVfcmVzcG9uc2USUhJQEgpHZXQgYSBmaWxlKhBmaWxlX3Jlc3BvbnNlR2V0MhBhcHBsaWNhdGlvbi9qc29uSh4KHAoDMjAwEhUKEwoHU3VjY2VzcxIIEgYyBGZpbGUSXgoJL3Jhd19qc29uElESTxIbR2V0IGFuIGFyYml0cmFyeSBKU09OIGJsb2IuKgtyYXdfanNvbkdldEojCiEKAzIwMBIaChgKB1N1Y2Nlc3MSDQoLsgEICgZvYmplY3QShQEKDC9zb2xvLW9iamVjdBJ1InMSG1NlbmQgYW4gYXJiaXRyYXJ5IEpTT04gYmxvYioPc29sb19vYmplY3RQb3N0OhBhcHBsaWNhdGlvbi9qc29uQiAKHgocEgV2YWx1ZRoEYm9keSABKguyAQgKBm9iamVjdEoPCg0KAzIwNBIGCgQKAk9LErMBCgovcG9zdC15YW1sEqQBIqEBGjhUZXN0IHNlbmRpbmcgYW4gYXJiaXRyYXJ5IHVuc3VwcG9ydGVkIGZvcm1hdCAtIGUuZy4gWUFNTCoJcG9zdF95YW1sOhBhcHBsaWNhdGlvbi95YW1sQjcKNQozChVUaGUgWUFNTCBib2R5IHRvIHRlc3QSBXZhbHVlGgRib2R5IAEqC7IBCAoGc3RyaW5nSg8KDQoDMjA0EgYKBAoCT0sSoQEKFC9nZXQtc3RydWN0dXJlZC15YW1sEogBEoUBGihUZXN0IHJldHVybmluZyBhcmJpdHJhcnkgc3RydWN0dXJlZCBZQU1MKhFnZXRTdHJ1Y3R1cmVkWWFtbDIQYXBwbGljYXRpb24veWFtbEo0CjIKAzIwMBIrCikKAk9LEiMKIQofIy9kZWZpbml0aW9ucy9nZXRfeWFtbF9yZXNwb25zZRJwCgYvYWxsT2YSZhJkGidUZXN0IGdldHRpbmcgYW4gb2JqZWN0IHdoaWNoIHVzZXMgYWxsT2YqCUFsbE9mX0dldEouCiwKAzIwMBIlCiMKAk9LEh0KGwoZIy9kZWZpbml0aW9ucy9hbGxPZk9iamVjdEqoBQphChphZGRpdGlvbmFsUHJvcGVydGllc09iamVjdBJDIh1BbiBhZGRpdGlvbmFsUHJvcGVydGllc09iamVjdKoBDQoLsgEICgZzdHJpbmeyAQgKBm9iamVjdPIBBhIEZm9vCgpNCgthbGxPZk9iamVjdBI+wgEZChcjL2RlZmluaXRpb25zL2Jhc2VBbGxPZsoBHwodCg5zYW1wbGVQcm9wZXJ0eRILsgEICgZzdHJpbmcKPgoJYmFzZUFsbE9mEjGyAQgKBm9iamVjdMoBIwohChJzYW1wbGVCYXNlUHJvcGVydHkSC7IBCAoGc3RyaW5nCrEBChJhTnVsbGFibGVDb250YWluZXISmgGaARVSZXF1aXJlZE51bGxhYmxlVGhpbmeyAQgKBm9iamVjdMoBdAo0Cg1OdWxsYWJsZVRoaW5nEiOyAQgKBnN0cmluZ/oBFQoKeC1udWxsYWJsZRIHEgV0cnVlCgo8ChVSZXF1aXJlZE51bGxhYmxlVGhpbmcSI7IBCAoGc3RyaW5n+gEVCgp4LW51bGxhYmxlEgcSBXRydWUKCqEBCg9PYmplY3RPZk9iamVjdHMSjQEiFEFuIG9iamVjdCBvZiBvYmplY3RzsgEICgZvYmplY3TKAWkKZwoFaW5uZXISXpoBDnJlcXVpcmVkX3RoaW5nsgEICgZvYmplY3TKAT8KHQoOcmVxdWlyZWRfdGhpbmcSC7IBCAoGc3RyaW5nCh4KDm9wdGlvbmFsX3RoaW5nEgyyAQkKB2ludGVnZXIKXAoRZ2V0X3lhbWxfcmVzcG9uc2USRyITc3RydWN0dXJlZCByZXNwb25zZbIBCAoGb2JqZWN0ygEkCiIKBXZhbHVlEhkiDElubmVyIHN0cmluZ7IBCAoGc3RyaW5nUmYKZAoPbmVzdGVkX3Jlc3BvbnNlElEKTxIPbmVzdGVkX3Jlc3BvbnNlGgRib2R5IAEqNJoBAmlkygEsChEKAmlkEguyAQgKBnN0cmluZwoXCghwYXNzd29yZBILsgEICgZzdHJpbmc=')),
);

/// From: 2_0/pathWithHtmlEntity.yaml
final OpenApiProto<v2.Document> fixtures_2_0_path_with_html_entity = (
  model: surface.Model.fromBuffer(base64Decode('ChpwYXRoIHdpdGggaHRtbCBlbnRpdHkgdGVzdBI7CgpkaXJlY3RfbWFwKi0KFWFkZGl0aW9uYWxfcHJvcGVydGllcxISbWFwW3N0cmluZ11ib29sZWFuGAESeQoHTWFwVGVzdCoaCgpkaXJlY3RfbWFwEgpkaXJlY3RfbWFwGAMqIgoMaW5kaXJlY3RfbWFwEhBTdHJpbmdCb29sZWFuTWFwGAMqFwoIcmVmX3Rlc3QSCVN0cmluZ1JlZhgDKhUKC2RpcmVjdF90ZXN0EgZzdHJpbmcSQQoQU3RyaW5nQm9vbGVhbk1hcCotChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEm1hcFtzdHJpbmddYm9vbGVhbhgBEhwKCVN0cmluZ1JlZioPCgV2YWx1ZRIGc3RyaW5nEkIKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDQoEdGFncxIDVGFnGAISKwoDVGFnKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSMAoIQ2F0ZWdvcnkqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZxocEggvZm9vPWJhchoDR0VUKgtHRVRfZm9vPWJhcg==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASQwoacGF0aCB3aXRoIGh0bWwgZW50aXR5IHRlc3QSBTEuMC4wGh5UZXN0IGZvciByZXNwb25zZSBjb2RlIGRlZmF1bHQiAS9CcRJvCggvZm9vPWJhchJjEmESBFRlc3QyEGFwcGxpY2F0aW9uL2pzb25KRwofCgMyMDASGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbgokCgdkZWZhdWx0EhkKFwoVSW50ZXJuYWwgc2VydmVyIGVycm9ySpYFCrwBCgdNYXBUZXN0ErABsgEICgZvYmplY3TKAaEBCioKCmRpcmVjdF9tYXASHKoBDgoMsgEJCgdib29sZWFusgEICgZvYmplY3QKMAoMaW5kaXJlY3RfbWFwEiAKHiMvZGVmaW5pdGlvbnMvU3RyaW5nQm9vbGVhbk1hcAolCghyZWZfdGVzdBIZChcjL2RlZmluaXRpb25zL1N0cmluZ1JlZgoaCgtkaXJlY3RfdGVzdBILsgEICgZzdHJpbmcKJQoQU3RyaW5nQm9vbGVhbk1hcBIRqgEOCgyyAQkKB2Jvb2xlYW4KGAoJU3RyaW5nUmVmEguyAQgKBnN0cmluZwq1AQoDUGV0Eq0BGgVhIFBldCIfQSBwZXQgZm9yIHNhbGUgaW4gdGhlIHBldCBzdG9yZbIBCAoGb2JqZWN0ygF3ChkKAmlkEhMSBWludDY0sgEJCgdpbnRlZ2VyCiQKCGNhdGVnb3J5EhgKFiMvZGVmaW5pdGlvbnMvQ2F0ZWdvcnkKNAoEdGFncxIssgEHCgVhcnJheboBFQoTChEjL2RlZmluaXRpb25zL1RhZ+IBBwoDdGFnKAEKXwoDVGFnElgaB1BldCBUYWciD0EgdGFnIGZvciBhIHBldLIBCAoGb2JqZWN0ygEwChkKAmlkEhMSBWludDY0sgEJCgdpbnRlZ2VyChMKBG5hbWUSC7IBCAoGc3RyaW5nCnsKCENhdGVnb3J5Em8aDFBldCBjYXRlZ29yeSIUQSBjYXRlZ29yeSBmb3IgYSBwZXSyAQgKBm9iamVjdMoBMAoZCgJpZBITEgVpbnQ2NLIBCQoHaW50ZWdlcgoTCgRuYW1lEguyAQgKBnN0cmluZ+IBCgoIQ2F0ZWdvcnk=')),
);

/// From: 2_0/emptyBaseModel.yaml
final OpenApiProto<v2.Document> fixtures_2_0_empty_base_model = (
  model: surface.Model.fromBuffer(base64Decode('Ch1UZXN0IENvbW1hbmQgbW9kZWwgZ2VuZXJhdGlvbhIYCgdDb21tYW5kEAEiC2ludGVyZmFjZXt9EiQKC1JlYWxDb21tYW5kKhUKCGFsbF9vZl8xEgdDb21tYW5kGAMSLQoIQXBpRXJyb3IqDgoEY29kZRIGc3RyaW5nKhEKB21lc3NhZ2USBnN0cmluZxIvCg5iX3JlYWxfY29tbWFuZCodCgxyZWFsX2NvbW1hbmQSC1JlYWxDb21tYW5kGAMSggEKHEV4ZWN1dGVSZWFsQ29tbWFuZFBhcmFtZXRlcnMaQ0V4ZWN1dGVSZWFsQ29tbWFuZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBFeGVjdXRlUmVhbENvbW1hbmQqHQoMcmVhbF9jb21tYW5kEgtSZWFsQ29tbWFuZBgDGlYKEmV4ZWN1dGVSZWFsQ29tbWFuZBIIL2V4ZWN1dGUaBFBPU1QqEkV4ZWN1dGVSZWFsQ29tbWFuZEocRXhlY3V0ZVJlYWxDb21tYW5kUGFyYW1ldGVycw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASRQodVGVzdCBDb21tYW5kIG1vZGVsIGdlbmVyYXRpb24SBTEuMC4wGh1UZXN0IENvbW1hbmQgbW9kZWwgZ2VuZXJhdGlvbhoObG9jYWxob3N0OjgwODAqBWh0dHBzQuQCEuECCggvZXhlY3V0ZRLUAiLRAioSZXhlY3V0ZVJlYWxDb21tYW5kQmAKXgpcCidBIHBheWxvYWQgZm9yIGV4ZWN1dGluZyBhIHJlYWwgY29tbWFuZC4SDHJlYWxfY29tbWFuZBoEYm9keSABKhsKGSMvZGVmaW5pdGlvbnMvUmVhbENvbW1hbmRK2AEKMwoDMjA0EiwKKgooU3VjY2Vzc2Z1bCByZXF1ZXN0LiBObyBjb250ZW50IHJldHVybmVkLgozCgM0MDASLAoqCgxCYWQgcmVxdWVzdC4SGgoYChYjL2RlZmluaXRpb25zL0FwaUVycm9yCjEKAzQwNBIqCigKCk5vdCBmb3VuZC4SGgoYChYjL2RlZmluaXRpb25zL0FwaUVycm9yCjkKB2RlZmF1bHQSLgosCg5Vbmtub3duIGVycm9yLhIaChgKFiMvZGVmaW5pdGlvbnMvQXBpRXJyb3JKiQMKZgoHQ29tbWFuZBJbGgdDb21tYW5kIihUaGUgYmFzZSBvYmplY3QgZm9yIGFsbCBjb21tYW5kIG9iamVjdHMusgEICgZvYmplY3T6ARoKDngtaXMtZnJlZS1mb3JtEggSBmZhbHNlCgpJCgtSZWFsQ29tbWFuZBI6GgtSZWFsQ29tbWFuZCIRVGhlIHJlYWwgY29tbWFuZC7CARcKFSMvZGVmaW5pdGlvbnMvQ29tbWFuZArTAQoIQXBpRXJyb3ISxgEaCEFwaUVycm9yIh9UaGUgYmFzZSBvYmplY3QgZm9yIEFQSSBlcnJvcnMumgEEY29kZZoBB21lc3NhZ2WyAQgKBm9iamVjdMoBfApLCgRjb2RlEkMiM1RoZSBlcnJvciBjb2RlLiBVc3VhbGx5LCBpdCBpcyB0aGUgSFRUUCBlcnJvciBjb2RlLrIBCAoGc3RyaW5n2AEBCi0KB21lc3NhZ2USIiISVGhlIGVycm9yIG1lc3NhZ2UusgEICgZzdHJpbmfYAQFScgpwCg5iX3JlYWxfY29tbWFuZBJeClwKJ0EgcGF5bG9hZCBmb3IgZXhlY3V0aW5nIGEgcmVhbCBjb21tYW5kLhIMcmVhbF9jb21tYW5kGgRib2R5IAEqGwoZIy9kZWZpbml0aW9ucy9SZWFsQ29tbWFuZA==')),
);

/// From: 2_0/petstore-with-date-field.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_with_date_field = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/duplicateOperationIds.yaml
final OpenApiProto<v2.Document> fixtures_2_0_duplicate_operation_ids = (
  model: surface.Model.fromBuffer(base64Decode('CgRmdW4hGiEKCWR1cGxpY2F0ZRIEL29uZRoDR0VUKglEdXBsaWNhdGUaIQoJZHVwbGljYXRlEgQvdHdvGgNHRVQqCUR1cGxpY2F0ZQ==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASDQoEZnVuIRIFMS4wLjEiAy92MUJaEisKBC9vbmUSIxIhKglkdXBsaWNhdGVKFAoSCgMyMDASCwoJCgdzdWNjZXNzEisKBC90d28SIxIhKglkdXBsaWNhdGVKFAoSCgMyMDASCwoJCgdzdWNjZXNz')),
);

/// From: 2_0/issue1226.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue1226 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJZCgxOdW1iZXJIb2xkZXIqFwoFaW50NjQSB2ludGVnZXIiBWludDY0KhYKBWZsb2F0EgZudW1iZXIiBWZsb2F0KhgKBmRvdWJsZRIGbnVtYmVyIgZkb3VibGUSfwoYR2V0TnVtYmVySG9sZGVyUmVzcG9uc2VzGjtHZXROdW1iZXJIb2xkZXJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldE51bWJlckhvbGRlciomChQyMDAgYXBwbGljYXRpb24vanNvbhIMTnVtYmVySG9sZGVyGAMStAEKHE51bWVyaWNRdWVyeVBhcmFtc1BhcmFtZXRlcnMaQ051bWVyaWNRdWVyeVBhcmFtc1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBOdW1lcmljUXVlcnlQYXJhbXMqGQoFaW50NjQSB2ludGVnZXIiBWludDY0KAMqGAoFZmxvYXQSBm51bWJlciIFZmxvYXQoAyoaCgZkb3VibGUSBm51bWJlciIGZG91YmxlKAMaTwoPZ2V0TnVtYmVySG9sZGVyEgsvbnVtYmVyZGF0YRoEUE9TVCoPR2V0TnVtYmVySG9sZGVyUhhHZXROdW1iZXJIb2xkZXJSZXNwb25zZXMaYAoSbnVtZXJpY1F1ZXJ5UGFyYW1zEhMvbnVtZXJpY3F1ZXJ5cGFyYW1zGgNHRVQqEk51bWVyaWNRdWVyeVBhcmFtc0ocTnVtZXJpY1F1ZXJ5UGFyYW1zUGFyYW1ldGVycw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0LhAxKkAQoLL251bWJlcmRhdGESlAEikQESF0dldCBiYWNrIGEgTnVtYmVySG9sZGVyKg9nZXROdW1iZXJIb2xkZXIyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25KQQo/CgMyMDASOAo2ChRzdWNjZXNzZnVsIG9wZXJhdGlvbhIeChwKGiMvZGVmaW5pdGlvbnMvTnVtYmVySG9sZGVyErcCChMvbnVtZXJpY3F1ZXJ5cGFyYW1zEp8CEpwCCgR1c2VyEiVhIHRlc3Qgcm91dGUgZm9yIG51bWVyaWMgcXVlcnkgcGFyYW1zKhJudW1lcmljUXVlcnlQYXJhbXMyEGFwcGxpY2F0aW9uL2pzb25CPAo6EjgaNhIFcXVlcnkiBWludDY0MgdpbnRlZ2VyOgVpbnQ2NFIWEhQ5MjIzMzcyMDM2ODU0Nzc1ODA3CkIvCi0SKxopEgVxdWVyeSIFZmxvYXQyBm51bWJlcjoFZmxvYXRSChIIMy4xNDE1OQpCMQovEi0aKxIFcXVlcnkiBmRvdWJsZTIGbnVtYmVyOgZkb3VibGVSChIIMy4xNDE1OQpKJQojCgdkZWZhdWx0EhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb25KgQIK/gEKDE51bWJlckhvbGRlchLtASJSQSBtb2RlbCB0byBob2xkIHRoZSB0aHJlZSBudW1iZXIgdHlwZXMgd2hpY2ggc2hvdWxkIG5vIGxvbmdlciBoYXZlIHN0cmluZyBzdWZmaXhlc7IBCAoGb2JqZWN0ygGKAQo0CgVpbnQ2NBIrEgVpbnQ2NCoWEhQ5MjIzMzcyMDM2ODU0Nzc1ODA3CrIBCQoHaW50ZWdlcgonCgVmbG9hdBIeEgVmbG9hdCoKEggzLjE0MTU5CrIBCAoGbnVtYmVyCikKBmRvdWJsZRIfEgZkb3VibGUqChIIMy4xNDE1OQqyAQgKBm51bWJlcmoA')),
);

/// From: 2_0/globalSecurity.json
final OpenApiProto<v2.Document> fixtures_2_0_global_security = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEq0BCgRVc2VyKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoSCgh1c2VybmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqDwoFZW1haWwSBnN0cmluZyoSCghwYXNzd29yZBIGc3RyaW5nKg8KBXBob25lEgZzdHJpbmcqHAoKdXNlclN0YXR1cxIHaW50ZWdlciIFaW50MzISMAoIQ2F0ZWdvcnkqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZxJ7CgNQZXQqFAoCaWQSB2ludGVnZXIiBWludDY0KhYKCGNhdGVnb3J5EghDYXRlZ29yeRgDKg4KBG5hbWUSBnN0cmluZyoVCglwaG90b1VybHMSBnN0cmluZxgCKg0KBHRhZ3MSA1RhZxgCKhAKBnN0YXR1cxIGc3RyaW5nEisKA1RhZyoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEpgBCgVPcmRlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqFwoFcGV0SWQSB2ludGVnZXIiBWludDY0KhoKCHF1YW50aXR5EgdpbnRlZ2VyIgVpbnQzMiodCghzaGlwRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqEAoGc3RhdHVzEgZzdHJpbmcqEwoIY29tcGxldGUSB2Jvb2xlYW4SVwoTVXBkYXRlUGV0UGFyYW1ldGVycxoxVXBkYXRlUGV0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwZGF0ZVBldCoNCgRib2R5EgNQZXQYAxJOChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0Kg0KBGJvZHkSA1BldBgDEnMKGkZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzGj9GaW5kUGV0c0J5U3RhdHVzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEZpbmRQZXRzQnlTdGF0dXMqFAoGc3RhdHVzEgZzdHJpbmcYAigDEpcBChlGaW5kUGV0c0J5U3RhdHVzUmVzcG9uc2VzGj1GaW5kUGV0c0J5U3RhdHVzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBGaW5kUGV0c0J5U3RhdHVzKh0KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAiocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAhJrChhGaW5kUGV0c0J5VGFnc1BhcmFtZXRlcnMaO0ZpbmRQZXRzQnlUYWdzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEZpbmRQZXRzQnlUYWdzKhIKBHRhZ3MSBnN0cmluZxgCKAMSkQEKF0ZpbmRQZXRzQnlUYWdzUmVzcG9uc2VzGjlGaW5kUGV0c0J5VGFnc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgRmluZFBldHNCeVRhZ3MqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgCKhwKEzIwMCBhcHBsaWNhdGlvbi94bWwSA1BldBgCEmYKFEdldFBldEJ5SWRQYXJhbWV0ZXJzGjNHZXRQZXRCeUlkUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldFBldEJ5SWQqGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAQShQEKE0dldFBldEJ5SWRSZXNwb25zZXMaMUdldFBldEJ5SWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFBldEJ5SWQqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgDKhwKEzIwMCBhcHBsaWNhdGlvbi94bWwSA1BldBgDEpkBChtVcGRhdGVQZXRXaXRoRm9ybVBhcmFtZXRlcnMaQVVwZGF0ZVBldFdpdGhGb3JtUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwZGF0ZVBldFdpdGhGb3JtKhEKBXBldElkEgZzdHJpbmcoBCoQCgRuYW1lEgZzdHJpbmcoAioSCgZzdGF0dXMSBnN0cmluZygCEngKE0RlbGV0ZVBldFBhcmFtZXRlcnMaMURlbGV0ZVBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBEZWxldGVQZXQqEwoHYXBpX2tleRIGc3RyaW5nKAEqGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAQSmAEKFFVwbG9hZEZpbGVQYXJhbWV0ZXJzGjNVcGxvYWRGaWxlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwbG9hZEZpbGUqGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAQqHgoSYWRkaXRpb25hbE1ldGFkYXRhEgZzdHJpbmcoAioQCgRmaWxlEgZzdHJpbmcoAhI9Cg5nZXRJbnZlbnRvcnlPSyorChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEG1hcFtzdHJpbmddaW50MzIYARKhAQoVR2V0SW52ZW50b3J5UmVzcG9uc2VzGjVHZXRJbnZlbnRvcnlSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldEludmVudG9yeSooChQyMDAgYXBwbGljYXRpb24vanNvbhIOZ2V0SW52ZW50b3J5T0sYAyonChMyMDAgYXBwbGljYXRpb24veG1sEg5nZXRJbnZlbnRvcnlPSxgDElwKFFBsYWNlT3JkZXJQYXJhbWV0ZXJzGjNQbGFjZU9yZGVyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBsYWNlT3JkZXIqDwoEYm9keRIFT3JkZXIYAxKJAQoTUGxhY2VPcmRlclJlc3BvbnNlcxoxUGxhY2VPcmRlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUGxhY2VPcmRlciofChQyMDAgYXBwbGljYXRpb24vanNvbhIFT3JkZXIYAyoeChMyMDAgYXBwbGljYXRpb24veG1sEgVPcmRlchgDEmYKFkdldE9yZGVyQnlJZFBhcmFtZXRlcnMaN0dldE9yZGVyQnlJZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRPcmRlckJ5SWQqEwoHb3JkZXJJZBIGc3RyaW5nKAQSjwEKFUdldE9yZGVyQnlJZFJlc3BvbnNlcxo1R2V0T3JkZXJCeUlkUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRPcmRlckJ5SWQqHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBU9yZGVyGAMqHgoTMjAwIGFwcGxpY2F0aW9uL3htbBIFT3JkZXIYAxJjChVEZWxldGVPcmRlclBhcmFtZXRlcnMaNURlbGV0ZU9yZGVyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERlbGV0ZU9yZGVyKhMKB29yZGVySWQSBnN0cmluZygEElsKFENyZWF0ZVVzZXJQYXJhbWV0ZXJzGjNDcmVhdGVVc2VyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZVVzZXIqDgoEYm9keRIEVXNlchgDEogBCiNDcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0UGFyYW1ldGVycxpRQ3JlYXRlVXNlcnNXaXRoQXJyYXlJbnB1dFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBDcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0Kg4KBGJvZHkSBFVzZXIYAhKFAQoiQ3JlYXRlVXNlcnNXaXRoTGlzdElucHV0UGFyYW1ldGVycxpPQ3JlYXRlVXNlcnNXaXRoTGlzdElucHV0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dCoOCgRib2R5EgRVc2VyGAISdAoTTG9naW5Vc2VyUGFyYW1ldGVycxoxTG9naW5Vc2VyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExvZ2luVXNlcioUCgh1c2VybmFtZRIGc3RyaW5nKAMqFAoIcGFzc3dvcmQSBnN0cmluZygDEoQBChJMb2dpblVzZXJSZXNwb25zZXMaL0xvZ2luVXNlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTG9naW5Vc2VyKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcqHQoTMjAwIGFwcGxpY2F0aW9uL3htbBIGc3RyaW5nEmoKF0dldFVzZXJCeU5hbWVQYXJhbWV0ZXJzGjlHZXRVc2VyQnlOYW1lUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldFVzZXJCeU5hbWUqFAoIdXNlcm5hbWUSBnN0cmluZygEEpABChZHZXRVc2VyQnlOYW1lUmVzcG9uc2VzGjdHZXRVc2VyQnlOYW1lUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRVc2VyQnlOYW1lKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgRVc2VyGAMqHQoTMjAwIGFwcGxpY2F0aW9uL3htbBIEVXNlchgDEnEKFFVwZGF0ZVVzZXJQYXJhbWV0ZXJzGjNVcGRhdGVVc2VyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwZGF0ZVVzZXIqFAoIdXNlcm5hbWUSBnN0cmluZygEKg4KBGJvZHkSBFVzZXIYAxJhChREZWxldGVVc2VyUGFyYW1ldGVycxozRGVsZXRlVXNlclBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBEZWxldGVVc2VyKhQKCHVzZXJuYW1lEgZzdHJpbmcoBBo2Cgl1cGRhdGVQZXQSBC9wZXQaA1BVVCoJVXBkYXRlUGV0ShNVcGRhdGVQZXRQYXJhbWV0ZXJzGi4KBmFkZFBldBIEL3BldBoEUE9TVCoGQWRkUGV0ShBBZGRQZXRQYXJhbWV0ZXJzGrgBChBmaW5kUGV0c0J5U3RhdHVzEhEvcGV0L2ZpbmRCeVN0YXR1cxoDR0VUIkNNdWx0aXBsZSBzdGF0dXMgdmFsdWVzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzKhBGaW5kUGV0c0J5U3RhdHVzShpGaW5kUGV0c0J5U3RhdHVzUGFyYW1ldGVyc1IZRmluZFBldHNCeVN0YXR1c1Jlc3BvbnNlcxrIAQoOZmluZFBldHNCeVRhZ3MSDy9wZXQvZmluZEJ5VGFncxoDR0VUIl1NdWx0aXBsZSB0YWdzIGNhbiBiZSBwcm92aWRlZCB3aXRoIGNvbW1hIHNlcGFyYXRlZCBzdHJpbmdzLiBVc2UgdGFnMSwgdGFnMiwgdGFnMyBmb3IgdGVzdGluZy4qDkZpbmRQZXRzQnlUYWdzShhGaW5kUGV0c0J5VGFnc1BhcmFtZXRlcnNSF0ZpbmRQZXRzQnlUYWdzUmVzcG9uc2VzGq4BCgpnZXRQZXRCeUlkEgwvcGV0L3twZXRJZH0aA0dFVCJWUmV0dXJucyBhIHBldCB3aGVuIElEIDwgMTAuICBJRCA+IDEwIG9yIG5vbmludGVnZXJzIHdpbGwgc2ltdWxhdGUgQVBJIGVycm9yIGNvbmRpdGlvbnMqCkdldFBldEJ5SWRKFEdldFBldEJ5SWRQYXJhbWV0ZXJzUhNHZXRQZXRCeUlkUmVzcG9uc2VzGlcKEXVwZGF0ZVBldFdpdGhGb3JtEgwvcGV0L3twZXRJZH0aBFBPU1QqEVVwZGF0ZVBldFdpdGhGb3JtShtVcGRhdGVQZXRXaXRoRm9ybVBhcmFtZXRlcnMaQQoJZGVsZXRlUGV0EgwvcGV0L3twZXRJZH0aBkRFTEVURSoJRGVsZXRlUGV0ShNEZWxldGVQZXRQYXJhbWV0ZXJzGk4KCnVwbG9hZEZpbGUSGC9wZXQve3BldElkfS91cGxvYWRJbWFnZRoEUE9TVCoKVXBsb2FkRmlsZUoUVXBsb2FkRmlsZVBhcmFtZXRlcnMadwoMZ2V0SW52ZW50b3J5EhAvc3RvcmUvaW52ZW50b3J5GgNHRVQiK1JldHVybnMgYSBtYXAgb2Ygc3RhdHVzIGNvZGVzIHRvIHF1YW50aXRpZXMqDEdldEludmVudG9yeVIVR2V0SW52ZW50b3J5UmVzcG9uc2VzGlcKCnBsYWNlT3JkZXISDC9zdG9yZS9vcmRlchoEUE9TVCoKUGxhY2VPcmRlckoUUGxhY2VPcmRlclBhcmFtZXRlcnNSE1BsYWNlT3JkZXJSZXNwb25zZXMaywEKDGdldE9yZGVyQnlJZBIWL3N0b3JlL29yZGVyL3tvcmRlcklkfRoDR0VUImFGb3IgdmFsaWQgcmVzcG9uc2UgdHJ5IGludGVnZXIgSURzIHdpdGggdmFsdWUgPD0gNSBvciA+IDEwLiBPdGhlciB2YWx1ZXMgd2lsbCBnZW5lcmF0ZSBleGNlcHRpb25zKgxHZXRPcmRlckJ5SWRKFkdldE9yZGVyQnlJZFBhcmFtZXRlcnNSFUdldE9yZGVyQnlJZFJlc3BvbnNlcxrEAQoLZGVsZXRlT3JkZXISFi9zdG9yZS9vcmRlci97b3JkZXJJZH0aBkRFTEVURSJxRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHZhbHVlIDwgMTAwMC4gQW55dGhpbmcgYWJvdmUgMTAwMCBvciBub25pbnRlZ2VycyB3aWxsIGdlbmVyYXRlIEFQSSBlcnJvcnMqC0RlbGV0ZU9yZGVyShVEZWxldGVPcmRlclBhcmFtZXRlcnMaaQoKY3JlYXRlVXNlchIFL3VzZXIaBFBPU1QiLFRoaXMgY2FuIG9ubHkgYmUgZG9uZSBieSB0aGUgbG9nZ2VkIGluIHVzZXIuKgpDcmVhdGVVc2VyShRDcmVhdGVVc2VyUGFyYW1ldGVycxp4ChljcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0EhUvdXNlci9jcmVhdGVXaXRoQXJyYXkaBFBPU1QqGUNyZWF0ZVVzZXJzV2l0aEFycmF5SW5wdXRKI0NyZWF0ZVVzZXJzV2l0aEFycmF5SW5wdXRQYXJhbWV0ZXJzGnQKGGNyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dBIUL3VzZXIvY3JlYXRlV2l0aExpc3QaBFBPU1QqGENyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dEoiQ3JlYXRlVXNlcnNXaXRoTGlzdElucHV0UGFyYW1ldGVycxpRCglsb2dpblVzZXISCy91c2VyL2xvZ2luGgNHRVQqCUxvZ2luVXNlckoTTG9naW5Vc2VyUGFyYW1ldGVyc1ISTG9naW5Vc2VyUmVzcG9uc2VzGisKCmxvZ291dFVzZXISDC91c2VyL2xvZ291dBoDR0VUKgpMb2dvdXRVc2VyGmYKDWdldFVzZXJCeU5hbWUSEC91c2VyL3t1c2VybmFtZX0aA0dFVCoNR2V0VXNlckJ5TmFtZUoXR2V0VXNlckJ5TmFtZVBhcmFtZXRlcnNSFkdldFVzZXJCeU5hbWVSZXNwb25zZXMacwoKdXBkYXRlVXNlchIQL3VzZXIve3VzZXJuYW1lfRoDUFVUIixUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLioKVXBkYXRlVXNlckoUVXBkYXRlVXNlclBhcmFtZXRlcnMadgoKZGVsZXRlVXNlchIQL3VzZXIve3VzZXJuYW1lfRoGREVMRVRFIixUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLioKRGVsZXRlVXNlckoURGVsZXRlVXNlclBhcmFtZXRlcnM=')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/issue15822.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue15822 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJHCgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcqEAoGZmllbGQzEgZzdHJpbmcSGwoIRW51bVRlc3QqDwoFdmFsdWUSBnN0cmluZxJlChRQb3N0VG9UZXN0UGFyYW1ldGVycxozUG9zdFRvVGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0VG9UZXN0KhgKC09iaiB0byB0ZXN0EgdPYmpUZXN0GAMSawoTUG9zdFRvVGVzdFJlc3BvbnNlcxoxUG9zdFRvVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFRvVGVzdCohChQyMDEgYXBwbGljYXRpb24vanNvbhIHT2JqVGVzdBgDGlAKCnBvc3RUb1Rlc3QSBS90ZXN0GgRQT1NUKgpQb3N0VG9UZXN0ShRQb3N0VG9UZXN0UGFyYW1ldGVyc1ITUG9zdFRvVGVzdFJlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0KbAhKYAgoFL3Rlc3QSjgIiiwISDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RqWwoceC1vcGVyYXRpb24tZXh0cmEtYW5ub3RhdGlvbhI7EjknQGphdmF4LmFubm90YXRpb24uc2VjdXJpdHkuUm9sZXNBbGxvd2VkKHsiUk9MRV9URVNUIn0pJwpKjAIKwgEKB09ialRlc3QStgEiEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKAZQBCh0KBmZpZWxkMRITEgVpbnQ2NLIBCQoHaW50ZWdlcgpYCgZmaWVsZDISTmoCXHeyAQgKBnN0cmluZ/oBPAoReC1wYXR0ZXJuLW1lc3NhZ2USJxIlT25seSBsZXR0ZXJzLCBudW1iZXJzIGFuZCB1bmRlcnNjb3JlCgoZCgZmaWVsZDMSD2oCXHeyAQgKBnN0cmluZwpFCghFbnVtVGVzdBI5Gg9BbiBlbnVtIHRvIHRlc3SiAQYSBE9ORQqiAQYSBFR3bwqiAQgSBnRocmVlCrIBCAoGc3RyaW5ncgYKBFRlc3Q=')),
);

/// From: 2_0/petstore-with-operations-without-required-params.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_with_operations_without_required_params = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/issue15264.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue15264 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxI1CgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcSYgoTUHV0VG9UZXN0UGFyYW1ldGVycxoxUHV0VG9UZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFB1dFRvVGVzdCoYCgtPYmogdG8gdGVzdBIHT2JqVGVzdBgDEmUKFFBvc3RUb1Rlc3RQYXJhbWV0ZXJzGjNQb3N0VG9UZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3RUb1Rlc3QqGAoLT2JqIHRvIHRlc3QSB09ialRlc3QYAxJrChNQb3N0VG9UZXN0UmVzcG9uc2VzGjFQb3N0VG9UZXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQb3N0VG9UZXN0KiEKFDIwMSBhcHBsaWNhdGlvbi9qc29uEgdPYmpUZXN0GAMaNwoJcHV0VG9UZXN0EgUvdGVzdBoDUFVUKglQdXRUb1Rlc3RKE1B1dFRvVGVzdFBhcmFtZXRlcnMaUAoKcG9zdFRvVGVzdBIFL3Rlc3QaBFBPU1QqClBvc3RUb1Rlc3RKFFBvc3RUb1Rlc3RQYXJhbWV0ZXJzUhNQb3N0VG9UZXN0UmVzcG9uc2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0KtAhKqAgoFL3Rlc3QSoAIabRILUHV0IHRvIHRlc3QqCXB1dFRvVGVzdEIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SiEKHwoDMjA0EhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24irgESDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RKZApiCgdPYmpUZXN0ElciEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKATYKHQoGZmllbGQxEhMSBWludDY0sgEJCgdpbnRlZ2VyChUKBmZpZWxkMhILsgEICgZzdHJpbmdyBgoEVGVzdA==')),
);

/// From: 2_0/mapArgs.yaml
final OpenApiProto<v2.Document> fixtures_2_0_map_args = (
  model: surface.Model.fromBuffer(base64Decode('CglMVVNJRCBBUEkSUwoETGluayoSCghyZWxhdGlvbhIGc3RyaW5nKg4KBGhyZWYSBnN0cmluZyoVCgtkZXNjcmlwdGlvbhIGc3RyaW5nKhAKBm1ldGhvZBIGc3RyaW5nEjwKDGVycm9yRGV0YWlscyosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESOAoGZXJyb3JzKi4KFWFkZGl0aW9uYWxfcHJvcGVydGllcxITbWFwW3N0cmluZ11bXXN0cmluZxgBEtwBCh1MdXNpZFZhbGlkYXRpb25Qcm9ibGVtRGV0YWlscyoOCgRuYW1lEgZzdHJpbmcqHgoMZXJyb3JEZXRhaWxzEgxlcnJvckRldGFpbHMYAioWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioSCgZlcnJvcnMSBmVycm9ycxgDKg4KBHR5cGUSBnN0cmluZyoPCgV0aXRsZRIGc3RyaW5nKhgKBnN0YXR1cxIHaW50ZWdlciIFaW50MzIqEAoGZGV0YWlsEgZzdHJpbmcqEgoIaW5zdGFuY2USBnN0cmluZxI8CgxlcnJvckRldGFpbHMqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEr4BChNMdXNpZFByb2JsZW1EZXRhaWxzKg4KBG5hbWUSBnN0cmluZyoeCgxlcnJvckRldGFpbHMSDGVycm9yRGV0YWlscxgCKhYKBGNvZGUSB2ludGVnZXIiBWludDMyKg4KBHR5cGUSBnN0cmluZyoPCgV0aXRsZRIGc3RyaW5nKhgKBnN0YXR1cxIHaW50ZWdlciIFaW50MzIqEAoGZGV0YWlsEgZzdHJpbmcqEgoIaW5zdGFuY2USBnN0cmluZxItCgpSZXNvdXJjZUlkKg8KBXNjb3BlEgZzdHJpbmcqDgoEY29kZRIGc3RyaW5nEkwKB1ZlcnNpb24qIgoNZWZmZWN0aXZlRnJvbRIGc3RyaW5nIglkYXRlLXRpbWUqHQoIYXNBdERhdGUSBnN0cmluZyIJZGF0ZS10aW1lEj0KC0Vycm9yRGV0YWlsKgwKAmlkEgZzdHJpbmcqDgoEdHlwZRIGc3RyaW5nKhAKBmRldGFpbBIGc3RyaW5nEkYKC2lkZW50aWZpZXJzKjcKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIcbWFwW3N0cmluZ11JbnN0cnVtZW50SWRWYWx1ZRgBEr4BChRJbnN0cnVtZW50RGVmaW5pdGlvbioOCgRuYW1lEgZzdHJpbmcqHAoLaWRlbnRpZmllcnMSC2lkZW50aWZpZXJzGAMqIgoKcHJvcGVydGllcxISSW5zdHJ1bWVudFByb3BlcnR5GAIqJgoWbG9va1Rocm91Z2hQb3J0Zm9saW9JZBIKUmVzb3VyY2VJZBgDKiwKCmRlZmluaXRpb24SHEluc3RydW1lbnRFY29ub21pY0RlZmluaXRpb24YAxJGChFJbnN0cnVtZW50SWRWYWx1ZSoPCgV2YWx1ZRIGc3RyaW5nKiAKC2VmZmVjdGl2ZUF0EgZzdHJpbmciCWRhdGUtdGltZRI9ChJJbnN0cnVtZW50UHJvcGVydHkqDQoDa2V5EgZzdHJpbmcqGAoFdmFsdWUSDVByb3BlcnR5VmFsdWUYAxJNChxJbnN0cnVtZW50RWNvbm9taWNEZWZpbml0aW9uKhoKEGluc3RydW1lbnRGb3JtYXQSBnN0cmluZyoRCgdjb250ZW50EgZzdHJpbmcSZwoNUHJvcGVydHlWYWx1ZSoUCgpsYWJlbFZhbHVlEgZzdHJpbmcqHAoLbWV0cmljVmFsdWUSC01ldHJpY1ZhbHVlGAMqIgoNZWZmZWN0aXZlRnJvbRIGc3RyaW5nIglkYXRlLXRpbWUSNgoLTWV0cmljVmFsdWUqFwoFdmFsdWUSBm51bWJlciIGZG91YmxlKg4KBHVuaXQSBnN0cmluZxI6CgZ2YWx1ZXMqMAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhVtYXBbc3RyaW5nXUluc3RydW1lbnQYARI7CgZmYWlsZWQqMQoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhZtYXBbc3RyaW5nXUVycm9yRGV0YWlsGAESZAoZVXBzZXJ0SW5zdHJ1bWVudHNSZXNwb25zZSoOCgRocmVmEgZzdHJpbmcqEgoGdmFsdWVzEgZ2YWx1ZXMYAyoSCgZmYWlsZWQSBmZhaWxlZBgDKg8KBWxpbmtzEgRMaW5rGAISOwoLaWRlbnRpZmllcnMqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEpcCCgpJbnN0cnVtZW50Kg4KBGhyZWYSBnN0cmluZyobChFsdXNpZEluc3RydW1lbnRJZBIGc3RyaW5nKhQKB3ZlcnNpb24SB1ZlcnNpb24YAyoOCgRuYW1lEgZzdHJpbmcqHAoLaWRlbnRpZmllcnMSC2lkZW50aWZpZXJzGAMqGAoKcHJvcGVydGllcxIIUHJvcGVydHkYAiokChRsb29rdGhyb3VnaFBvcnRmb2xpbxIKUmVzb3VyY2VJZBgDKjYKFGluc3RydW1lbnREZWZpbml0aW9uEhxJbnN0cnVtZW50RWNvbm9taWNEZWZpbml0aW9uGAMqDwoFc3RhdGUSBnN0cmluZyoPCgVsaW5rcxIETGluaxgCEhYKBXZhbHVlEAEiC2ludGVyZmFjZXt9El8KCFByb3BlcnR5Kg0KA2tleRIGc3RyaW5nKhAKBXZhbHVlEgV2YWx1ZRgDKg4KBHVuaXQSBnN0cmluZyoiCg1lZmZlY3RpdmVGcm9tEgZzdHJpbmciCWRhdGUtdGltZRJGCghyZXF1ZXN0cyo6ChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSH21hcFtzdHJpbmddSW5zdHJ1bWVudERlZmluaXRpb24YARJ4ChtVcHNlcnRJbnN0cnVtZW50c1BhcmFtZXRlcnMaQVVwc2VydEluc3RydW1lbnRzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwc2VydEluc3RydW1lbnRzKhYKCHJlcXVlc3RzEghyZXF1ZXN0cxgDElsKGFVwc2VydEluc3RydW1lbnRzQ3JlYXRlZCo/ChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSJG1hcFtzdHJpbmddVXBzZXJ0SW5zdHJ1bWVudHNSZXNwb25zZRgBEmMKHFVwc2VydEluc3RydW1lbnRzQmFkX1JlcXVlc3QqQwoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEihtYXBbc3RyaW5nXUx1c2lkVmFsaWRhdGlvblByb2JsZW1EZXRhaWxzGAESTgoRVXBzZXJ0SW5zdHJ1bWVudHMqOQoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEh5tYXBbc3RyaW5nXUx1c2lkUHJvYmxlbURldGFpbHMYARKNBAoaVXBzZXJ0SW5zdHJ1bWVudHNSZXNwb25zZXMaP1Vwc2VydEluc3RydW1lbnRzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBVcHNlcnRJbnN0cnVtZW50cyosCg4yMDEgdGV4dC9wbGFpbhIYVXBzZXJ0SW5zdHJ1bWVudHNDcmVhdGVkGAMqMgoUMjAxIGFwcGxpY2F0aW9uL2pzb24SGFVwc2VydEluc3RydW1lbnRzQ3JlYXRlZBgDKisKDTIwMSB0ZXh0L2pzb24SGFVwc2VydEluc3RydW1lbnRzQ3JlYXRlZBgDKjAKDjQwMCB0ZXh0L3BsYWluEhxVcHNlcnRJbnN0cnVtZW50c0JhZF9SZXF1ZXN0GAMqNgoUNDAwIGFwcGxpY2F0aW9uL2pzb24SHFVwc2VydEluc3RydW1lbnRzQmFkX1JlcXVlc3QYAyovCg00MDAgdGV4dC9qc29uEhxVcHNlcnRJbnN0cnVtZW50c0JhZF9SZXF1ZXN0GAMqKQoSZGVmYXVsdCB0ZXh0L3BsYWluEhFVcHNlcnRJbnN0cnVtZW50cxgDKi8KGGRlZmF1bHQgYXBwbGljYXRpb24vanNvbhIRVXBzZXJ0SW5zdHJ1bWVudHMYAyooChFkZWZhdWx0IHRleHQvanNvbhIRVXBzZXJ0SW5zdHJ1bWVudHMYAxqLAQoRVXBzZXJ0SW5zdHJ1bWVudHMSEC9hcGkvaW5zdHJ1bWVudHMaBFBPU1QiElVwc2VydCBpbnN0cnVtZW50cyoRVXBzZXJ0SW5zdHJ1bWVudHNKG1Vwc2VydEluc3RydW1lbnRzUGFyYW1ldGVyc1IaVXBzZXJ0SW5zdHJ1bWVudHNSZXNwb25zZXM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASFQoJTFVTSUQgQVBJEggwLjEwLjE5MEKUBBKRBAoQL2FwaS9pbnN0cnVtZW50cxL8AyL5AwoLSW5zdHJ1bWVudHMSElVwc2VydCBpbnN0cnVtZW50cxoSVXBzZXJ0IGluc3RydW1lbnRzKhFVcHNlcnRJbnN0cnVtZW50czIKdGV4dC9wbGFpbjIQYXBwbGljYXRpb24vanNvbjIJdGV4dC9qc29uQmYKZApiChpUaGUgaW5zdHJ1bWVudCBkZWZpbml0aW9ucxIIcmVxdWVzdHMaBGJvZHkqNKoBJgokCiIjL2RlZmluaXRpb25zL0luc3RydW1lbnREZWZpbml0aW9usgEICgZvYmplY3RKnQIKTwoDMjAxEkgKRgoHU3VjY2VzcxI7CjmqASsKKQonIy9kZWZpbml0aW9ucy9VcHNlcnRJbnN0cnVtZW50c1Jlc3BvbnNlsgEICgZvYmplY3QKdAoDNDAwEm0KawooVGhlIGRldGFpbHMgb2YgdGhlIGlucHV0IHJlbGF0ZWQgZmFpbHVyZRI/Cj2qAS8KLQorIy9kZWZpbml0aW9ucy9MdXNpZFZhbGlkYXRpb25Qcm9ibGVtRGV0YWlsc7IBCAoGb2JqZWN0ClQKB2RlZmF1bHQSSQpHCg5FcnJvciByZXNwb25zZRI1CjOqASUKIwohIy9kZWZpbml0aW9ucy9MdXNpZFByb2JsZW1EZXRhaWxzsgEICgZvYmplY3RK6CMKxgMKBExpbmsSvQOaAQhyZWxhdGlvbpoBBGhyZWaaAQZtZXRob2SyAQgKBm9iamVjdMoBkwMKngIKCHJlbGF0aW9uEpECogEHEgVSb290CqIBDRILUHJvcGVydGllcwqiAQ8SDVRyYW5zYWN0aW9ucwqiAQoSCERldGFpbHMKogEPEg1Db25zdGl0dWVudHMKogELEglIb2xkaW5ncwqiAQsSCUNvbW1hbmRzCqIBFhIUSG9sZGluZ3NBZGp1c3RtZW50cwqiAQkSB1BhcmVudAqiARESD1Byb3BlcnR5U2NoZW1hCqIBDxINRW50aXR5U2NoZW1hCqIBCxIJTmV4dFBhZ2UKogEPEg1QcmV2aW91c1BhZ2UKogEIEgZRdW90ZQqiARoSGENvbnN0aXR1ZW50c0FkanVzdG1lbnRzCqIBCRIHVmFsdWVzCrIBCAoGc3RyaW5nChMKBGhyZWYSC7IBCAoGc3RyaW5nChoKC2Rlc2NyaXB0aW9uEguyAQgKBnN0cmluZwo/CgZtZXRob2QSNaIBBxIFUE9TVAqiAQYSBEdFVAqiAQgSBlBBVENICqIBCRIHREVMRVRFCrIBCAoGc3RyaW5nCuACCh1MdXNpZFZhbGlkYXRpb25Qcm9ibGVtRGV0YWlscxK+ApoBBG5hbWWaAQRjb2RlsgEICgZvYmplY3TKAaECChMKBG5hbWUSC7IBCAoGc3RyaW5nCjoKDGVycm9yRGV0YWlscxIqsgEHCgVhcnJheboBHQobqgENCguyAQgKBnN0cmluZ7IBCAoGb2JqZWN0ChsKBGNvZGUSExIFaW50MzKyAQkKB2ludGVnZXIKNwoGZXJyb3JzEi2qARwKGrIBBwoFYXJyYXm6AQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3TYAQEKEwoEdHlwZRILsgEICgZzdHJpbmcKFAoFdGl0bGUSC7IBCAoGc3RyaW5nCh0KBnN0YXR1cxITEgVpbnQzMrIBCQoHaW50ZWdlcgoVCgZkZXRhaWwSC7IBCAoGc3RyaW5nChcKCGluc3RhbmNlEguyAQgKBnN0cmluZwqdAgoTTHVzaWRQcm9ibGVtRGV0YWlscxKFApoBBG5hbWWaAQRjb2RlsgEICgZvYmplY3TKAegBChMKBG5hbWUSC7IBCAoGc3RyaW5nCjoKDGVycm9yRGV0YWlscxIqsgEHCgVhcnJheboBHQobqgENCguyAQgKBnN0cmluZ7IBCAoGb2JqZWN0ChsKBGNvZGUSExIFaW50MzKyAQkKB2ludGVnZXIKEwoEdHlwZRILsgEICgZzdHJpbmcKFAoFdGl0bGUSC7IBCAoGc3RyaW5nCh0KBnN0YXR1cxITEgVpbnQzMrIBCQoHaW50ZWdlcgoVCgZkZXRhaWwSC7IBCAoGc3RyaW5nChcKCGluc3RhbmNlEguyAQgKBnN0cmluZwpHCgpSZXNvdXJjZUlkEjmyAQgKBm9iamVjdMoBKwoUCgVzY29wZRILsgEICgZzdHJpbmcKEwoEY29kZRILsgEICgZzdHJpbmcKlQEKB1ZlcnNpb24SiQEiLERlc2NyaWJlcyB0aGUgdmVyc2lvbiBtZXRhZGF0YSBvZiBhbiBlbnRpdHkusgEICgZvYmplY3TKAU0KJwoNZWZmZWN0aXZlRnJvbRIWEglkYXRlLXRpbWWyAQgKBnN0cmluZwoiCghhc0F0RGF0ZRIWEglkYXRlLXRpbWWyAQgKBnN0cmluZwpcCgtFcnJvckRldGFpbBJNsgEICgZvYmplY3TKAT8KEQoCaWQSC7IBCAoGc3RyaW5nChMKBHR5cGUSC7IBCAoGc3RyaW5nChUKBmRldGFpbBILsgEICgZzdHJpbmcK3AQKFEluc3RydW1lbnREZWZpbml0aW9uEsMEmgEEbmFtZZoBC2lkZW50aWZpZXJzsgEICgZvYmplY3TKAZ8ECjkKBG5hbWUSMSIkUmVxdWlyZWQuIFRoZSBuYW1lIG9mIHRoZSBpbnN0cnVtZW50sgEICgZzdHJpbmcKfgoLaWRlbnRpZmllcnMSbyI8UmVxdWlyZWQuIEEgc2V0IG9mIGlkZW50aWZpZXJzIHRoYXQgaWRlbnRpZnkgdGhpcyBpbnN0cnVtZW50qgEjCiEKHyMvZGVmaW5pdGlvbnMvSW5zdHJ1bWVudElkVmFsdWWyAQgKBm9iamVjdAqCAQoKcHJvcGVydGllcxJ0IkFPcHRpb25hbC4gQSBjb2xsZWN0aW9uIG9mIHByb3BlcnRpZXMgdG8gdXBzZXJ0IG9uIHRoZSBpbnN0cnVtZW50LrIBBwoFYXJyYXm6ASQKIgogIy9kZWZpbml0aW9ucy9JbnN0cnVtZW50UHJvcGVydHkKgAEKFmxvb2tUaHJvdWdoUG9ydGZvbGlvSWQSZgoYIy9kZWZpbml0aW9ucy9SZXNvdXJjZUlkIkpPcHRpb25hbC4gVGhlIGlkZW50aWZpZXIgb2YgdGhlIHBvcnRmb2xpbyB0aGF0IHJlcHJlc2VudHMgdGhpcyBpbnN0cnVtZW50LgpaCgpkZWZpbml0aW9uEkwKKiMvZGVmaW5pdGlvbnMvSW5zdHJ1bWVudEVjb25vbWljRGVmaW5pdGlvbiIeRXhwYW5kZWQgaW5zdHJ1bWVudCBkZWZpbml0aW9uCr8CChFJbnN0cnVtZW50SWRWYWx1ZRKpApoBBXZhbHVlsgEICgZvYmplY3TKAZICCmcKBXZhbHVlEl4iUVRoZSB2YWx1ZSBvZiB0aGUgaW5zdHJ1bWVudCBpZCwgd2hpY2ggbXVzdCBub3QgYmUgZW1wdHkgb3IgbnVsbC4gZS5nLCAnQkJHMTIzNDU2J7IBCAoGc3RyaW5nCqYBCgtlZmZlY3RpdmVBdBKWARIJZGF0ZS10aW1lIn5UaGUgZWZmZWN0aXZlIGF0IGRhdGUgb2YgdGhlIGluc3RydW1lbnQgaWQsIHdoaWNoIGlzIG9wdGlvbmFsLiBUaGUgZGVmYXVsdCB2YWx1ZSBpbiB0aGUgbnVsbCBjYXNlDQppcyBEYXRlVGltZU9mZnNldC5NaW5WYWx1ZS6yAQgKBnN0cmluZwr1AQoSSW5zdHJ1bWVudFByb3BlcnR5Et4BsgEICgZvYmplY3TKAc8BClQKA2tleRJNIkBUaGUgcHJvcGVydHkga2V5IG9mIHRoZSBwcm9wZXJ0eSwgZS5nLCAnSW5zdHJ1bWVudC9kZWZhdWx0L0lzaW4nsgEICgZzdHJpbmcKdwoFdmFsdWUSbgobIy9kZWZpbml0aW9ucy9Qcm9wZXJ0eVZhbHVlIk9UaGUgdmFsdWUgb2YgdGhlIHByb3BlcnR5LCB3aGljaCBtdXN0IG5vdCBiZSBlbXB0eSBvciBudWxsLiBlLmcsICdVUzAzNzgzMzEwMDUnCqUBChxJbnN0cnVtZW50RWNvbm9taWNEZWZpbml0aW9uEoQBIh5FeHBhbmRlZCBpbnN0cnVtZW50IGRlZmluaXRpb26aARBpbnN0cnVtZW50Rm9ybWF0mgEHY29udGVudLIBCAoGb2JqZWN0ygE5Ch8KEGluc3RydW1lbnRGb3JtYXQSC7IBCAoGc3RyaW5nChYKB2NvbnRlbnQSC7IBCAoGc3RyaW5nCsABCg1Qcm9wZXJ0eVZhbHVlEq4BsgEICgZvYmplY3TKAZ8BChkKCmxhYmVsVmFsdWUSC7IBCAoGc3RyaW5nCioKC21ldHJpY1ZhbHVlEhsKGSMvZGVmaW5pdGlvbnMvTWV0cmljVmFsdWUKVgoNZWZmZWN0aXZlRnJvbRJFEglkYXRlLXRpbWUiLURhdGUgZm9yIHdoaWNoIHRoZSBwcm9wZXJ0eSBpcyBlZmZlY3RpdmUgZnJvbbIBCAoGc3RyaW5nClAKC01ldHJpY1ZhbHVlEkGyAQgKBm9iamVjdMoBMwocCgV2YWx1ZRITEgZkb3VibGWyAQgKBm51bWJlcgoTCgR1bml0EguyAQgKBnN0cmluZwqLAwoZVXBzZXJ0SW5zdHJ1bWVudHNSZXNwb25zZRLtArIBCAoGb2JqZWN0ygHeAgoTCgRocmVmEguyAQgKBnN0cmluZwp6CgZ2YWx1ZXMScCJEVGhlIGNvbGxlY3Rpb24gb2YgdXBzZXJ0ZWQgaW5zdHJ1bWVudHMgd2l0aCB0aGVpciBsYXRlc3QgcGFyYW1ldGVycy6qARwKGgoYIy9kZWZpbml0aW9ucy9JbnN0cnVtZW50sgEICgZvYmplY3QKnAEKBmZhaWxlZBKRASJkSWYgYW55IGluc3RydW1lbnRzIGZhaWxlZCB0byBiZSB1cHNlcnRlZCwgdGhleSB3aWxsIGJlIGxpc3RlZCBpbiAnRmFpbGVkJywgYWxvbmcNCndpdGggYSByZWFzb24gd2h5LqoBHQobChkjL2RlZmluaXRpb25zL0Vycm9yRGV0YWlssgEICgZvYmplY3QKLAoFbGlua3MSI7IBBwoFYXJyYXm6ARYKFAoSIy9kZWZpbml0aW9ucy9MaW5rCrIHCgpJbnN0cnVtZW50EqMHmgEFc3RhdGWyAQgKBm9iamVjdMoBjAcKEwoEaHJlZhILsgEICgZzdHJpbmcKUgoRbHVzaWRJbnN0cnVtZW50SWQSPSIwVGhlIGx1c2lkIGluc3RydW1lbnQgaWQgKExVSUQpIG9mIHRoZSBpbnN0cnVtZW50sgEICgZzdHJpbmcKQQoHdmVyc2lvbhI2ChUjL2RlZmluaXRpb25zL1ZlcnNpb24iHVRoZSB2ZXJzaW9uIG9mIHRoZSBpbnN0cnVtZW50Ci8KBG5hbWUSJyIaVGhlIG5hbWUgb2YgdGhlIGluc3RydW1lbnSyAQgKBnN0cmluZwp3CgtpZGVudGlmaWVycxJoIktUaGUgc2V0IG9mIGlkZW50aWZpZXJzIHRoYXQgY2FuIGJlIHVzZWQgdG8gdW5pcXVlbHkgaWRlbnRpZnkgdGhlIGluc3RydW1lbnSqAQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3QKuQEKCnByb3BlcnRpZXMSqgEigAFBbnkgcmVxdWVzdGVkIGluc3RydW1lbnQgcHJvcGVydGllcy4gSWYgbm8gcHJvcGVydHkgY2FuIGJlIGZvdW5kIGZvciB0aGUgaW5zdHJ1bWVudCwgdGhlbg0KYSB2YWx1ZSBvZiAnVW5rbm93bicgd2lsbCBiZSByZXR1cm5lZLIBBwoFYXJyYXm6ARoKGAoWIy9kZWZpbml0aW9ucy9Qcm9wZXJ0eQppChRsb29rdGhyb3VnaFBvcnRmb2xpbxJRChgjL2RlZmluaXRpb25zL1Jlc291cmNlSWQiNVRoZSBsb29rdGhyb3VnaCBwb3J0Zm9saW8gb2YgdGhlIGluc3RydW1lbnQgKGlmIGFueSkuCq4BChRpbnN0cnVtZW50RGVmaW5pdGlvbhKVAQoqIy9kZWZpbml0aW9ucy9JbnN0cnVtZW50RWNvbm9taWNEZWZpbml0aW9uImdUaGUgZWNvbm9taWMgZGVmaW5pdGlvbiBvZiB0aGUgaW5zdHJ1bWVudCBmb3IgYW4gT1RDIG9yIGluc3RydW1lbnQgd2hlcmUgYW4gZXhwYW5kZWQgZGVmaW5pdGlvbiBleGlzdHMuCi4KBXN0YXRlEiWiAQkSB0FjdGl2ZQqiAQsSCUluYWN0aXZlCrIBCAoGc3RyaW5nCiwKBWxpbmtzEiOyAQcKBWFycmF5ugEWChQKEiMvZGVmaW5pdGlvbnMvTGluawrBAQoIUHJvcGVydHkStAGaAQNrZXmaAQV2YWx1ZbIBCAoGb2JqZWN0ygGXAQoSCgNrZXkSC7IBCAoGc3RyaW5nChQKBXZhbHVlEguyAQgKBm9iamVjdAoTCgR1bml0EguyAQgKBnN0cmluZwpWCg1lZmZlY3RpdmVGcm9tEkUSCWRhdGUtdGltZSItRGF0ZSBmb3Igd2hpY2ggdGhlIHByb3BlcnR5IGlzIGVmZmVjdGl2ZSBmcm9tsgEICgZzdHJpbmdiDAoKCgZvYXV0aDISAGp4CnYKBm9hdXRoMhJsGmoKBm9hdXRoMhIIaW1wbGljaXQiP2h0dHBzOi8vbHVzaWQub2t0YS5jb20vb2F1dGgyL2F1czVhbDV5b3BiSFcyd0puMnA2L3YxL2F1dGhvcml6ZSoVT0F1dGgyIEltcGxpY2l0IEdyYW50cjcKC0luc3RydW1lbnRzEihNZXRob2RzIGZvciBpbnRlcmFjdGluZyB3aXRoIGluc3RydW1lbnRz')),
);

/// From: 2_0/responseHeaderTest.yaml
final OpenApiProto<v2.Document> fixtures_2_0_response_header_test = (
  model: surface.Model.fromBuffer(base64Decode('ChRSZXNwb25zZSBoZWFkZXIgdGVzdBJkChFHRVRfdGVzdFJlc3BvbnNlcxotR0VUX3Rlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF90ZXN0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcYAhovEgUvdGVzdBoDR0VUIgRUZXN0KghHRVRfdGVzdFIRR0VUX3Rlc3RSZXNwb25zZXM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASgwEKFFJlc3BvbnNlIGhlYWRlciB0ZXN0EgUxLjAuMBokVGVzdCBmb3IgZGlzcGxheWluZyByZXNwb25zZSBoZWFkZXJzMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIBLyoEaHR0cELWAhLTAgoFL3Rlc3QSyQISxgISBFRlc3QaBFRlc3QyEGFwcGxpY2F0aW9uL2pzb25KpQIKdwoDMjAwEnAKbgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SHAoasgEHCgVhcnJheboBDQoLsgEICgZzdHJpbmcaOAo2CghYLVNUQVRVUxIqCgdpbnRlZ2VykgEeT3V0cHV0IHN0YXR1cyBvZiB0aGUgb3BlcmF0aW9uCokBCgM1MDASgQEKfwoVSW50ZXJuYWwgc2VydmVyIGVycm9yGmYKNQoIWC1NU0ctSUQSKQoGc3RyaW5nEgIuKpIBGkkgYW0gdGhlIGVycm9yIGRlc2NyaXB0aW9uCi0KClgtRVJST1ItSUQSHwoHaW50ZWdlcpIBE0kgYW0gdGhlIGVycm9yIGNvZGUKHgoDNDAwEhcKFQoTSW52YWxpZCBJRCBzdXBwbGllZA==')),
);

/// From: 2_0/issue8084.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue8084 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJHCgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcqEAoGZmllbGQzEgZzdHJpbmcSGwoIRW51bVRlc3QqDwoFdmFsdWUSBnN0cmluZxJlChRQb3N0VG9UZXN0UGFyYW1ldGVycxozUG9zdFRvVGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0VG9UZXN0KhgKC09iaiB0byB0ZXN0EgdPYmpUZXN0GAMSawoTUG9zdFRvVGVzdFJlc3BvbnNlcxoxUG9zdFRvVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFRvVGVzdCohChQyMDEgYXBwbGljYXRpb24vanNvbhIHT2JqVGVzdBgDGlAKCnBvc3RUb1Rlc3QSBS90ZXN0GgRQT1NUKgpQb3N0VG9UZXN0ShRQb3N0VG9UZXN0UGFyYW1ldGVyc1ITUG9zdFRvVGVzdFJlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0K+ARK7AQoFL3Rlc3QSsQEirgESDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RKjAIKwgEKB09ialRlc3QStgEiEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKAZQBCh0KBmZpZWxkMRITEgVpbnQ2NLIBCQoHaW50ZWdlcgpYCgZmaWVsZDISTmoCXHeyAQgKBnN0cmluZ/oBPAoReC1wYXR0ZXJuLW1lc3NhZ2USJxIlT25seSBsZXR0ZXJzLCBudW1iZXJzIGFuZCB1bmRlcnNjb3JlCgoZCgZmaWVsZDMSD2oCXHeyAQgKBnN0cmluZwpFCghFbnVtVGVzdBI5Gg9BbiBlbnVtIHRvIHRlc3SiAQYSBE9ORQqiAQYSBFR3bwqiAQgSBnRocmVlCrIBCAoGc3RyaW5ncgYKBFRlc3Q=')),
);

/// From: 2_0/globalProducesConsumesTest.yaml
final OpenApiProto<v2.Document> fixtures_2_0_global_produces_consumes_test = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0EjAKClNvbWVPYmplY3QqDAoCcDESBnN0cmluZyoUCgJwMhIHaW50ZWdlciIFaW50MzISWwoSVGVzdE1lT3BQYXJhbWV0ZXJzGi9UZXN0TWVPcFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBUZXN0TWVPcCoUCgRib2R5EgpTb21lT2JqZWN0GAMaNwoIdGVzdE1lT3ASBy90ZXN0TWUaBFBPU1QqCFRlc3RNZU9wShJUZXN0TWVPcFBhcmFtZXRlcnM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASFwoEVGVzdBIFMS4wLjAaCFRlc3QgQVBJGhBzb21lLmV4YW1wbGUuY29tIgMvdjEqBWh0dHBzKgRodHRwMhBhcHBsaWNhdGlvbi9qc29uMiFhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ6EGFwcGxpY2F0aW9uL2pzb25CbhJsCgcvdGVzdE1lEmEiXwoCZGIqCHRlc3RNZU9wQiwKKgooEgRib2R5GgRib2R5KhoKGCMvZGVmaW5pdGlvbnMvU29tZU9iamVjdEohCh8KAzIwMBIYChYKFFN1Y2Nlc3NmdWwgT3BlcmF0aW9uSkwKSgoKU29tZU9iamVjdBI8sgEICgZvYmplY3TKAS4KEQoCcDESC7IBCAoGc3RyaW5nChkKAnAyEhMSBWludDMysgEJCgdpbnRlZ2Vy')),
);

/// From: 2_0/markdown.yaml
final OpenApiProto<v2.Document> fixtures_2_0_markdown = (
  model: surface.Model.fromBuffer(base64Decode('CkdBbiAqQVBJKiB3aXRoIG1vcmUgKipNYXJrZG93bioqIGluIHN1bW1hcnksIGRlc2NyaXB0aW9uLCBhbmQgb3RoZXIgdGV4dBJbCgxSYW5kb21OdW1iZXIqFwoFdmFsdWUSBm51bWJlciIGZG91YmxlKhYKBHNlZWQSBm51bWJlciIGZG91YmxlKhoKCHNlcXVlbmNlEgdpbnRlZ2VyIgVpbnQ2NBJsChlHZXRSYW5kb21OdW1iZXJQYXJhbWV0ZXJzGj1HZXRSYW5kb21OdW1iZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0UmFuZG9tTnVtYmVyKhAKBHNlZWQSBnN0cmluZygDGn4KD2dldFJhbmRvbU51bWJlchIHL3JhbmRvbRoDR0VUIjFSZXR1cm4gYSBzaW5nbGUgKnJhbmRvbSogcmVzdWx0IGZyb20gYSBnaXZlbiBzZWVkKg9HZXRSYW5kb21OdW1iZXJKGUdldFJhbmRvbU51bWJlclBhcmFtZXRlcnM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAShAMKR0FuICpBUEkqIHdpdGggbW9yZSAqKk1hcmtkb3duKiogaW4gc3VtbWFyeSwgZGVzY3JpcHRpb24sIGFuZCBvdGhlciB0ZXh0EgUwLjEuMBqxAk5vdCByZWFsbHkgYSAqcHNldWRvLXJhbmRvbSogbnVtYmVyIGdlbmVyYXRvciBBUEkuIFRoaXMgQVBJIHVzZXMgW01hcmtkb3duXShodHRwOi8vZGFyaW5nZmlyZWJhbGwubmV0L3Byb2plY3RzL21hcmtkb3duL3N5bnRheCkgaW4gdGV4dDoKMS4gaW4gdGhpcyBBUEkgZGVzY3JpcHRpb24KMS4gaW4gb3BlcmF0aW9uIHN1bW1hcmllcwoxLiBpbiBvcGVyYXRpb24gZGVzY3JpcHRpb25zCjEuIGluIHNjaGVtYSAobW9kZWwpIHRpdGxlcyBhbmQgZGVzY3JpcHRpb25zCjEuIGluIHNjaGVtYSAobW9kZWwpIG1lbWJlciBkZXNjcmlwdGlvbnMKGg9hcGkuZXhhbXBsZS5jb20iAy92MSoEaHR0cEK7AhK4AgoHL3JhbmRvbRKsAhKpAgoEdGFnMRIYQSBzaW5nbGUgKnJhbmRvbSogcmVzdWx0GjFSZXR1cm4gYSBzaW5nbGUgKnJhbmRvbSogcmVzdWx0IGZyb20gYSBnaXZlbiBzZWVkKg9nZXRSYW5kb21OdW1iZXJCNgo0EjIaMAgBEgVxdWVyeRoXQSByYW5kb20gbnVtYmVyICpzZWVkKi4iBHNlZWQyBnN0cmluZ0qKAQpACgMyMDASOQo3ChVPcGVyYXRpb24gKnN1Y2NlZWRlZCoSHgocChojL2RlZmluaXRpb25zL1JhbmRvbU51bWJlcgpGCgM0MDQSPwo9CjtJbnZhbGlkIG9yIG9taXR0ZWQgKnNlZWQqLiBTZWVkcyBtdXN0IGJlICoqdmFsaWQqKiBudW1iZXJzLkquAgqrAgoMUmFuZG9tTnVtYmVyEpoCGhYqUHNldWRvLXJhbmRvbSogbnVtYmVyIi9BICpwc2V1ZG8tcmFuZG9tKiBudW1iZXIgZ2VuZXJhdGVkIGZyb20gYSBzZWVkLsoBzQEKOAoFdmFsdWUSLxIGZG91YmxlIhpUaGUgKnBzZXVkby1yYW5kb20qIG51bWJlcrIBCAoGbnVtYmVyCkQKBHNlZWQSPBIGZG91YmxlIidUaGUgYHNlZWRgIHVzZWQgdG8gZ2VuZXJhdGUgdGhpcyBudW1iZXKyAQgKBm51bWJlcgpLCghzZXF1ZW5jZRI/EgVpbnQ2NCIqVGhlIHNlcXVlbmNlIG51bWJlciBvZiB0aGlzIHJhbmRvbSBudW1iZXIusgEJCgdpbnRlZ2VyYgwKCgoGYXBpS2V5EgBqJwolCgZhcGlLZXkSGxIZCgZhcGlLZXkSB2FwaV9rZXkaBmhlYWRlcnIcCgR0YWcxEhRBIHNpbXBsZSBBUEkgKip0YWcqKg==')),
);

/// From: 2_0/petstore-nullable.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_nullable = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEpgBCgVPcmRlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqFwoFcGV0SWQSB2ludGVnZXIiBWludDY0KhoKCHF1YW50aXR5EgdpbnRlZ2VyIgVpbnQzMiodCghzaGlwRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqEAoGc3RhdHVzEgZzdHJpbmcqEwoIY29tcGxldGUSB2Jvb2xlYW4SMAoIQ2F0ZWdvcnkqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZxKtAQoEVXNlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqEgoIdXNlcm5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKg8KBWVtYWlsEgZzdHJpbmcqEgoIcGFzc3dvcmQSBnN0cmluZyoPCgVwaG9uZRIGc3RyaW5nKhwKCnVzZXJTdGF0dXMSB2ludGVnZXIiBWludDMyEisKA1RhZyoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEnsKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqDQoEdGFncxIDVGFnGAIqEAoGc3RhdHVzEgZzdHJpbmcSSAoLQXBpUmVzcG9uc2UqFgoEY29kZRIHaW50ZWdlciIFaW50MzIqDgoEdHlwZRIGc3RyaW5nKhEKB21lc3NhZ2USBnN0cmluZxJXChNVcGRhdGVQZXRQYXJhbWV0ZXJzGjFVcGRhdGVQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVXBkYXRlUGV0Kg0KBGJvZHkSA1BldBgDEk4KEEFkZFBldFBhcmFtZXRlcnMaK0FkZFBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBBZGRQZXQqDQoEYm9keRIDUGV0GAMScwoaRmluZFBldHNCeVN0YXR1c1BhcmFtZXRlcnMaP0ZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRmluZFBldHNCeVN0YXR1cyoUCgZzdGF0dXMSBnN0cmluZxgCKAMSlwEKGUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMaPUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEZpbmRQZXRzQnlTdGF0dXMqHAoTMjAwIGFwcGxpY2F0aW9uL3htbBIDUGV0GAIqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgCEmsKGEZpbmRQZXRzQnlUYWdzUGFyYW1ldGVycxo7RmluZFBldHNCeVRhZ3NQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRmluZFBldHNCeVRhZ3MqEgoEdGFncxIGc3RyaW5nGAIoAxKRAQoXRmluZFBldHNCeVRhZ3NSZXNwb25zZXMaOUZpbmRQZXRzQnlUYWdzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBGaW5kUGV0c0J5VGFncyocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAiodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAISZgoUR2V0UGV0QnlJZFBhcmFtZXRlcnMaM0dldFBldEJ5SWRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0UGV0QnlJZCoZCgVwZXRJZBIHaW50ZWdlciIFaW50NjQoBBKFAQoTR2V0UGV0QnlJZFJlc3BvbnNlcxoxR2V0UGV0QnlJZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0UGV0QnlJZCocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMSoQEKG1VwZGF0ZVBldFdpdGhGb3JtUGFyYW1ldGVycxpBVXBkYXRlUGV0V2l0aEZvcm1QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVXBkYXRlUGV0V2l0aEZvcm0qGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAQqEAoEbmFtZRIGc3RyaW5nKAIqEgoGc3RhdHVzEgZzdHJpbmcoAhJ4ChNEZWxldGVQZXRQYXJhbWV0ZXJzGjFEZWxldGVQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRGVsZXRlUGV0KhMKB2FwaV9rZXkSBnN0cmluZygBKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEEpgBChRVcGxvYWRGaWxlUGFyYW1ldGVycxozVXBsb2FkRmlsZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBVcGxvYWRGaWxlKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEKh4KEmFkZGl0aW9uYWxNZXRhZGF0YRIGc3RyaW5nKAIqEAoEZmlsZRIGc3RyaW5nKAISbwoTVXBsb2FkRmlsZVJlc3BvbnNlcxoxVXBsb2FkRmlsZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVXBsb2FkRmlsZSolChQyMDAgYXBwbGljYXRpb24vanNvbhILQXBpUmVzcG9uc2UYAxI9Cg5nZXRJbnZlbnRvcnlPSyorChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEG1hcFtzdHJpbmddaW50MzIYARJ4ChVHZXRJbnZlbnRvcnlSZXNwb25zZXMaNUdldEludmVudG9yeVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0SW52ZW50b3J5KigKFDIwMCBhcHBsaWNhdGlvbi9qc29uEg5nZXRJbnZlbnRvcnlPSxgDElwKFFBsYWNlT3JkZXJQYXJhbWV0ZXJzGjNQbGFjZU9yZGVyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBsYWNlT3JkZXIqDwoEYm9keRIFT3JkZXIYAxKJAQoTUGxhY2VPcmRlclJlc3BvbnNlcxoxUGxhY2VPcmRlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUGxhY2VPcmRlcioeChMyMDAgYXBwbGljYXRpb24veG1sEgVPcmRlchgDKh8KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgVPcmRlchgDEm4KFkdldE9yZGVyQnlJZFBhcmFtZXRlcnMaN0dldE9yZGVyQnlJZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRPcmRlckJ5SWQqGwoHb3JkZXJJZBIHaW50ZWdlciIFaW50NjQoBBKPAQoVR2V0T3JkZXJCeUlkUmVzcG9uc2VzGjVHZXRPcmRlckJ5SWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldE9yZGVyQnlJZCoeChMyMDAgYXBwbGljYXRpb24veG1sEgVPcmRlchgDKh8KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgVPcmRlchgDEmMKFURlbGV0ZU9yZGVyUGFyYW1ldGVycxo1RGVsZXRlT3JkZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRGVsZXRlT3JkZXIqEwoHb3JkZXJJZBIGc3RyaW5nKAQSWwoUQ3JlYXRlVXNlclBhcmFtZXRlcnMaM0NyZWF0ZVVzZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQ3JlYXRlVXNlcioOCgRib2R5EgRVc2VyGAMSiAEKI0NyZWF0ZVVzZXJzV2l0aEFycmF5SW5wdXRQYXJhbWV0ZXJzGlFDcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZVVzZXJzV2l0aEFycmF5SW5wdXQqDgoEYm9keRIEVXNlchgCEoUBCiJDcmVhdGVVc2Vyc1dpdGhMaXN0SW5wdXRQYXJhbWV0ZXJzGk9DcmVhdGVVc2Vyc1dpdGhMaXN0SW5wdXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQ3JlYXRlVXNlcnNXaXRoTGlzdElucHV0Kg4KBGJvZHkSBFVzZXIYAhJ0ChNMb2dpblVzZXJQYXJhbWV0ZXJzGjFMb2dpblVzZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gTG9naW5Vc2VyKhQKCHVzZXJuYW1lEgZzdHJpbmcoAyoUCghwYXNzd29yZBIGc3RyaW5nKAMShAEKEkxvZ2luVXNlclJlc3BvbnNlcxovTG9naW5Vc2VyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMb2dpblVzZXIqHQoTMjAwIGFwcGxpY2F0aW9uL3htbBIGc3RyaW5nKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcSagoXR2V0VXNlckJ5TmFtZVBhcmFtZXRlcnMaOUdldFVzZXJCeU5hbWVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0VXNlckJ5TmFtZSoUCgh1c2VybmFtZRIGc3RyaW5nKAQSkAEKFkdldFVzZXJCeU5hbWVSZXNwb25zZXMaN0dldFVzZXJCeU5hbWVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFVzZXJCeU5hbWUqHQoTMjAwIGFwcGxpY2F0aW9uL3htbBIEVXNlchgDKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgRVc2VyGAMScQoUVXBkYXRlVXNlclBhcmFtZXRlcnMaM1VwZGF0ZVVzZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVXBkYXRlVXNlcioUCgh1c2VybmFtZRIGc3RyaW5nKAQqDgoEYm9keRIEVXNlchgDEmEKFERlbGV0ZVVzZXJQYXJhbWV0ZXJzGjNEZWxldGVVc2VyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERlbGV0ZVVzZXIqFAoIdXNlcm5hbWUSBnN0cmluZygEGjYKCXVwZGF0ZVBldBIEL3BldBoDUFVUKglVcGRhdGVQZXRKE1VwZGF0ZVBldFBhcmFtZXRlcnMaLgoGYWRkUGV0EgQvcGV0GgRQT1NUKgZBZGRQZXRKEEFkZFBldFBhcmFtZXRlcnMauAEKEGZpbmRQZXRzQnlTdGF0dXMSES9wZXQvZmluZEJ5U3RhdHVzGgNHRVQiQ011bHRpcGxlIHN0YXR1cyB2YWx1ZXMgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MqEEZpbmRQZXRzQnlTdGF0dXNKGkZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzUhlGaW5kUGV0c0J5U3RhdHVzUmVzcG9uc2VzGsgBCg5maW5kUGV0c0J5VGFncxIPL3BldC9maW5kQnlUYWdzGgNHRVQiXU11bHRpcGxlIHRhZ3MgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MuIFVzZSB0YWcxLCB0YWcyLCB0YWczIGZvciB0ZXN0aW5nLioORmluZFBldHNCeVRhZ3NKGEZpbmRQZXRzQnlUYWdzUGFyYW1ldGVyc1IXRmluZFBldHNCeVRhZ3NSZXNwb25zZXMabAoKZ2V0UGV0QnlJZBIML3BldC97cGV0SWR9GgNHRVQiFFJldHVybnMgYSBzaW5nbGUgcGV0KgpHZXRQZXRCeUlkShRHZXRQZXRCeUlkUGFyYW1ldGVyc1ITR2V0UGV0QnlJZFJlc3BvbnNlcxpXChF1cGRhdGVQZXRXaXRoRm9ybRIML3BldC97cGV0SWR9GgRQT1NUKhFVcGRhdGVQZXRXaXRoRm9ybUobVXBkYXRlUGV0V2l0aEZvcm1QYXJhbWV0ZXJzGkEKCWRlbGV0ZVBldBIML3BldC97cGV0SWR9GgZERUxFVEUqCURlbGV0ZVBldEoTRGVsZXRlUGV0UGFyYW1ldGVycxpjCgp1cGxvYWRGaWxlEhgvcGV0L3twZXRJZH0vdXBsb2FkSW1hZ2UaBFBPU1QqClVwbG9hZEZpbGVKFFVwbG9hZEZpbGVQYXJhbWV0ZXJzUhNVcGxvYWRGaWxlUmVzcG9uc2VzGncKDGdldEludmVudG9yeRIQL3N0b3JlL2ludmVudG9yeRoDR0VUIitSZXR1cm5zIGEgbWFwIG9mIHN0YXR1cyBjb2RlcyB0byBxdWFudGl0aWVzKgxHZXRJbnZlbnRvcnlSFUdldEludmVudG9yeVJlc3BvbnNlcxpXCgpwbGFjZU9yZGVyEgwvc3RvcmUvb3JkZXIaBFBPU1QqClBsYWNlT3JkZXJKFFBsYWNlT3JkZXJQYXJhbWV0ZXJzUhNQbGFjZU9yZGVyUmVzcG9uc2VzGssBCgxnZXRPcmRlckJ5SWQSFi9zdG9yZS9vcmRlci97b3JkZXJJZH0aA0dFVCJhRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHZhbHVlIDw9IDUgb3IgPiAxMC4gT3RoZXIgdmFsdWVzIHdpbGwgZ2VuZXJhdGUgZXhjZXB0aW9ucyoMR2V0T3JkZXJCeUlkShZHZXRPcmRlckJ5SWRQYXJhbWV0ZXJzUhVHZXRPcmRlckJ5SWRSZXNwb25zZXMaxAEKC2RlbGV0ZU9yZGVyEhYvc3RvcmUvb3JkZXIve29yZGVySWR9GgZERUxFVEUicUZvciB2YWxpZCByZXNwb25zZSB0cnkgaW50ZWdlciBJRHMgd2l0aCB2YWx1ZSA8IDEwMDAuIEFueXRoaW5nIGFib3ZlIDEwMDAgb3Igbm9uaW50ZWdlcnMgd2lsbCBnZW5lcmF0ZSBBUEkgZXJyb3JzKgtEZWxldGVPcmRlckoVRGVsZXRlT3JkZXJQYXJhbWV0ZXJzGmkKCmNyZWF0ZVVzZXISBS91c2VyGgRQT1NUIixUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLioKQ3JlYXRlVXNlckoUQ3JlYXRlVXNlclBhcmFtZXRlcnMaeAoZY3JlYXRlVXNlcnNXaXRoQXJyYXlJbnB1dBIVL3VzZXIvY3JlYXRlV2l0aEFycmF5GgRQT1NUKhlDcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0SiNDcmVhdGVVc2Vyc1dpdGhBcnJheUlucHV0UGFyYW1ldGVycxp0ChhjcmVhdGVVc2Vyc1dpdGhMaXN0SW5wdXQSFC91c2VyL2NyZWF0ZVdpdGhMaXN0GgRQT1NUKhhDcmVhdGVVc2Vyc1dpdGhMaXN0SW5wdXRKIkNyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dFBhcmFtZXRlcnMaUQoJbG9naW5Vc2VyEgsvdXNlci9sb2dpbhoDR0VUKglMb2dpblVzZXJKE0xvZ2luVXNlclBhcmFtZXRlcnNSEkxvZ2luVXNlclJlc3BvbnNlcxorCgpsb2dvdXRVc2VyEgwvdXNlci9sb2dvdXQaA0dFVCoKTG9nb3V0VXNlchpmCg1nZXRVc2VyQnlOYW1lEhAvdXNlci97dXNlcm5hbWV9GgNHRVQqDUdldFVzZXJCeU5hbWVKF0dldFVzZXJCeU5hbWVQYXJhbWV0ZXJzUhZHZXRVc2VyQnlOYW1lUmVzcG9uc2VzGnMKCnVwZGF0ZVVzZXISEC91c2VyL3t1c2VybmFtZX0aA1BVVCIsVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4qClVwZGF0ZVVzZXJKFFVwZGF0ZVVzZXJQYXJhbWV0ZXJzGnYKCmRlbGV0ZVVzZXISEC91c2VyL3t1c2VybmFtZX0aBkRFTEVURSIsVGhpcyBjYW4gb25seSBiZSBkb25lIGJ5IHRoZSBsb2dnZWQgaW4gdXNlci4qCkRlbGV0ZVVzZXJKFERlbGV0ZVVzZXJQYXJhbWV0ZXJz')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/petstore-bash.json
final OpenApiProto<v2.Document> fixtures_2_0_petstore_bash = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/issue5857.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue5857 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJHCgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcqEAoGZmllbGQzEgZzdHJpbmcSZQoUUG9zdFRvVGVzdFBhcmFtZXRlcnMaM1Bvc3RUb1Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUG9zdFRvVGVzdCoYCgtPYmogdG8gdGVzdBIHT2JqVGVzdBgDEmsKE1Bvc3RUb1Rlc3RSZXNwb25zZXMaMVBvc3RUb1Rlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBvc3RUb1Rlc3QqIQoUMjAxIGFwcGxpY2F0aW9uL2pzb24SB09ialRlc3QYAxpQCgpwb3N0VG9UZXN0EgUvdGVzdBoEUE9TVCoKUG9zdFRvVGVzdEoUUG9zdFRvVGVzdFBhcmFtZXRlcnNSE1Bvc3RUb1Rlc3RSZXNwb25zZXM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0K+ARK7AQoFL3Rlc3QSsQEirgESDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RKxQEKwgEKB09ialRlc3QStgEiEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKAZQBCh0KBmZpZWxkMRITEgVpbnQ2NLIBCQoHaW50ZWdlcgpYCgZmaWVsZDISTmoCXHeyAQgKBnN0cmluZ/oBPAoReC1wYXR0ZXJuLW1lc3NhZ2USJxIlT25seSBsZXR0ZXJzLCBudW1iZXJzIGFuZCB1bmRlcnNjb3JlCgoZCgZmaWVsZDMSD2oCXHeyAQgKBnN0cmluZ3IGCgRUZXN0')),
);

/// From: 2_0/petstore-proto.yaml
final OpenApiProto<v2.Document> fixtures_2_0_petstore_proto = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/petstore.json
final OpenApiProto<v2.Document> fixtures_2_0_petstore = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/responseCodeTest.yaml
final OpenApiProto<v2.Document> fixtures_2_0_response_code_test = (
  model: surface.Model.fromBuffer(base64Decode('ChJSZXNwb25zZSBjb2RlIHRlc3QaFhIFL3Rlc3QaA0dFVCoIR0VUX3Rlc3Q=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASOwoSUmVzcG9uc2UgY29kZSB0ZXN0EgUxLjAuMBoeVGVzdCBmb3IgcmVzcG9uc2UgY29kZSBkZWZhdWx0IgEvQm4SbAoFL3Rlc3QSYxJhEgRUZXN0MhBhcHBsaWNhdGlvbi9qc29uSkcKHwoDMjAwEhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24KJAoHZGVmYXVsdBIZChcKFUludGVybmFsIHNlcnZlciBlcnJvcg==')),
);

/// From: 2_0/issue12219.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue12219 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJHCgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcqEAoGZmllbGQzEgZzdHJpbmcSGwoIRW51bVRlc3QqDwoFdmFsdWUSBnN0cmluZxJlChRQb3N0VG9UZXN0UGFyYW1ldGVycxozUG9zdFRvVGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0VG9UZXN0KhgKC09iaiB0byB0ZXN0EgdPYmpUZXN0GAMSawoTUG9zdFRvVGVzdFJlc3BvbnNlcxoxUG9zdFRvVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFRvVGVzdCohChQyMDEgYXBwbGljYXRpb24vanNvbhIHT2JqVGVzdBgDGlAKCnBvc3RUb1Rlc3QSBS90ZXN0GgRQT1NUKgpQb3N0VG9UZXN0ShRQb3N0VG9UZXN0UGFyYW1ldGVyc1ITUG9zdFRvVGVzdFJlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0LYAxLVAwoFL3Rlc3QSywMiyAMSDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RqlwIKHHgtb3BlcmF0aW9uLWV4dHJhLWFubm90YXRpb24S9gES8wEnQGphdmF4LmFubm90YXRpb24uc2VjdXJpdHkuUm9sZXNBbGxvd2VkKHsiUk9MRV9URVNUIn0pIEBvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5LmFjY2Vzcy5hbm5vdGF0aW9uLlNlY3VyZWQoeyJST0xFX1RFU1QifSkgQG9yZy5zcHJpbmdmcmFtZXdvcmsuc2VjdXJpdHkuYWNjZXNzLnByZXBvc3QuUHJlQXV0aG9yaXplKCJoYXNSb2xlKCcnUk9MRV9URVNUJycpIGFuZCBoYXNSb2xlKCcnUk9MRV9URVNUX1RXTycnKSIpJwpKjAIKwgEKB09ialRlc3QStgEiEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKAZQBCh0KBmZpZWxkMRITEgVpbnQ2NLIBCQoHaW50ZWdlcgpYCgZmaWVsZDISTmoCXHeyAQgKBnN0cmluZ/oBPAoReC1wYXR0ZXJuLW1lc3NhZ2USJxIlT25seSBsZXR0ZXJzLCBudW1iZXJzIGFuZCB1bmRlcnNjb3JlCgoZCgZmaWVsZDMSD2oCXHeyAQgKBnN0cmluZwpFCghFbnVtVGVzdBI5Gg9BbiBlbnVtIHRvIHRlc3SiAQYSBE9ORQqiAQYSBFR3bwqiAQgSBnRocmVlCrIBCAoGc3RyaW5ncgYKBFRlc3Q=')),
);

/// From: 2_0/refAliasedPrimitiveWithValidation.yml
final OpenApiProto<v2.Document> fixtures_2_0_ref_aliased_primitive_with_validation = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjMKE09iamVjdE1vZGVsV2l0aFJlZnMqHAoLc3RyaW5nUmVnZXgSC1N0cmluZ1JlZ2V4GAMSHgoLU3RyaW5nUmVnZXgqDwoFdmFsdWUSBnN0cmluZxJhChRTdHJpbmdFbnVtUGFyYW1ldGVycxozU3RyaW5nRW51bVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBTdHJpbmdFbnVtKhQKBGJvZHkSClN0cmluZ0VudW0YAxJlChVTdHJpbmdSZWdleFBhcmFtZXRlcnMaNVN0cmluZ1JlZ2V4UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFN0cmluZ1JlZ2V4KhUKBGJvZHkSC1N0cmluZ1JlZ2V4GAMShQEKHU9iamVjdE1vZGVsV2l0aFJlZnNQYXJhbWV0ZXJzGkVPYmplY3RNb2RlbFdpdGhSZWZzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIE9iamVjdE1vZGVsV2l0aFJlZnMqHQoEYm9keRITT2JqZWN0TW9kZWxXaXRoUmVmcxgDGmgKClN0cmluZ0VudW0SEC9mYWtlL1N0cmluZ0VudW0aBFBPU1QiIFRlc3Qgc2VyaWFsaXphdGlvbiBvZiBTdHJpbmdFbnVtKgpTdHJpbmdFbnVtShRTdHJpbmdFbnVtUGFyYW1ldGVycxptCgtTdHJpbmdSZWdleBIRL2Zha2UvU3RyaW5nUmVnZXgaBFBPU1QiIVRlc3Qgc2VyaWFsaXphdGlvbiBvZiBTdHJpbmdSZWdleCoLU3RyaW5nUmVnZXhKFVN0cmluZ1JlZ2V4UGFyYW1ldGVycxqVAQoTT2JqZWN0TW9kZWxXaXRoUmVmcxIZL2Zha2UvT2JqZWN0TW9kZWxXaXRoUmVmcxoEUE9TVCIpVGVzdCBzZXJpYWxpemF0aW9uIG9mIE9iamVjdE1vZGVsV2l0aFJlZnMqE09iamVjdE1vZGVsV2l0aFJlZnNKHU9iamVjdE1vZGVsV2l0aFJlZnNQYXJhbWV0ZXJz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAStgEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGltUZXN0cyBtb2RlbHMgd2hpY2ggdHJpZ2dlciBhbGlhc2VkIHByaW1pdGl2ZXMgYnV0IGNvbnRhaW4gSlNPTiBTY2hlbWEgVmFsaWRhdGlvbiBQcm9wZXJ0aWVzMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbBoWcGV0c3RvcmUuc3dhZ2dlci5pbzo4MCIDL3YyKgRodHRwQq4FEtEBChAvZmFrZS9TdHJpbmdFbnVtErwBIrkBCgRmYWtlGiBUZXN0IHNlcmlhbGl6YXRpb24gb2YgU3RyaW5nRW51bSoKU3RyaW5nRW51bUJHCkUKQwoZSW5wdXQgc3RyaW5nIGFzIHBvc3QgYm9keRIEYm9keRoEYm9keSoaChgjL2RlZmluaXRpb25zL1N0cmluZ0VudW1KOgo4CgMyMDASMQovCg9SZXR1cm5lZCBzdHJpbmcSHAoaChgjL2RlZmluaXRpb25zL1N0cmluZ0VudW0S1gEKES9mYWtlL1N0cmluZ1JlZ2V4EsABIr0BCgRmYWtlGiFUZXN0IHNlcmlhbGl6YXRpb24gb2YgU3RyaW5nUmVnZXgqC1N0cmluZ1JlZ2V4QkgKRgpEChlJbnB1dCBzdHJpbmcgYXMgcG9zdCBib2R5EgRib2R5GgRib2R5KhsKGSMvZGVmaW5pdGlvbnMvU3RyaW5nUmVnZXhKOwo5CgMyMDASMgowCg9SZXR1cm5lZCBzdHJpbmcSHQobChkjL2RlZmluaXRpb25zL1N0cmluZ1JlZ2V4Ev4BChkvZmFrZS9PYmplY3RNb2RlbFdpdGhSZWZzEuABIt0BCgRmYWtlGilUZXN0IHNlcmlhbGl6YXRpb24gb2YgT2JqZWN0TW9kZWxXaXRoUmVmcyoTT2JqZWN0TW9kZWxXaXRoUmVmc0JQCk4KTAoZSW5wdXQgb2JqZWN0IGFzIHBvc3QgYm9keRIEYm9keRoEYm9keSojCiEjL2RlZmluaXRpb25zL09iamVjdE1vZGVsV2l0aFJlZnNKQwpBCgMyMDASOgo4Cg9SZXR1cm5lZCBvYmplY3QSJQojCiEjL2RlZmluaXRpb25zL09iamVjdE1vZGVsV2l0aFJlZnNKkgEKXwoTT2JqZWN0TW9kZWxXaXRoUmVmcxJImgELc3RyaW5nUmVnZXiyAQgKBm9iamVjdMoBLAoqCgtzdHJpbmdSZWdleBIbChkjL2RlZmluaXRpb25zL1N0cmluZ1JlZ2V4Ci8KC1N0cmluZ1JlZ2V4EiBqE15cZHszfS1cZHsyfS1cZHs0fSSyAQgKBnN0cmluZ3ISCgRmYWtlEgpBIGZha2UgYXBp')),
);

/// From: 2_0/nestedFormParameter.yaml
final OpenApiProto<v2.Document> fixtures_2_0_nested_form_parameter = (
  model: surface.Model.fromBuffer(base64Decode('CgVkdW1teRImCgtJbm5lck9iamVjdCoXCg1pbm5lclByb3BlcnR5EgZzdHJpbmcSLQoLT3V0ZXJPYmplY3QqHgoNb3V0ZXJQcm9wZXJ0eRILSW5uZXJPYmplY3QYAxJrChdQT1NUX3Byb3BlcnR5UGFyYW1ldGVycxo5UE9TVF9wcm9wZXJ0eVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX3Byb3BlcnR5KhUKBGJvZHkSC091dGVyT2JqZWN0GAMaORIJL3Byb3BlcnR5GgRQT1NUKg1QT1NUX3Byb3BlcnR5ShdQT1NUX3Byb3BlcnR5UGFyYW1ldGVycw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASDgoFZHVtbXkSBWR1bW15QncSdQoJL3Byb3BlcnR5EmgiZjohYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkQi0KKwopEgRib2R5GgRib2R5KhsKGSMvZGVmaW5pdGlvbnMvT3V0ZXJPYmplY3RKEgoQCgMyMDASCQoHCgVkdW1teUqKAQo7CgtJbm5lck9iamVjdBIssgEICgZvYmplY3TKAR4KHAoNaW5uZXJQcm9wZXJ0eRILsgEICgZzdHJpbmcKSwoLT3V0ZXJPYmplY3QSPLIBCAoGb2JqZWN0ygEuCiwKDW91dGVyUHJvcGVydHkSGwoZIy9kZWZpbml0aW9ucy9Jbm5lck9iamVjdA==')),
);

/// From: 2_0/npe1.yaml
final OpenApiProto<v2.Document> fixtures_2_0_npe1 = (
  model: surface.Model.fromBuffer(base64Decode('CgtBcHBsaWNhdGlvbhI2CgZDb25maWcqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEh0KB09wdGlvbnMqEgoGQ29uZmlnEgZDb25maWcYAxJWCghSZXNvdXJjZSoUCgJpZBIHaW50ZWdlciIFaW50MzIqDgoEbmFtZRIGc3RyaW5nKg4KBHR5cGUSBnN0cmluZyoUCgdvcHRpb25zEgdPcHRpb25zGAMSQgoSUmVzb3VyY2VPcGVyYXRpb25zKiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARKbAQoVUmVzb3VyY2VSZXF1ZXN0QWxsT2YyKhAKBmhhbmRsZRIGc3RyaW5nKh0KC3JlcXVlc3RDb2RlEgdpbnRlZ2VyIgVpbnQzMioiCgpvcGVyYXRpb25zEhJSZXNvdXJjZU9wZXJhdGlvbnMYAyobCgdwYXlsb2FkEgdpbnRlZ2VyGAIiBWludDMyKhAKBGFyZ3MSBnN0cmluZxgCEk4KD1Jlc291cmNlUmVxdWVzdCoWCghhbGxfb2ZfMRIIUmVzb3VyY2UYAyojCghhbGxfb2ZfMhIVUmVzb3VyY2VSZXF1ZXN0QWxsT2YyGAMSqwEKG1Jlc291cmNlU3RhdHVzU2V0UGFyYW1ldGVycxpBUmVzb3VyY2VTdGF0dXNTZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUmVzb3VyY2VTdGF0dXNTZXQqFgoJZXhjbHVzaXZlEgdib29sZWFuKAMqFgoCaWQSB2ludGVnZXIiBWludDMyKAQqGQoEYm9keRIPUmVzb3VyY2VSZXF1ZXN0GAMamQEKEXJlc291cmNlU3RhdHVzU2V0EhcvZGVmYXVsdC9SZXNvdXJjZXMve2lkfRoEUE9TVCI1UG9zdCBhIFJlc291cmNlIHN0YXR1cyBzZXQgZm9yIGEgc3BlY2lmaWMgcmVzb3VyY2UgSWQqEVJlc291cmNlU3RhdHVzU2V0ShtSZXNvdXJjZVN0YXR1c1NldFBhcmFtZXRlcnM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGQoLQXBwbGljYXRpb24SBTEuMC4wGgNBcHAaD2xvY2FsaG9zdDozMjAwMCIJL2FwaS92MS4wKgRodHRwQq0DEqoDChcvZGVmYXVsdC9SZXNvdXJjZXMve2lkfRKOAyKLAxo1UG9zdCBhIFJlc291cmNlIHN0YXR1cyBzZXQgZm9yIGEgc3BlY2lmaWMgcmVzb3VyY2UgSWQqEXJlc291cmNlU3RhdHVzU2V0OhBhcHBsaWNhdGlvbi9qc29uQk4KTBJKGkgSBXF1ZXJ5GiFFeGNsdXNpdmUgT3BlcmF0aW9uIG9uIGEgcmVzb3VyY2UiCWV4Y2x1c2l2ZTIHYm9vbGVhblIIEgZmYWxzZQpCQAo+EjwiOggBEgRwYXRoGhxpZCBvZiB0aGUgcmVxdWVzdGVkIHJlc291cmNlIgJpZCoHaW50ZWdlcjIFaW50MzJCQgpACj4KD1JlcXVlc3QgdG8gcG9zdBIEYm9keRoEYm9keSofCh0jL2RlZmluaXRpb25zL1Jlc291cmNlUmVxdWVzdEpXCh4KAzIwMBIXChUKE1N1Y2Nlc3NmdWwgcmVzcG9uc2UKNQoDNDA0Ei4KLAoqVGhlIHJlcXVlc3Qgd2FzIG5vdCBzdWNjZXNzZnVsbHkgZXhlY3V0ZWQuStQFCl8KB09wdGlvbnMSVLIBCAoGb2JqZWN0ygFGCkQKBkNvbmZpZxI6Ih1MaXN0IG9mIGNvbmZpZ3VyYXRpb24gb3B0aW9uc6oBDQoLsgEICgZzdHJpbmeyAQgKBm9iamVjdArOAQoIUmVzb3VyY2USwQGaAQJpZLIBCAoGb2JqZWN0ygGtAQowCgJpZBIqEgVpbnQzMiIVIklkIG9mIHRoZSBSZXNvdXJjZSIKsgEJCgdpbnRlZ2VyCkAKBG5hbWUSOCIrIk5hbWUgb2YgdGhlIFJlc291cmNlIiAgICAgICAgICAgICAgICAgICAgCrIBCAoGc3RyaW5nChMKBHR5cGUSC7IBCAoGc3RyaW5nCiIKB29wdGlvbnMSFwoVIy9kZWZpbml0aW9ucy9PcHRpb25zClYKElJlc291cmNlT3BlcmF0aW9ucxJAIiNBbiBvYmplY3QgZGVzY3JpYmluZyB0aGUgb3BlcmF0aW9uc6oBDQoLsgEICgZzdHJpbmeyAQgKBm9iamVjdArHAgoPUmVzb3VyY2VSZXF1ZXN0ErMCwgEYChYjL2RlZmluaXRpb25zL1Jlc291cmNlwgGUApoBBmhhbmRsZbIBCAoGb2JqZWN0ygH8AQouCgZoYW5kbGUSJLIBCAoGc3RyaW5n+gEWCgp4LW51bGxhYmxlEggSBmZhbHNlCgpFCgtyZXF1ZXN0Q29kZRI2EgVpbnQzMiIhIlJlcXVlc3QgY29kZSBvZiB0aGUgb3BlcmF0aW9uIiAKsgEJCgdpbnRlZ2VyCjAKCm9wZXJhdGlvbnMSIgogIy9kZWZpbml0aW9ucy9SZXNvdXJjZU9wZXJhdGlvbnMKLQoHcGF5bG9hZBIisgEHCgVhcnJheboBFQoTEgVpbnQzMrIBCQoHaW50ZWdlcgoiCgRhcmdzEhqyAQcKBWFycmF5ugENCguyAQgKBnN0cmluZw==')),
);

/// From: 2_0/x-discriminator-value.yaml
final OpenApiProto<v2.Document> fixtures_2_0_x_discriminator_value = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxI2CgdCYXNlT2JqKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoVCgtvYmplY3RfdHlwZRIGc3RyaW5nEh0KClN1Yk9ialR5cGUqDwoFdmFsdWUSBnN0cmluZxI8CgxTdWJPYmpBbGxPZjIqHAoMc3ViX29ial90eXBlEgpTdWJPYmpUeXBlGAMqDgoEbmFtZRIGc3RyaW5nEjsKBlN1Yk9iaioVCghhbGxfb2ZfMRIHQmFzZU9iahgDKhoKCGFsbF9vZl8yEgxTdWJPYmpBbGxPZjIYAxIzChFEYWlseVN1Yk9iakFsbE9mMioeCgxkYXlfb2ZfbW9udGgSB2ludGVnZXIiBWludDMyEkQKC0RhaWx5U3ViT2JqKhQKCGFsbF9vZl8xEgZTdWJPYmoYAyofCghhbGxfb2ZfMhIRRGFpbHlTdWJPYmpBbGxPZjIYAxJ6ChhHZXROdW1iZXJIb2xkZXJSZXNwb25zZXMaO0dldE51bWJlckhvbGRlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0TnVtYmVySG9sZGVyKiEKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdCYXNlT2JqGAMaTwoPZ2V0TnVtYmVySG9sZGVyEgsvbnVtYmVyZGF0YRoEUE9TVCoPR2V0TnVtYmVySG9sZGVyUhhHZXROdW1iZXJIb2xkZXJSZXNwb25zZXM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0KHARKEAQoLL251bWJlcmRhdGESdSJzKg9nZXROdW1iZXJIb2xkZXIyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25KPAo6CgMyMDASMwoxChRzdWNjZXNzZnVsIG9wZXJhdGlvbhIZChcKFSMvZGVmaW5pdGlvbnMvQmFzZU9iakqEBApxCgdCYXNlT2JqEmaaAQJpZJoBC29iamVjdF90eXBlsgEICgZvYmplY3TKATcKGQoCaWQSExIFaW50NjSyAQkKB2ludGVnZXIKGgoLb2JqZWN0X3R5cGUSC7IBCAoGc3RyaW5n0gELb2JqZWN0X3R5cGUKTAoKU3ViT2JqVHlwZRI+ogEIEgZkYWlseQqiAQoSCG1vbnRobHkKogEMEgpxdWFydGVybHkKogEJEgd5ZWFybHkKsgEICgZzdHJpbmcKuwEKBlN1Yk9iahKwAcIBFwoVIy9kZWZpbml0aW9ucy9CYXNlT2JqwgFtmgEMc3ViX29ial90eXBlsgEICgZvYmplY3TKAUEKKgoMc3ViX29ial90eXBlEhoKGCMvZGVmaW5pdGlvbnMvU3ViT2JqVHlwZQoTCgRuYW1lEguyAQgKBnN0cmluZ9IBDHN1Yl9vYmpfdHlwZfoBIwoVeC1kaXNjcmltaW5hdG9yLXZhbHVlEgoSCHN1Yi1vYmoKCoIBCgtEYWlseVN1Yk9iahJzwgEWChQjL2RlZmluaXRpb25zL1N1Yk9iasIBM7IBCAoGb2JqZWN0ygElCiMKDGRheV9vZl9tb250aBITEgVpbnQzMrIBCQoHaW50ZWdlcvoBIQoVeC1kaXNjcmltaW5hdG9yLXZhbHVlEggSBmRhaWx5CmoA')),
);

/// From: 2_0/requiredTest.json
final OpenApiProto<v2.Document> fixtures_2_0_required_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjMKC0N1c3RvbU1vZGVsKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcShwEKGFJlcXVpcmVkUGFyYW1zUGFyYW1ldGVycxo7UmVxdWlyZWRQYXJhbXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUmVxdWlyZWRQYXJhbXMqGgoGcGFyYW0xEgdpbnRlZ2VyIgVpbnQ2NCgCKhIKBnBhcmFtMhIGc3RyaW5nKAISfAoXUmVxdWlyZWRQYXJhbXNSZXNwb25zZXMaOVJlcXVpcmVkUGFyYW1zUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBSZXF1aXJlZFBhcmFtcyomChQyMDAgYXBwbGljYXRpb24vanNvbhIHaW50ZWdlciIFaW50NjQabwoOcmVxdWlyZWRQYXJhbXMSFS90ZXN0cy9yZXF1aXJlZFBhcmFtcxoDR0VUKg5SZXF1aXJlZFBhcmFtc0oYUmVxdWlyZWRQYXJhbXNQYXJhbWV0ZXJzUhdSZXF1aXJlZFBhcmFtc1Jlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS3QEKEE9wZW5BUEkgUGV0c3RvcmUSBTEuMC4wGoEBVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiBGb3IgdGhpcyBzYW1wbGUsIHlvdSBjYW4gdXNlIHRoZSBhcGkga2V5ICJzcGVjaWFsLWtleSIgdG8gdGVzdCB0aGUgYXV0aG9yaXphdGlvbiBmaWx0ZXJzMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbBoTcGV0c3RvcmUuc3dhZ2dlci5pbyIDL3YyKgRodHRwQr8CErwCChUvdGVzdHMvcmVxdWlyZWRQYXJhbXMSogISnwIKBXRlc3RzEiJPcGVyYXRpb24gd2l0aCByZXF1aXJlZCBwYXJhbWV0ZXJzKg5yZXF1aXJlZFBhcmFtczIQYXBwbGljYXRpb24vanNvbkJDCkESPxI9CAESCGZvcm1EYXRhGhdTb21lIHJlcXVpcmVkIHBhcmFtZXRlciIGcGFyYW0xMgdpbnRlZ2VyOgVpbnQ2NEI5CjcSNRIzEghmb3JtRGF0YRoXU29tZSBvcHRpb25hbCBwYXJhbWV0ZXIiBnBhcmFtMjIGc3RyaW5nSlAKTgoDMjAwEkcKRQosc3VjY2Vzc2Z1bCBvcGVyYXRpb24uIFJldHVuaW5nIGEgc2ltcGxlIGludC4SFQoTEgVpbnQ2NLIBCQoHaW50ZWdlckpVClMKC0N1c3RvbU1vZGVsEkSaAQJpZMoBPAoZCgJpZBITEgVpbnQ2NLIBCQoHaW50ZWdlcgofCgRuYW1lEheyAQgKBnN0cmluZ/IBCRIHZG9nZ2llCmrJAQomCgdhcGlfa2V5EhsSGQoGYXBpS2V5EgdhcGlfa2V5GgZoZWFkZXIKngEKDXBldHN0b3JlX2F1dGgSjAEaiQEKBm9hdXRoMhIIaW1wbGljaXQaSAopCgp3cml0ZTpwZXRzEhttb2RpZnkgcGV0cyBpbiB5b3VyIGFjY291bnQKGwoJcmVhZDpwZXRzEg5yZWFkIHlvdXIgcGV0cyIraHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vYXBpL29hdXRoL2RpYWxvZw==')),
);

/// From: 2_0/wordnik.yaml
final OpenApiProto<v2.Document> fixtures_2_0_wordnik = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/long_description_issue_7839.json
final OpenApiProto<v2.Document> fixtures_2_0_long_description_issue_7839 = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/issue12341.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue12341 = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxI1CgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcSYgoTUHV0VG9UZXN0UGFyYW1ldGVycxoxUHV0VG9UZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFB1dFRvVGVzdCoYCgtPYmogdG8gdGVzdBIHT2JqVGVzdBgDEmUKFFBvc3RUb1Rlc3RQYXJhbWV0ZXJzGjNQb3N0VG9UZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3RUb1Rlc3QqGAoLT2JqIHRvIHRlc3QSB09ialRlc3QYAxJrChNQb3N0VG9UZXN0UmVzcG9uc2VzGjFQb3N0VG9UZXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQb3N0VG9UZXN0KiEKFDIwMSBhcHBsaWNhdGlvbi9qc29uEgdPYmpUZXN0GAMaNwoJcHV0VG9UZXN0EgUvdGVzdBoDUFVUKglQdXRUb1Rlc3RKE1B1dFRvVGVzdFBhcmFtZXRlcnMaUAoKcG9zdFRvVGVzdBIFL3Rlc3QaBFBPU1QqClBvc3RUb1Rlc3RKFFBvc3RUb1Rlc3RQYXJhbWV0ZXJzUhNQb3N0VG9UZXN0UmVzcG9uc2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0KtAhKqAgoFL3Rlc3QSoAIabRILUHV0IHRvIHRlc3QqCXB1dFRvVGVzdEIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SiEKHwoDMjA0EhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24irgESDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RKZApiCgdPYmpUZXN0ElciEUEgbW9kZWwgdG8gcmV0dXJusgEICgZvYmplY3TKATYKHQoGZmllbGQxEhMSBWludDY0sgEJCgdpbnRlZ2VyChUKBmZpZWxkMhILsgEICgZzdHJpbmdyBgoEVGVzdA==')),
);

/// From: 2_0/datePropertyTest.json
final OpenApiProto<v2.Document> fixtures_2_0_date_property_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBTd2FnZ2VyIFBldHN0b3JlEmAKEkVjaG90ZXN0UGFyYW1ldGVycxovRWNob3Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRWNob3Rlc3QqGQoJSW5wdXREYXRlEgZzdHJpbmciBGRhdGUaQwoIZWNob3Rlc3QSEy90ZXN0cy9kYXRlUmVzcG9uc2UaBFBPU1QqCEVjaG90ZXN0ShJFY2hvdGVzdFBhcmFtZXRlcnM=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS+QIKEFN3YWdnZXIgUGV0c3RvcmUSBTEuMC4wGv4BVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiAgWW91IGNhbiBmaW5kIG91dCBtb3JlIGFib3V0IFN3YWdnZXIgYXQgPGEgaHJlZj0iaHR0cDovL3N3YWdnZXIuaW8iPmh0dHA6Ly9zd2FnZ2VyLmlvPC9hPiBvciBvbiBpcmMuZnJlZW5vZGUubmV0LCAjc3dhZ2dlci4gIEZvciB0aGlzIHNhbXBsZSwgeW91IGNhbiB1c2UgdGhlIGFwaSBrZXkgInNwZWNpYWwta2V5IiB0byB0ZXN0IHRoZSBhdXRob3JpemF0aW9uIGZpbHRlcnMiHWh0dHA6Ly9oZWxsb3JldmVyYi5jb20vdGVybXMvMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIDL3YyKgRodHRwQosBEogBChMvdGVzdHMvZGF0ZVJlc3BvbnNlEnEibxIJRWNobyB0ZXN0KghlY2hvdGVzdEIqCigKJhIJSW5wdXREYXRlGgRib2R5IAEqERIEZGF0ZbIBCAoGc3RyaW5nSiwKKgoDMjAwEiMKIQoKT3V0cHV0RGF0ZRITChESBGRhdGWyAQgKBnN0cmluZw==')),
);

/// From: 2_0/composed-allof.yaml
final OpenApiProto<v2.Document> fixtures_2_0_composed_allof = (
  model: surface.Model.fromBuffer(base64Decode('CghUZXN0IEFQSRJPCilNZXNzYWdlRXZlbnRDb3JlV2l0aFRpbWVMaXN0RW50cmllc0FsbE9mMioiCg90aW1lTGlzdEVudHJpZXMSDVRpbWVMaXN0RW50cnkYAhJ+CiNNZXNzYWdlRXZlbnRDb3JlV2l0aFRpbWVMaXN0RW50cmllcyoeCghhbGxfb2ZfMRIQTWVzc2FnZUV2ZW50Q29yZRgDKjcKCGFsbF9vZl8yEilNZXNzYWdlRXZlbnRDb3JlV2l0aFRpbWVMaXN0RW50cmllc0FsbE9mMhgDEjQKEE1lc3NhZ2VFdmVudENvcmUqDQoCaWQSB2ludGVnZXIqEQoHbWVzc2FnZRIGc3RyaW5nEisKDVRpbWVMaXN0RW50cnkqDAoCcDESBnN0cmluZyoMCgJwMhIGc3RyaW5nEj8KHU5ld01lc3NhZ2VFdmVudENvcmVOb093blByb3BzKh4KCGFsbF9vZl8xEhBNZXNzYWdlRXZlbnRDb3JlGAMSyQEKKkFkZE1lc3NhZ2VFdmVudFRvTWVzc2FnZUNhbGVuZGFyUGFyYW1ldGVycxpfQWRkTWVzc2FnZUV2ZW50VG9NZXNzYWdlQ2FsZW5kYXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkTWVzc2FnZUV2ZW50VG9NZXNzYWdlQ2FsZW5kYXIqOgoRbmV3LW1lc3NhZ2UtZXZlbnQSI01lc3NhZ2VFdmVudENvcmVXaXRoVGltZUxpc3RFbnRyaWVzGAMafQogYWRkTWVzc2FnZUV2ZW50VG9NZXNzYWdlQ2FsZW5kYXISBS9waW5nGgRQT1NUKiBBZGRNZXNzYWdlRXZlbnRUb01lc3NhZ2VDYWxlbmRhckoqQWRkTWVzc2FnZUV2ZW50VG9NZXNzYWdlQ2FsZW5kYXJQYXJhbWV0ZXJz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASDQoIVGVzdCBBUEkSATIiBC94eDIyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25C1wES1AEKBS9waW5nEsoBIscBCglNZXNzYWdpbmcSMUFkZCBhIG1lc3NhZ2UgZXZlbnQgdG8gdGhlIGdpdmVuIG1lc3NhZ2UgY2FsZW5kYXIqIGFkZE1lc3NhZ2VFdmVudFRvTWVzc2FnZUNhbGVuZGFyQlQKUgpQEhFuZXctbWVzc2FnZS1ldmVudBoEYm9keSABKjMKMSMvZGVmaW5pdGlvbnMvTWVzc2FnZUV2ZW50Q29yZVdpdGhUaW1lTGlzdEVudHJpZXNKDwoNCgMyMDASBgoECgJPS0rVAwrqAQojTWVzc2FnZUV2ZW50Q29yZVdpdGhUaW1lTGlzdEVudHJpZXMSwgEiLkJhc2Ugb2YgYSBtZXNzYWdlIGV2ZW50IHdpdGggVGltZSBMaXN0IGVudHJpZXOyAQgKBm9iamVjdMIBIAoeIy9kZWZpbml0aW9ucy9NZXNzYWdlRXZlbnRDb3JlwgFhmgEPdGltZUxpc3RFbnRyaWVzsgEICgZvYmplY3TKAUEKPwoPdGltZUxpc3RFbnRyaWVzEiyyAQcKBWFycmF5ugEfCh0KGyMvZGVmaW5pdGlvbnMvVGltZUxpc3RFbnRyeQpOChBNZXNzYWdlRXZlbnRDb3JlEjqyAQgKBm9iamVjdMoBLAoSCgJpZBIMsgEJCgdpbnRlZ2VyChYKB21lc3NhZ2USC7IBCAoGc3RyaW5nCkUKDVRpbWVMaXN0RW50cnkSNLIBCAoGb2JqZWN0ygEmChEKAnAxEguyAQgKBnN0cmluZwoRCgJwMhILsgEICgZzdHJpbmcKTwodTmV3TWVzc2FnZUV2ZW50Q29yZU5vT3duUHJvcHMSLrIBCAoGb2JqZWN0wgEgCh4jL2RlZmluaXRpb25zL01lc3NhZ2VFdmVudENvcmU=')),
);

/// From: 2_0/allOfTest.yaml
final OpenApiProto<v2.Document> fixtures_2_0_all_of_test = (
  model: surface.Model.fromBuffer(base64Decode('CgpTaW1wbGUgQVBJEiIKCE1vZGVsT25lKhYKDG1vZGVsT25lUHJvcBIGc3RyaW5nEiIKCE1vZGVsVHdvKhYKDG1vZGVsVHdvUHJvcBIGc3RyaW5nEiYKCk1vZGVsVGhyZWUqGAoObW9kZWxUaHJlZVByb3ASBnN0cmluZxI6ChdTaW1wbGVDb21wb3NpdGlvbkFsbE9mMyofChVzaW1wbGVDb21wb3NpdGlvblByb3ASBnN0cmluZxJqChFTaW1wbGVDb21wb3NpdGlvbioWCghhbGxfb2ZfMRIITW9kZWxPbmUYAyoWCghhbGxfb2ZfMhIITW9kZWxUd28YAyolCghhbGxfb2ZfMxIXU2ltcGxlQ29tcG9zaXRpb25BbGxPZjMYAxJUCiRDb21wb3NpdGlvbk9mU2ltcGxlQ29tcG9zaXRpb25BbGxPZjMqLAoiY29tcG9zaXRpb25PZlNpbXBsZUNvbXBvc2l0aW9uUHJvcBIGc3RyaW5nEo8BCh5Db21wb3NpdGlvbk9mU2ltcGxlQ29tcG9zaXRpb24qHwoIYWxsX29mXzESEVNpbXBsZUNvbXBvc2l0aW9uGAMqGAoIYWxsX29mXzISCk1vZGVsVGhyZWUYAyoyCghhbGxfb2ZfMxIkQ29tcG9zaXRpb25PZlNpbXBsZUNvbXBvc2l0aW9uQWxsT2YzGAMSOgoMU2ltcGxlUGFyZW50Kg4KBGRpc2MSBnN0cmluZyoaChBzaW1wbGVQYXJlbnRQcm9wEgZzdHJpbmcSPgoZQ2hpbGRPZlNpbXBsZVBhcmVudEFsbE9mMyohChdjaGlsZE9mU2ltcGxlUGFyZW50UHJvcBIGc3RyaW5nEnIKE0NoaWxkT2ZTaW1wbGVQYXJlbnQqFgoIYWxsX29mXzESCE1vZGVsT25lGAMqGgoIYWxsX29mXzISDFNpbXBsZVBhcmVudBgDKicKCGFsbF9vZl8zEhlDaGlsZE9mU2ltcGxlUGFyZW50QWxsT2YzGAMSTAogQ2hpbGRPZkNoaWxkT2ZTaW1wbGVQYXJlbnRBbGxPZjIqKAoeY2hpbGRPZkNoaWxkT2ZTaW1wbGVQYXJlbnRQcm9wEgZzdHJpbmcSbwoaQ2hpbGRPZkNoaWxkT2ZTaW1wbGVQYXJlbnQqIQoIYWxsX29mXzESE0NoaWxkT2ZTaW1wbGVQYXJlbnQYAyouCghhbGxfb2ZfMhIgQ2hpbGRPZkNoaWxkT2ZTaW1wbGVQYXJlbnRBbGxPZjIYAxJEChRDb21wb3NlZFBhcmVudEFsbE9mMyoOCgRkaXNjEgZzdHJpbmcqHAoSY29tcG9zZWRQYXJlbnRQcm9wEgZzdHJpbmcSZAoOQ29tcG9zZWRQYXJlbnQqFgoIYWxsX29mXzESCE1vZGVsT25lGAMqFgoIYWxsX29mXzISCE1vZGVsVHdvGAMqIgoIYWxsX29mXzMSFENvbXBvc2VkUGFyZW50QWxsT2YzGAMSQgobQ2hpbGRPZkNvbXBvc2VkUGFyZW50QWxsT2YyKiMKGWNoaWxkT2ZDb21wb3NlZFBhcmVudFByb3ASBnN0cmluZxJgChVDaGlsZE9mQ29tcG9zZWRQYXJlbnQqHAoIYWxsX29mXzESDkNvbXBvc2VkUGFyZW50GAMqKQoIYWxsX29mXzISG0NoaWxkT2ZDb21wb3NlZFBhcmVudEFsbE9mMhgDElAKIkNoaWxkT2ZDaGlsZE9mQ29tcG9zZWRQYXJlbnRBbGxPZjIqKgogY2hpbGRPZkNoaWxkT2ZDb21wb3NlZFBhcmVudFByb3ASBnN0cmluZxJ1ChxDaGlsZE9mQ2hpbGRPZkNvbXBvc2VkUGFyZW50KiMKCGFsbF9vZl8xEhVDaGlsZE9mQ29tcG9zZWRQYXJlbnQYAyowCghhbGxfb2ZfMhIiQ2hpbGRPZkNoaWxkT2ZDb21wb3NlZFBhcmVudEFsbE9mMhgDGg4SAS8aA0dFVCoER0VUXw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASEwoKU2ltcGxlIEFQSRIFMC4wLjBCGhIYCgEvEhMSEUoPCg0KAzIwMBIGCgQKAk9LSv4JCjcKCE1vZGVsT25lEiuyAQgKBm9iamVjdMoBHQobCgxtb2RlbE9uZVByb3ASC7IBCAoGc3RyaW5nCjcKCE1vZGVsVHdvEiuyAQgKBm9iamVjdMoBHQobCgxtb2RlbFR3b1Byb3ASC7IBCAoGc3RyaW5nCjsKCk1vZGVsVGhyZWUSLbIBCAoGb2JqZWN0ygEfCh0KDm1vZGVsVGhyZWVQcm9wEguyAQgKBnN0cmluZwqCAQoRU2ltcGxlQ29tcG9zaXRpb24SbcIBGAoWIy9kZWZpbml0aW9ucy9Nb2RlbE9uZcIBGAoWIy9kZWZpbml0aW9ucy9Nb2RlbFR3b8IBNLIBCAoGb2JqZWN0ygEmCiQKFXNpbXBsZUNvbXBvc2l0aW9uUHJvcBILsgEICgZzdHJpbmcKqAEKHkNvbXBvc2l0aW9uT2ZTaW1wbGVDb21wb3NpdGlvbhKFAcIBIQofIy9kZWZpbml0aW9ucy9TaW1wbGVDb21wb3NpdGlvbsIBGgoYIy9kZWZpbml0aW9ucy9Nb2RlbFRocmVlwgFBsgEICgZvYmplY3TKATMKMQoiY29tcG9zaXRpb25PZlNpbXBsZUNvbXBvc2l0aW9uUHJvcBILsgEICgZzdHJpbmcKYgoMU2ltcGxlUGFyZW50ElKaAQRkaXNjsgEICgZvYmplY3TKATYKEwoEZGlzYxILsgEICgZzdHJpbmcKHwoQc2ltcGxlUGFyZW50UHJvcBILsgEICgZzdHJpbmfSAQRkaXNjCooBChNDaGlsZE9mU2ltcGxlUGFyZW50EnPCARgKFiMvZGVmaW5pdGlvbnMvTW9kZWxPbmXCARwKGiMvZGVmaW5pdGlvbnMvU2ltcGxlUGFyZW50wgE2sgEICgZvYmplY3TKASgKJgoXY2hpbGRPZlNpbXBsZVBhcmVudFByb3ASC7IBCAoGc3RyaW5nCoQBChpDaGlsZE9mQ2hpbGRPZlNpbXBsZVBhcmVudBJmwgEjCiEjL2RlZmluaXRpb25zL0NoaWxkT2ZTaW1wbGVQYXJlbnTCAT2yAQgKBm9iamVjdMoBLwotCh5jaGlsZE9mQ2hpbGRPZlNpbXBsZVBhcmVudFByb3ASC7IBCAoGc3RyaW5nCqABCg5Db21wb3NlZFBhcmVudBKNAcIBGAoWIy9kZWZpbml0aW9ucy9Nb2RlbE9uZcIBGAoWIy9kZWZpbml0aW9ucy9Nb2RlbFR3b8IBVJoBBGRpc2OyAQgKBm9iamVjdMoBOAoTCgRkaXNjEguyAQgKBnN0cmluZwohChJjb21wb3NlZFBhcmVudFByb3ASC7IBCAoGc3RyaW5n0gEEZGlzYwp1ChVDaGlsZE9mQ29tcG9zZWRQYXJlbnQSXMIBHgocIy9kZWZpbml0aW9ucy9Db21wb3NlZFBhcmVudMIBOLIBCAoGb2JqZWN0ygEqCigKGWNoaWxkT2ZDb21wb3NlZFBhcmVudFByb3ASC7IBCAoGc3RyaW5nCooBChxDaGlsZE9mQ2hpbGRPZkNvbXBvc2VkUGFyZW50EmrCASUKIyMvZGVmaW5pdGlvbnMvQ2hpbGRPZkNvbXBvc2VkUGFyZW50wgE/sgEICgZvYmplY3TKATEKLwogY2hpbGRPZkNoaWxkT2ZDb21wb3NlZFBhcmVudFByb3ASC7IBCAoGc3RyaW5n')),
);

/// From: 2_0/binaryDataTest.json
final OpenApiProto<v2.Document> fixtures_2_0_binary_data_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBTd2FnZ2VyIFBldHN0b3JlEmgKEkVjaG90ZXN0UGFyYW1ldGVycxovRWNob3Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRWNob3Rlc3QqIQoPSW5wdXRCaW5hcnlEYXRhEgZzdHJpbmciBmJpbmFyeRJyChFFY2hvdGVzdFJlc3BvbnNlcxotRWNob3Rlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEVjaG90ZXN0Ki4KHDIwMCBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0SBnN0cmluZyIGYmluYXJ5GlgKCGVjaG90ZXN0EhUvdGVzdHMvYmluYXJ5UmVzcG9uc2UaBFBPU1QqCEVjaG90ZXN0ShJFY2hvdGVzdFBhcmFtZXRlcnNSEUVjaG90ZXN0UmVzcG9uc2Vz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS+QIKEFN3YWdnZXIgUGV0c3RvcmUSBTEuMC4wGv4BVGhpcyBpcyBhIHNhbXBsZSBzZXJ2ZXIgUGV0c3RvcmUgc2VydmVyLiAgWW91IGNhbiBmaW5kIG91dCBtb3JlIGFib3V0IFN3YWdnZXIgYXQgPGEgaHJlZj0iaHR0cDovL3N3YWdnZXIuaW8iPmh0dHA6Ly9zd2FnZ2VyLmlvPC9hPiBvciBvbiBpcmMuZnJlZW5vZGUubmV0LCAjc3dhZ2dlci4gIEZvciB0aGlzIHNhbXBsZSwgeW91IGNhbiB1c2UgdGhlIGFwaSBrZXkgInNwZWNpYWwta2V5IiB0byB0ZXN0IHRoZSBhdXRob3JpemF0aW9uIGZpbHRlcnMiHWh0dHA6Ly9oZWxsb3JldmVyYi5jb20vdGVybXMvMj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbCIDL3YyKgRodHRwQtMBEtABChUvdGVzdHMvYmluYXJ5UmVzcG9uc2UStgEiswESCUVjaG8gdGVzdCoIZWNob3Rlc3QyGGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbToYYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtQjIKMAouEg9JbnB1dEJpbmFyeURhdGEaBGJvZHkgASoTEgZiaW5hcnmyAQgKBnN0cmluZ0o0CjIKAzIwMBIrCikKEE91dHB1dEJpbmFyeURhdGESFQoTEgZiaW5hcnmyAQgKBnN0cmluZw==')),
);

/// From: 2_0/c/petstore.yaml
final OpenApiProto<v2.Document> fixtures_2_0_c_petstore = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v2.Document.fromBuffer(base64Decode('')),
);

/// From: 2_0/issue12219_array.yaml
final OpenApiProto<v2.Document> fixtures_2_0_issue12219_array = (
  model: surface.Model.fromBuffer(base64Decode('CgtzYW1wbGUgc3BlYxJHCgdPYmpUZXN0KhgKBmZpZWxkMRIHaW50ZWdlciIFaW50NjQqEAoGZmllbGQyEgZzdHJpbmcqEAoGZmllbGQzEgZzdHJpbmcSGwoIRW51bVRlc3QqDwoFdmFsdWUSBnN0cmluZxJlChRQb3N0VG9UZXN0UGFyYW1ldGVycxozUG9zdFRvVGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0VG9UZXN0KhgKC09iaiB0byB0ZXN0EgdPYmpUZXN0GAMSawoTUG9zdFRvVGVzdFJlc3BvbnNlcxoxUG9zdFRvVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFRvVGVzdCohChQyMDEgYXBwbGljYXRpb24vanNvbhIHT2JqVGVzdBgDGlAKCnBvc3RUb1Rlc3QSBS90ZXN0GgRQT1NUKgpQb3N0VG9UZXN0ShRQb3N0VG9UZXN0UGFyYW1ldGVyc1ITUG9zdFRvVGVzdFJlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASGgoLc2FtcGxlIHNwZWMSBTEuMC4wGgRibGFoGg1mYWtlLnNpdGUuY29tKgVodHRwc0LiAxLfAwoFL3Rlc3QS1QMi0gMSDFBvc3QgdG8gdGVzdCoKcG9zdFRvVGVzdDIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbkIwCi4KLBILT2JqIHRvIHRlc3QaBGJvZHkqFwoVIy9kZWZpbml0aW9ucy9PYmpUZXN0SjwKOgoDMjAxEjMKMQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24SGQoXChUjL2RlZmluaXRpb25zL09ialRlc3RqoQIKHHgtb3BlcmF0aW9uLWV4dHJhLWFubm90YXRpb24SgAIS/QEtICdAamF2YXguYW5ub3RhdGlvbi5zZWN1cml0eS5Sb2xlc0FsbG93ZWQoeyJST0xFX1RFU1QifSknCi0gJ0Bvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5LmFjY2Vzcy5hbm5vdGF0aW9uLlNlY3VyZWQoeyJST0xFX1RFU1QifSknCi0gJ0Bvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5LmFjY2Vzcy5wcmVwb3N0LlByZUF1dGhvcml6ZSgiaGFzUm9sZSgnJ1JPTEVfVEVTVCcnKSBhbmQgaGFzUm9sZSgnJ1JPTEVfVEVTVF9UV08nJykiKScKSowCCsIBCgdPYmpUZXN0ErYBIhFBIG1vZGVsIHRvIHJldHVybrIBCAoGb2JqZWN0ygGUAQodCgZmaWVsZDESExIFaW50NjSyAQkKB2ludGVnZXIKWAoGZmllbGQyEk5qAlx3sgEICgZzdHJpbmf6ATwKEXgtcGF0dGVybi1tZXNzYWdlEicSJU9ubHkgbGV0dGVycywgbnVtYmVycyBhbmQgdW5kZXJzY29yZQoKGQoGZmllbGQzEg9qAlx3sgEICgZzdHJpbmcKRQoIRW51bVRlc3QSORoPQW4gZW51bSB0byB0ZXN0ogEGEgRPTkUKogEGEgRUd28KogEIEgZ0aHJlZQqyAQgKBnN0cmluZ3IGCgRUZXN0')),
);

/// From: 2_0/swift4Test.json
final OpenApiProto<v2.Document> fixtures_2_0_swift4_test = (
  model: surface.Model.fromBuffer(base64Decode('ChNTd2lmdCA0IFRlc3QgU2NoZW1hEh0KClN0cmluZ0VudW0qDwoFdmFsdWUSBnN0cmluZxLPBQoNQWxsUHJpbWl0aXZlcyoUCglteUludGVnZXISB2ludGVnZXIqGwoObXlJbnRlZ2VyQXJyYXkSB2ludGVnZXIYAioYCgZteUxvbmcSB2ludGVnZXIiBWludDY0Kh8KC215TG9uZ0FycmF5EgdpbnRlZ2VyGAIiBWludDY0KhgKB215RmxvYXQSBm51bWJlciIFZmxvYXQqHwoMbXlGbG9hdEFycmF5EgZudW1iZXIYAiIFZmxvYXQqGgoIbXlEb3VibGUSBm51bWJlciIGZG91YmxlKiEKDW15RG91YmxlQXJyYXkSBm51bWJlchgCIgZkb3VibGUqEgoIbXlTdHJpbmcSBnN0cmluZyoZCg1teVN0cmluZ0FycmF5EgZzdHJpbmcYAioXCgdteUJ5dGVzEgZzdHJpbmciBGJ5dGUqHgoMbXlCeXRlc0FycmF5EgZzdHJpbmcYAiIEYnl0ZSoUCglteUJvb2xlYW4SB2Jvb2xlYW4qGwoObXlCb29sZWFuQXJyYXkSB2Jvb2xlYW4YAioWCgZteURhdGUSBnN0cmluZyIEZGF0ZSodCgtteURhdGVBcnJheRIGc3RyaW5nGAIiBGRhdGUqHwoKbXlEYXRlVGltZRIGc3RyaW5nIglkYXRlLXRpbWUqJgoPbXlEYXRlVGltZUFycmF5EgZzdHJpbmcYAiIJZGF0ZS10aW1lKg4KBm15RmlsZRIEZmlsZSoVCgtteUZpbGVBcnJheRIEZmlsZRgCKhYKBm15VVVJRBIGc3RyaW5nIgR1dWlkKh0KC215VVVJREFycmF5EgZzdHJpbmcYAiIEdXVpZCocCgxteVN0cmluZ0VudW0SClN0cmluZ0VudW0YAyohChFteVN0cmluZ0VudW1BcnJheRIKU3RyaW5nRW51bRgCKhwKEm15SW5saW5lU3RyaW5nRW51bRIGc3RyaW5nEksKCUVycm9ySW5mbyoWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioRCgdtZXNzYWdlEgZzdHJpbmcqEwoHZGV0YWlscxIGc3RyaW5nGAISJQoQTW9kZWxTdHJpbmdBcnJheSoRCgV2YWx1ZRIGc3RyaW5nGAISLQoQTW9kZWxEb3VibGVBcnJheSoZCgV2YWx1ZRIGbnVtYmVyGAIiBmRvdWJsZRIrChNNb2RlbEVycm9ySW5mb0FycmF5KhQKBXZhbHVlEglFcnJvckluZm8YAhJPChBWYXJpYWJsZU5hbWVUZXN0KhYKDGV4YW1wbGVfbmFtZRIGc3RyaW5nKg0KA2ZvchIGc3RyaW5nKhQKCm5vcm1hbE5hbWUSBnN0cmluZxKDAQoSR2V0QWxsTW9kZWxzUmVzdWx0KiMKEG15UHJpbWl0aXZlQXJyYXkSDUFsbFByaW1pdGl2ZXMYAioeCgtteVByaW1pdGl2ZRINQWxsUHJpbWl0aXZlcxgDKigKEm15VmFyaWFibGVOYW1lVGVzdBIQVmFyaWFibGVOYW1lVGVzdBgDElcKJ01vZGVsV2l0aFN0cmluZ0FkZGl0aW9uYWxQcm9wZXJ0aWVzT25seSosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESUwokTW9kZWxXaXRoSW50QWRkaXRpb25hbFByb3BlcnRpZXNPbmx5KisKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIQbWFwW3N0cmluZ11pbnQzMhgBEt4CCipNb2RlbFdpdGhQcm9wZXJ0aWVzQW5kQWRkaXRpb25hbFByb3BlcnRpZXMqFwoMbXlJbnRlZ2VyUmVxEgdpbnRlZ2VyKhcKDG15SW50ZWdlck9wdBIHaW50ZWdlciohCg5teVByaW1pdGl2ZVJlcRINQWxsUHJpbWl0aXZlcxgDKiEKDm15UHJpbWl0aXZlT3B0Eg1BbGxQcmltaXRpdmVzGAMqHAoQbXlTdHJpbmdBcnJheVJlcRIGc3RyaW5nGAIqHAoQbXlTdHJpbmdBcnJheU9wdBIGc3RyaW5nGAIqJgoTbXlQcmltaXRpdmVBcnJheVJlcRINQWxsUHJpbWl0aXZlcxgCKiYKE215UHJpbWl0aXZlQXJyYXlPcHQSDUFsbFByaW1pdGl2ZXMYAiosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESUwoKU2FtcGxlQmFzZSodChNiYXNlQ2xhc3NTdHJpbmdQcm9wEgZzdHJpbmcqJgoUYmFzZUNsYXNzSW50ZWdlclByb3ASB2ludGVnZXIiBWludDMyElsKFFNhbXBsZVN1YkNsYXNzQWxsT2YyKhwKEnN1YkNsYXNzU3RyaW5nUHJvcBIGc3RyaW5nKiUKE3N1YkNsYXNzSW50ZWdlclByb3ASB2ludGVnZXIiBWludDMyEk4KDlNhbXBsZVN1YkNsYXNzKhgKCGFsbF9vZl8xEgpTYW1wbGVCYXNlGAMqIgoIYWxsX29mXzISFFNhbXBsZVN1YkNsYXNzQWxsT2YyGAMSHgoIQmFzZUNhcmQqEgoIY2FyZFR5cGUSBnN0cmluZxI7ChBQZXJzb25DYXJkQWxsT2YyKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcSRAoKUGVyc29uQ2FyZCoWCghhbGxfb2ZfMRIIQmFzZUNhcmQYAyoeCghhbGxfb2ZfMhIQUGVyc29uQ2FyZEFsbE9mMhgDEj4KD1BsYWNlQ2FyZEFsbE9mMioTCglwbGFjZU5hbWUSBnN0cmluZyoWCgxwbGFjZUFkZHJlc3MSBnN0cmluZxJCCglQbGFjZUNhcmQqFgoIYWxsX29mXzESCEJhc2VDYXJkGAMqHQoIYWxsX29mXzISD1BsYWNlQ2FyZEFsbE9mMhgDEmgKFkdldEFsbE1vZGVsc1BhcmFtZXRlcnMaN0dldEFsbE1vZGVsc1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRBbGxNb2RlbHMqFQoJY2xpZW50X2lkEgZzdHJpbmcoAxLrAQoVR2V0QWxsTW9kZWxzUmVzcG9uc2VzGjVHZXRBbGxNb2RlbHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldEFsbE1vZGVscyosChQyMDAgYXBwbGljYXRpb24vanNvbhISR2V0QWxsTW9kZWxzUmVzdWx0GAMqIwoUNDAwIGFwcGxpY2F0aW9uL2pzb24SCUVycm9ySW5mbxgDKiMKFDQyNCBhcHBsaWNhdGlvbi9qc29uEglFcnJvckluZm8YAyojChQ1MDAgYXBwbGljYXRpb24vanNvbhIJRXJyb3JJbmZvGAMasAEKDEdldEFsbE1vZGVscxIKL2FsbE1vZGVscxoDR0VUIlJUaGlzIGVuZHBvaW50IHRlc3RzIGdldCBhIGRpY3Rpb25hcnkgd2hpY2ggY29udGFpbnMgZXhhbXBsZXMgb2YgYWxsIG9mIHRoZSBtb2RlbHMuKgxHZXRBbGxNb2RlbHNKFkdldEFsbE1vZGVsc1BhcmFtZXRlcnNSFUdldEFsbE1vZGVsc1Jlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS0QIKE1N3aWZ0IDQgVGVzdCBTY2hlbWESAzEuMBptVGhpcyBpcyBhIHRlc3Qgc2NoZW1hIHdoaWNoIGV4ZXJjaXNlcyBTd2FnZ2VyIHNjaGVtYSBmZWF0dXJlcyBmb3IgdGVzdGluZyB0aGUgc3dpZnQ0IGxhbmd1YWdlIGNvZGVnZW4gbW9kdWxlLiJAVGhlc2UgYXJlIHRoZSBkdW1teSBUZXJtcyBvZiBTZXJ2aWNlIGZvciB0aGUgc3dpZnQ0IHRlc3Qgc2NoZW1hLio0CghKb2huIERvZRIWaHR0cDovL3d3dy5leGFtcGxlLmNvbRoQamRvZUBleGFtcGxlLmNvbTJOCjRUaGlzIGlzIHRoZSBsaWNlbnNlIG5hbWUgZm9yIHRoZSBzd2lmdDQgdGVzdCBzY2hlbWEuEhZodHRwOi8vd3d3LmV4YW1wbGUuY29tGg9hcGkuZXhhbXBsZS5jb20iCS9iYXNlUGF0aCoEaHR0cCoFaHR0cHMyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25CiQQShgQKCi9hbGxNb2RlbHMS9wMS9AMKClN3aWZ0NFRlc3QSFUdldCBhbGwgb2YgdGhlIG1vZGVscxpSVGhpcyBlbmRwb2ludCB0ZXN0cyBnZXQgYSBkaWN0aW9uYXJ5IHdoaWNoIGNvbnRhaW5zIGV4YW1wbGVzIG9mIGFsbCBvZiB0aGUgbW9kZWxzLioMR2V0QWxsTW9kZWxzMhBhcHBsaWNhdGlvbi9qc29uQmEKXxJdGlsIARIFcXVlcnkaIGlkIHRoYXQgcmVwcmVzZW50IHRoZSBBcGkgY2xpZW50IgljbGllbnRfaWQyBnN0cmluZ7oBGgoJeC1leGFtcGxlEg0SC3N3YWdnZXJfdWkKSvcBCkUKAzIwMBI+CjwKFFN1Y2Nlc3NmdWwgb3BlcmF0aW9uEiQKIgogIy9kZWZpbml0aW9ucy9HZXRBbGxNb2RlbHNSZXN1bHQKPAoDNDAwEjUKMwoUSW52YWxpZCBjbGllbnQgaW5wdXQSGwoZChcjL2RlZmluaXRpb25zL0Vycm9ySW5mbwovCgM0MjQSKAomCgdUaW1lb3V0EhsKGQoXIy9kZWZpbml0aW9ucy9FcnJvckluZm8KPwoDNTAwEjgKNgoXVW5leHBlY3RlZCBTZXJ2ZXIgRXJyb3ISGwoZChcjL2RlZmluaXRpb25zL0Vycm9ySW5mb0r0IgpbCgpTdHJpbmdFbnVtEk2iARMSEXN0cmluZ0VudW1WYWx1ZTEKogETEhFzdHJpbmdFbnVtVmFsdWUyCqIBExIRc3RyaW5nRW51bVZhbHVlMwqyAQgKBnN0cmluZwqjCQoNQWxsUHJpbWl0aXZlcxKRCSI/T2JqZWN0IHdoaWNoIGNvbnRhaW5zIGxvdHMgb2YgZGlmZmVyZW50IHByaW1pdGl2ZSBPcGVuQVBJIHR5cGVzsgEICgZvYmplY3TKAcEIChkKCW15SW50ZWdlchIMsgEJCgdpbnRlZ2VyCi0KDm15SW50ZWdlckFycmF5EhuyAQcKBWFycmF5ugEOCgyyAQkKB2ludGVnZXIKHQoGbXlMb25nEhMSBWludDY0sgEJCgdpbnRlZ2VyCjEKC215TG9uZ0FycmF5EiKyAQcKBWFycmF5ugEVChMSBWludDY0sgEJCgdpbnRlZ2VyCh0KB215RmxvYXQSEhIFZmxvYXSyAQgKBm51bWJlcgoxCgxteUZsb2F0QXJyYXkSIbIBBwoFYXJyYXm6ARQKEhIFZmxvYXSyAQgKBm51bWJlcgofCghteURvdWJsZRITEgZkb3VibGWyAQgKBm51bWJlcgozCg1teURvdWJsZUFycmF5EiKyAQcKBWFycmF5ugEVChMSBmRvdWJsZbIBCAoGbnVtYmVyChcKCG15U3RyaW5nEguyAQgKBnN0cmluZworCg1teVN0cmluZ0FycmF5EhqyAQcKBWFycmF5ugENCguyAQgKBnN0cmluZwocCgdteUJ5dGVzEhESBGJ5dGWyAQgKBnN0cmluZwowCgxteUJ5dGVzQXJyYXkSILIBBwoFYXJyYXm6ARMKERIEYnl0ZbIBCAoGc3RyaW5nChkKCW15Qm9vbGVhbhIMsgEJCgdib29sZWFuCi0KDm15Qm9vbGVhbkFycmF5EhuyAQcKBWFycmF5ugEOCgyyAQkKB2Jvb2xlYW4KGwoGbXlEYXRlEhESBGRhdGWyAQgKBnN0cmluZwovCgtteURhdGVBcnJheRIgsgEHCgVhcnJheboBEwoREgRkYXRlsgEICgZzdHJpbmcKJAoKbXlEYXRlVGltZRIWEglkYXRlLXRpbWWyAQgKBnN0cmluZwo4Cg9teURhdGVUaW1lQXJyYXkSJbIBBwoFYXJyYXm6ARgKFhIJZGF0ZS10aW1lsgEICgZzdHJpbmcKEwoGbXlGaWxlEgmyAQYKBGZpbGUKJwoLbXlGaWxlQXJyYXkSGLIBBwoFYXJyYXm6AQsKCbIBBgoEZmlsZQobCgZteVVVSUQSERIEdXVpZLIBCAoGc3RyaW5nCi8KC215VVVJREFycmF5EiCyAQcKBWFycmF5ugETChESBHV1aWSyAQgKBnN0cmluZwoqCgxteVN0cmluZ0VudW0SGgoYIy9kZWZpbml0aW9ucy9TdHJpbmdFbnVtCj4KEW15U3RyaW5nRW51bUFycmF5EimyAQcKBWFycmF5ugEcChoKGCMvZGVmaW5pdGlvbnMvU3RyaW5nRW51bQp1ChJteUlubGluZVN0cmluZ0VudW0SX6IBGRIXaW5saW5lU3RyaW5nRW51bVZhbHVlMQqiARkSF2lubGluZVN0cmluZ0VudW1WYWx1ZTIKogEZEhdpbmxpbmVTdHJpbmdFbnVtVmFsdWUzCrIBCAoGc3RyaW5nCo4BCglFcnJvckluZm8SgAEiFEV4YW1wbGUgRXJyb3Igb2JqZWN0sgEICgZvYmplY3TKAVwKGwoEY29kZRITEgVpbnQzMrIBCQoHaW50ZWdlcgoWCgdtZXNzYWdlEguyAQgKBnN0cmluZwolCgdkZXRhaWxzEhqyAQcKBWFycmF5ugENCguyAQgKBnN0cmluZwpRChBNb2RlbFN0cmluZ0FycmF5Ej0iIVRoaXMgZGVmaW5lcyBhbiBhcnJheSBvZiBzdHJpbmdzLrIBBwoFYXJyYXm6AQ0KC7IBCAoGc3RyaW5nClkKEE1vZGVsRG91YmxlQXJyYXkSRSIhVGhpcyBkZWZpbmVzIGFuIGFycmF5IG9mIGRvdWJsZXMusgEHCgVhcnJheboBFQoTEgZkb3VibGWyAQgKBm51bWJlcgpsChNNb2RlbEVycm9ySW5mb0FycmF5ElUiK1RoaXMgZGVmaW5lcyBhbiBhcnJheSBvZiBFcnJvckluZm8gb2JqZWN0cy6yAQcKBWFycmF5ugEbChkKFyMvZGVmaW5pdGlvbnMvRXJyb3JJbmZvCsYEChBWYXJpYWJsZU5hbWVUZXN0ErEEIsUBVGhpcyBvYmplY3QgY29udGFpbnMgcHJvcGVydHkgbmFtZXMgd2hpY2ggd2Uga25vdyB3aWxsIGJlIGRpZmZlcmVudCBmcm9tIHRoZWlyIHZhcmlhYmxlIG5hbWUuIEV4YW1wbGVzIG9mIHRoaXMgaW5jbHVkZSBzbmFrZSBjYXNlIHByb3BlcnR5IG5hbWVzIGFuZCBwcm9wZXJ0eSBuYW1lcyB3aGljaCBhcmUgU3dpZnQgNCByZXNlcnZlZCB3b3Jkcy6yAQgKBm9iamVjdMoB2gIKiQEKDGV4YW1wbGVfbmFtZRJ5ImxUaGlzIHNuYWtlLWNhc2UgZXhhbXBsZV9uYW1lIHByb3BlcnR5IG5hbWUgc2hvdWxkIGJlIGNvbnZlcnRlZCB0byBhIGNhbWVsQ2FzZSB2YXJpYWJsZSBuYW1lIGxpa2UgZXhhbXBsZU5hbWWyAQgKBnN0cmluZwpfCgNmb3ISWCJLVGhpcyBwcm9wZXJ0eSBuYW1lIGlzIGEgcmVzZXJ2ZWQgd29yZCBpbiBtb3N0IGxhbmd1YWdlcywgaW5jbHVkaW5nIFN3aWZ0IDQusgEICgZzdHJpbmcKawoKbm9ybWFsTmFtZRJdIlBUaGlzIG1vZGVsIG9iamVjdCBwcm9wZXJ0eSBuYW1lIHNob3VsZCBiZSB1bmNoYW5nZWQgZnJvbSB0aGUgSlNPTiBwcm9wZXJ0eSBuYW1lLrIBCAoGc3RyaW5nCv8BChJHZXRBbGxNb2RlbHNSZXN1bHQS6AEiL1Jlc3BvbnNlIG9iamVjdCBjb250YWluaW5nIEFsbFByaW1pdGl2ZXMgb2JqZWN0sgEICgZvYmplY3TKAagBCkAKEG15UHJpbWl0aXZlQXJyYXkSLLIBBwoFYXJyYXm6AR8KHQobIy9kZWZpbml0aW9ucy9BbGxQcmltaXRpdmVzCiwKC215UHJpbWl0aXZlEh0KGyMvZGVmaW5pdGlvbnMvQWxsUHJpbWl0aXZlcwo2ChJteVZhcmlhYmxlTmFtZVRlc3QSIAoeIy9kZWZpbml0aW9ucy9WYXJpYWJsZU5hbWVUZXN0Cp4BCidNb2RlbFdpdGhTdHJpbmdBZGRpdGlvbmFsUHJvcGVydGllc09ubHkScyJWVGhpcyBpcyBhbiBlbXB0eSBtb2RlbCB3aXRoIG5vIHByb3BlcnRpZXMgYW5kIG9ubHkgYWRkaXRpb25hbFByb3BlcnRpZXMgb2YgdHlwZSBzdHJpbmeqAQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3QKogEKJE1vZGVsV2l0aEludEFkZGl0aW9uYWxQcm9wZXJ0aWVzT25seRJ6IlVUaGlzIGlzIGFuIGVtcHR5IG1vZGVsIHdpdGggbm8gcHJvcGVydGllcyBhbmQgb25seSBhZGRpdGlvbmFsUHJvcGVydGllcyBvZiB0eXBlIGludDMyqgEVChMSBWludDMysgEJCgdpbnRlZ2VysgEICgZvYmplY3QK9gQKKk1vZGVsV2l0aFByb3BlcnRpZXNBbmRBZGRpdGlvbmFsUHJvcGVydGllcxLHBCJVVGhpcyBpcyBhbiBlbXB0eSBtb2RlbCB3aXRoIG5vIHByb3BlcnRpZXMgYW5kIG9ubHkgYWRkaXRpb25hbFByb3BlcnRpZXMgb2YgdHlwZSBpbnQzMpoBDG15SW50ZWdlclJlcZoBDm15UHJpbWl0aXZlUmVxmgEQbXlTdHJpbmdBcnJheVJlcZoBE215UHJpbWl0aXZlQXJyYXlSZXGqAQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3TKAYgDChwKDG15SW50ZWdlclJlcRIMsgEJCgdpbnRlZ2VyChwKDG15SW50ZWdlck9wdBIMsgEJCgdpbnRlZ2VyCi8KDm15UHJpbWl0aXZlUmVxEh0KGyMvZGVmaW5pdGlvbnMvQWxsUHJpbWl0aXZlcwovCg5teVByaW1pdGl2ZU9wdBIdChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKLgoQbXlTdHJpbmdBcnJheVJlcRIasgEHCgVhcnJheboBDQoLsgEICgZzdHJpbmcKLgoQbXlTdHJpbmdBcnJheU9wdBIasgEHCgVhcnJheboBDQoLsgEICgZzdHJpbmcKQwoTbXlQcmltaXRpdmVBcnJheVJlcRIssgEHCgVhcnJheboBHwodChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKQwoTbXlQcmltaXRpdmVBcnJheU9wdBIssgEHCgVhcnJheboBHwodChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKsQEKClNhbXBsZUJhc2USogEiQVRoaXMgaXMgYSBiYXNlIGNsYXNzIG9iamVjdCBmcm9tIHdoaWNoIG90aGVyIGNsYXNzZXMgd2lsbCBkZXJpdmUusgEICgZvYmplY3TKAVEKIgoTYmFzZUNsYXNzU3RyaW5nUHJvcBILsgEICgZzdHJpbmcKKwoUYmFzZUNsYXNzSW50ZWdlclByb3ASExIFaW50MzKyAQkKB2ludGVnZXIKxwEKDlNhbXBsZVN1YkNsYXNzErQBIjVUaGlzIGlzIGEgc3ViY2xhc3MgZGVyaXZlZCBmcm9tIHRoZSBTYW1wbGVCYXNlIGNsYXNzLsIBGgoYIy9kZWZpbml0aW9ucy9TYW1wbGVCYXNlwgFdsgEICgZvYmplY3TKAU8KIQoSc3ViQ2xhc3NTdHJpbmdQcm9wEguyAQgKBnN0cmluZwoqChNzdWJDbGFzc0ludGVnZXJQcm9wEhMSBWludDMysgEJCgdpbnRlZ2VyCqgBCghCYXNlQ2FyZBKbASJBVGhpcyBpcyBhIGJhc2UgY2FyZCBvYmplY3Qgd2hpY2ggdXNlcyBhICdjYXJkVHlwZScgZGlzY3JpbWluYXRvci6aAQhjYXJkVHlwZbIBCAoGb2JqZWN0ygEZChcKCGNhcmRUeXBlEguyAQgKBnN0cmluZ9IBCGNhcmRUeXBl+gEYCgx4LXVuaXQtdGVzdHMSCBIGLSBCNDUKCsQBCgpQZXJzb25DYXJkErUBIjlUaGlzIGlzIGEgY2FyZCBvYmplY3QgZm9yIGEgUGVyc29uIGRlcml2ZWQgZnJvbSBCYXNlQ2FyZC7CARgKFiMvZGVmaW5pdGlvbnMvQmFzZUNhcmTCAUGyAQgKBm9iamVjdMoBMwoYCglmaXJzdE5hbWUSC7IBCAoGc3RyaW5nChcKCGxhc3ROYW1lEguyAQgKBnN0cmluZ/oBGAoMeC11bml0LXRlc3RzEggSBi0gQjQ1CgrHAQoJUGxhY2VDYXJkErkBIjlUaGlzIGlzIGEgY2FyZCBvYmplY3QgZm9yIGEgUGVyc29uIGRlcml2ZWQgZnJvbSBCYXNlQ2FyZC7CARgKFiMvZGVmaW5pdGlvbnMvQmFzZUNhcmTCAUWyAQgKBm9iamVjdMoBNwoYCglwbGFjZU5hbWUSC7IBCAoGc3RyaW5nChsKDHBsYWNlQWRkcmVzcxILsgEICgZzdHJpbmf6ARgKDHgtdW5pdC10ZXN0cxIIEgYtIEI0NQpyDAoKU3dpZnQ0VGVzdHpTCilMb29rIGluIHRoaXMgZG9jIGZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLhImaHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vZG9jL2luZGV4Lmh0bWw=')),
);

/// From: 2_0/swift5Test.json
final OpenApiProto<v2.Document> fixtures_2_0_swift5_test = (
  model: surface.Model.fromBuffer(base64Decode('ChNTd2lmdCA1IFRlc3QgU2NoZW1hEh0KClN0cmluZ0VudW0qDwoFdmFsdWUSBnN0cmluZxLPBQoNQWxsUHJpbWl0aXZlcyoUCglteUludGVnZXISB2ludGVnZXIqGwoObXlJbnRlZ2VyQXJyYXkSB2ludGVnZXIYAioYCgZteUxvbmcSB2ludGVnZXIiBWludDY0Kh8KC215TG9uZ0FycmF5EgdpbnRlZ2VyGAIiBWludDY0KhgKB215RmxvYXQSBm51bWJlciIFZmxvYXQqHwoMbXlGbG9hdEFycmF5EgZudW1iZXIYAiIFZmxvYXQqGgoIbXlEb3VibGUSBm51bWJlciIGZG91YmxlKiEKDW15RG91YmxlQXJyYXkSBm51bWJlchgCIgZkb3VibGUqEgoIbXlTdHJpbmcSBnN0cmluZyoZCg1teVN0cmluZ0FycmF5EgZzdHJpbmcYAioXCgdteUJ5dGVzEgZzdHJpbmciBGJ5dGUqHgoMbXlCeXRlc0FycmF5EgZzdHJpbmcYAiIEYnl0ZSoUCglteUJvb2xlYW4SB2Jvb2xlYW4qGwoObXlCb29sZWFuQXJyYXkSB2Jvb2xlYW4YAioWCgZteURhdGUSBnN0cmluZyIEZGF0ZSodCgtteURhdGVBcnJheRIGc3RyaW5nGAIiBGRhdGUqHwoKbXlEYXRlVGltZRIGc3RyaW5nIglkYXRlLXRpbWUqJgoPbXlEYXRlVGltZUFycmF5EgZzdHJpbmcYAiIJZGF0ZS10aW1lKg4KBm15RmlsZRIEZmlsZSoVCgtteUZpbGVBcnJheRIEZmlsZRgCKhYKBm15VVVJRBIGc3RyaW5nIgR1dWlkKh0KC215VVVJREFycmF5EgZzdHJpbmcYAiIEdXVpZCocCgxteVN0cmluZ0VudW0SClN0cmluZ0VudW0YAyohChFteVN0cmluZ0VudW1BcnJheRIKU3RyaW5nRW51bRgCKhwKEm15SW5saW5lU3RyaW5nRW51bRIGc3RyaW5nEksKCUVycm9ySW5mbyoWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioRCgdtZXNzYWdlEgZzdHJpbmcqEwoHZGV0YWlscxIGc3RyaW5nGAISJQoQTW9kZWxTdHJpbmdBcnJheSoRCgV2YWx1ZRIGc3RyaW5nGAISLQoQTW9kZWxEb3VibGVBcnJheSoZCgV2YWx1ZRIGbnVtYmVyGAIiBmRvdWJsZRIrChNNb2RlbEVycm9ySW5mb0FycmF5KhQKBXZhbHVlEglFcnJvckluZm8YAhJPChBWYXJpYWJsZU5hbWVUZXN0KhYKDGV4YW1wbGVfbmFtZRIGc3RyaW5nKg0KA2ZvchIGc3RyaW5nKhQKCm5vcm1hbE5hbWUSBnN0cmluZxKDAQoSR2V0QWxsTW9kZWxzUmVzdWx0KiMKEG15UHJpbWl0aXZlQXJyYXkSDUFsbFByaW1pdGl2ZXMYAioeCgtteVByaW1pdGl2ZRINQWxsUHJpbWl0aXZlcxgDKigKEm15VmFyaWFibGVOYW1lVGVzdBIQVmFyaWFibGVOYW1lVGVzdBgDElcKJ01vZGVsV2l0aFN0cmluZ0FkZGl0aW9uYWxQcm9wZXJ0aWVzT25seSosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESUwokTW9kZWxXaXRoSW50QWRkaXRpb25hbFByb3BlcnRpZXNPbmx5KisKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIQbWFwW3N0cmluZ11pbnQzMhgBEt4CCipNb2RlbFdpdGhQcm9wZXJ0aWVzQW5kQWRkaXRpb25hbFByb3BlcnRpZXMqFwoMbXlJbnRlZ2VyUmVxEgdpbnRlZ2VyKhcKDG15SW50ZWdlck9wdBIHaW50ZWdlciohCg5teVByaW1pdGl2ZVJlcRINQWxsUHJpbWl0aXZlcxgDKiEKDm15UHJpbWl0aXZlT3B0Eg1BbGxQcmltaXRpdmVzGAMqHAoQbXlTdHJpbmdBcnJheVJlcRIGc3RyaW5nGAIqHAoQbXlTdHJpbmdBcnJheU9wdBIGc3RyaW5nGAIqJgoTbXlQcmltaXRpdmVBcnJheVJlcRINQWxsUHJpbWl0aXZlcxgCKiYKE215UHJpbWl0aXZlQXJyYXlPcHQSDUFsbFByaW1pdGl2ZXMYAiosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESUwoKU2FtcGxlQmFzZSodChNiYXNlQ2xhc3NTdHJpbmdQcm9wEgZzdHJpbmcqJgoUYmFzZUNsYXNzSW50ZWdlclByb3ASB2ludGVnZXIiBWludDMyElsKFFNhbXBsZVN1YkNsYXNzQWxsT2YyKhwKEnN1YkNsYXNzU3RyaW5nUHJvcBIGc3RyaW5nKiUKE3N1YkNsYXNzSW50ZWdlclByb3ASB2ludGVnZXIiBWludDMyEk4KDlNhbXBsZVN1YkNsYXNzKhgKCGFsbF9vZl8xEgpTYW1wbGVCYXNlGAMqIgoIYWxsX29mXzISFFNhbXBsZVN1YkNsYXNzQWxsT2YyGAMSHgoIQmFzZUNhcmQqEgoIY2FyZFR5cGUSBnN0cmluZxI7ChBQZXJzb25DYXJkQWxsT2YyKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcSRAoKUGVyc29uQ2FyZCoWCghhbGxfb2ZfMRIIQmFzZUNhcmQYAyoeCghhbGxfb2ZfMhIQUGVyc29uQ2FyZEFsbE9mMhgDEj4KD1BsYWNlQ2FyZEFsbE9mMioTCglwbGFjZU5hbWUSBnN0cmluZyoWCgxwbGFjZUFkZHJlc3MSBnN0cmluZxJCCglQbGFjZUNhcmQqFgoIYWxsX29mXzESCEJhc2VDYXJkGAMqHQoIYWxsX29mXzISD1BsYWNlQ2FyZEFsbE9mMhgDEmgKFkdldEFsbE1vZGVsc1BhcmFtZXRlcnMaN0dldEFsbE1vZGVsc1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRBbGxNb2RlbHMqFQoJY2xpZW50X2lkEgZzdHJpbmcoAxLrAQoVR2V0QWxsTW9kZWxzUmVzcG9uc2VzGjVHZXRBbGxNb2RlbHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldEFsbE1vZGVscyosChQyMDAgYXBwbGljYXRpb24vanNvbhISR2V0QWxsTW9kZWxzUmVzdWx0GAMqIwoUNDAwIGFwcGxpY2F0aW9uL2pzb24SCUVycm9ySW5mbxgDKiMKFDQyNCBhcHBsaWNhdGlvbi9qc29uEglFcnJvckluZm8YAyojChQ1MDAgYXBwbGljYXRpb24vanNvbhIJRXJyb3JJbmZvGAMasAEKDEdldEFsbE1vZGVscxIKL2FsbE1vZGVscxoDR0VUIlJUaGlzIGVuZHBvaW50IHRlc3RzIGdldCBhIGRpY3Rpb25hcnkgd2hpY2ggY29udGFpbnMgZXhhbXBsZXMgb2YgYWxsIG9mIHRoZSBtb2RlbHMuKgxHZXRBbGxNb2RlbHNKFkdldEFsbE1vZGVsc1BhcmFtZXRlcnNSFUdldEFsbE1vZGVsc1Jlc3BvbnNlcw==')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjAS0QIKE1N3aWZ0IDUgVGVzdCBTY2hlbWESAzEuMBptVGhpcyBpcyBhIHRlc3Qgc2NoZW1hIHdoaWNoIGV4ZXJjaXNlcyBTd2FnZ2VyIHNjaGVtYSBmZWF0dXJlcyBmb3IgdGVzdGluZyB0aGUgc3dpZnQ1IGxhbmd1YWdlIGNvZGVnZW4gbW9kdWxlLiJAVGhlc2UgYXJlIHRoZSBkdW1teSBUZXJtcyBvZiBTZXJ2aWNlIGZvciB0aGUgc3dpZnQ1IHRlc3Qgc2NoZW1hLio0CghKb2huIERvZRIWaHR0cDovL3d3dy5leGFtcGxlLmNvbRoQamRvZUBleGFtcGxlLmNvbTJOCjRUaGlzIGlzIHRoZSBsaWNlbnNlIG5hbWUgZm9yIHRoZSBzd2lmdDUgdGVzdCBzY2hlbWEuEhZodHRwOi8vd3d3LmV4YW1wbGUuY29tGg9hcGkuZXhhbXBsZS5jb20iCS9iYXNlUGF0aCoEaHR0cCoFaHR0cHMyEGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2pzb25CiQQShgQKCi9hbGxNb2RlbHMS9wMS9AMKClN3aWZ0NVRlc3QSFUdldCBhbGwgb2YgdGhlIG1vZGVscxpSVGhpcyBlbmRwb2ludCB0ZXN0cyBnZXQgYSBkaWN0aW9uYXJ5IHdoaWNoIGNvbnRhaW5zIGV4YW1wbGVzIG9mIGFsbCBvZiB0aGUgbW9kZWxzLioMR2V0QWxsTW9kZWxzMhBhcHBsaWNhdGlvbi9qc29uQmEKXxJdGlsIARIFcXVlcnkaIGlkIHRoYXQgcmVwcmVzZW50IHRoZSBBcGkgY2xpZW50IgljbGllbnRfaWQyBnN0cmluZ7oBGgoJeC1leGFtcGxlEg0SC3N3YWdnZXJfdWkKSvcBCkUKAzIwMBI+CjwKFFN1Y2Nlc3NmdWwgb3BlcmF0aW9uEiQKIgogIy9kZWZpbml0aW9ucy9HZXRBbGxNb2RlbHNSZXN1bHQKPAoDNDAwEjUKMwoUSW52YWxpZCBjbGllbnQgaW5wdXQSGwoZChcjL2RlZmluaXRpb25zL0Vycm9ySW5mbwovCgM0MjQSKAomCgdUaW1lb3V0EhsKGQoXIy9kZWZpbml0aW9ucy9FcnJvckluZm8KPwoDNTAwEjgKNgoXVW5leHBlY3RlZCBTZXJ2ZXIgRXJyb3ISGwoZChcjL2RlZmluaXRpb25zL0Vycm9ySW5mb0r0IgpbCgpTdHJpbmdFbnVtEk2iARMSEXN0cmluZ0VudW1WYWx1ZTEKogETEhFzdHJpbmdFbnVtVmFsdWUyCqIBExIRc3RyaW5nRW51bVZhbHVlMwqyAQgKBnN0cmluZwqjCQoNQWxsUHJpbWl0aXZlcxKRCSI/T2JqZWN0IHdoaWNoIGNvbnRhaW5zIGxvdHMgb2YgZGlmZmVyZW50IHByaW1pdGl2ZSBPcGVuQVBJIHR5cGVzsgEICgZvYmplY3TKAcEIChkKCW15SW50ZWdlchIMsgEJCgdpbnRlZ2VyCi0KDm15SW50ZWdlckFycmF5EhuyAQcKBWFycmF5ugEOCgyyAQkKB2ludGVnZXIKHQoGbXlMb25nEhMSBWludDY0sgEJCgdpbnRlZ2VyCjEKC215TG9uZ0FycmF5EiKyAQcKBWFycmF5ugEVChMSBWludDY0sgEJCgdpbnRlZ2VyCh0KB215RmxvYXQSEhIFZmxvYXSyAQgKBm51bWJlcgoxCgxteUZsb2F0QXJyYXkSIbIBBwoFYXJyYXm6ARQKEhIFZmxvYXSyAQgKBm51bWJlcgofCghteURvdWJsZRITEgZkb3VibGWyAQgKBm51bWJlcgozCg1teURvdWJsZUFycmF5EiKyAQcKBWFycmF5ugEVChMSBmRvdWJsZbIBCAoGbnVtYmVyChcKCG15U3RyaW5nEguyAQgKBnN0cmluZworCg1teVN0cmluZ0FycmF5EhqyAQcKBWFycmF5ugENCguyAQgKBnN0cmluZwocCgdteUJ5dGVzEhESBGJ5dGWyAQgKBnN0cmluZwowCgxteUJ5dGVzQXJyYXkSILIBBwoFYXJyYXm6ARMKERIEYnl0ZbIBCAoGc3RyaW5nChkKCW15Qm9vbGVhbhIMsgEJCgdib29sZWFuCi0KDm15Qm9vbGVhbkFycmF5EhuyAQcKBWFycmF5ugEOCgyyAQkKB2Jvb2xlYW4KGwoGbXlEYXRlEhESBGRhdGWyAQgKBnN0cmluZwovCgtteURhdGVBcnJheRIgsgEHCgVhcnJheboBEwoREgRkYXRlsgEICgZzdHJpbmcKJAoKbXlEYXRlVGltZRIWEglkYXRlLXRpbWWyAQgKBnN0cmluZwo4Cg9teURhdGVUaW1lQXJyYXkSJbIBBwoFYXJyYXm6ARgKFhIJZGF0ZS10aW1lsgEICgZzdHJpbmcKEwoGbXlGaWxlEgmyAQYKBGZpbGUKJwoLbXlGaWxlQXJyYXkSGLIBBwoFYXJyYXm6AQsKCbIBBgoEZmlsZQobCgZteVVVSUQSERIEdXVpZLIBCAoGc3RyaW5nCi8KC215VVVJREFycmF5EiCyAQcKBWFycmF5ugETChESBHV1aWSyAQgKBnN0cmluZwoqCgxteVN0cmluZ0VudW0SGgoYIy9kZWZpbml0aW9ucy9TdHJpbmdFbnVtCj4KEW15U3RyaW5nRW51bUFycmF5EimyAQcKBWFycmF5ugEcChoKGCMvZGVmaW5pdGlvbnMvU3RyaW5nRW51bQp1ChJteUlubGluZVN0cmluZ0VudW0SX6IBGRIXaW5saW5lU3RyaW5nRW51bVZhbHVlMQqiARkSF2lubGluZVN0cmluZ0VudW1WYWx1ZTIKogEZEhdpbmxpbmVTdHJpbmdFbnVtVmFsdWUzCrIBCAoGc3RyaW5nCo4BCglFcnJvckluZm8SgAEiFEV4YW1wbGUgRXJyb3Igb2JqZWN0sgEICgZvYmplY3TKAVwKGwoEY29kZRITEgVpbnQzMrIBCQoHaW50ZWdlcgoWCgdtZXNzYWdlEguyAQgKBnN0cmluZwolCgdkZXRhaWxzEhqyAQcKBWFycmF5ugENCguyAQgKBnN0cmluZwpRChBNb2RlbFN0cmluZ0FycmF5Ej0iIVRoaXMgZGVmaW5lcyBhbiBhcnJheSBvZiBzdHJpbmdzLrIBBwoFYXJyYXm6AQ0KC7IBCAoGc3RyaW5nClkKEE1vZGVsRG91YmxlQXJyYXkSRSIhVGhpcyBkZWZpbmVzIGFuIGFycmF5IG9mIGRvdWJsZXMusgEHCgVhcnJheboBFQoTEgZkb3VibGWyAQgKBm51bWJlcgpsChNNb2RlbEVycm9ySW5mb0FycmF5ElUiK1RoaXMgZGVmaW5lcyBhbiBhcnJheSBvZiBFcnJvckluZm8gb2JqZWN0cy6yAQcKBWFycmF5ugEbChkKFyMvZGVmaW5pdGlvbnMvRXJyb3JJbmZvCsYEChBWYXJpYWJsZU5hbWVUZXN0ErEEIsUBVGhpcyBvYmplY3QgY29udGFpbnMgcHJvcGVydHkgbmFtZXMgd2hpY2ggd2Uga25vdyB3aWxsIGJlIGRpZmZlcmVudCBmcm9tIHRoZWlyIHZhcmlhYmxlIG5hbWUuIEV4YW1wbGVzIG9mIHRoaXMgaW5jbHVkZSBzbmFrZSBjYXNlIHByb3BlcnR5IG5hbWVzIGFuZCBwcm9wZXJ0eSBuYW1lcyB3aGljaCBhcmUgU3dpZnQgNSByZXNlcnZlZCB3b3Jkcy6yAQgKBm9iamVjdMoB2gIKiQEKDGV4YW1wbGVfbmFtZRJ5ImxUaGlzIHNuYWtlLWNhc2UgZXhhbXBsZV9uYW1lIHByb3BlcnR5IG5hbWUgc2hvdWxkIGJlIGNvbnZlcnRlZCB0byBhIGNhbWVsQ2FzZSB2YXJpYWJsZSBuYW1lIGxpa2UgZXhhbXBsZU5hbWWyAQgKBnN0cmluZwpfCgNmb3ISWCJLVGhpcyBwcm9wZXJ0eSBuYW1lIGlzIGEgcmVzZXJ2ZWQgd29yZCBpbiBtb3N0IGxhbmd1YWdlcywgaW5jbHVkaW5nIFN3aWZ0IDUusgEICgZzdHJpbmcKawoKbm9ybWFsTmFtZRJdIlBUaGlzIG1vZGVsIG9iamVjdCBwcm9wZXJ0eSBuYW1lIHNob3VsZCBiZSB1bmNoYW5nZWQgZnJvbSB0aGUgSlNPTiBwcm9wZXJ0eSBuYW1lLrIBCAoGc3RyaW5nCv8BChJHZXRBbGxNb2RlbHNSZXN1bHQS6AEiL1Jlc3BvbnNlIG9iamVjdCBjb250YWluaW5nIEFsbFByaW1pdGl2ZXMgb2JqZWN0sgEICgZvYmplY3TKAagBCkAKEG15UHJpbWl0aXZlQXJyYXkSLLIBBwoFYXJyYXm6AR8KHQobIy9kZWZpbml0aW9ucy9BbGxQcmltaXRpdmVzCiwKC215UHJpbWl0aXZlEh0KGyMvZGVmaW5pdGlvbnMvQWxsUHJpbWl0aXZlcwo2ChJteVZhcmlhYmxlTmFtZVRlc3QSIAoeIy9kZWZpbml0aW9ucy9WYXJpYWJsZU5hbWVUZXN0Cp4BCidNb2RlbFdpdGhTdHJpbmdBZGRpdGlvbmFsUHJvcGVydGllc09ubHkScyJWVGhpcyBpcyBhbiBlbXB0eSBtb2RlbCB3aXRoIG5vIHByb3BlcnRpZXMgYW5kIG9ubHkgYWRkaXRpb25hbFByb3BlcnRpZXMgb2YgdHlwZSBzdHJpbmeqAQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3QKogEKJE1vZGVsV2l0aEludEFkZGl0aW9uYWxQcm9wZXJ0aWVzT25seRJ6IlVUaGlzIGlzIGFuIGVtcHR5IG1vZGVsIHdpdGggbm8gcHJvcGVydGllcyBhbmQgb25seSBhZGRpdGlvbmFsUHJvcGVydGllcyBvZiB0eXBlIGludDMyqgEVChMSBWludDMysgEJCgdpbnRlZ2VysgEICgZvYmplY3QK9gQKKk1vZGVsV2l0aFByb3BlcnRpZXNBbmRBZGRpdGlvbmFsUHJvcGVydGllcxLHBCJVVGhpcyBpcyBhbiBlbXB0eSBtb2RlbCB3aXRoIG5vIHByb3BlcnRpZXMgYW5kIG9ubHkgYWRkaXRpb25hbFByb3BlcnRpZXMgb2YgdHlwZSBpbnQzMpoBDG15SW50ZWdlclJlcZoBDm15UHJpbWl0aXZlUmVxmgEQbXlTdHJpbmdBcnJheVJlcZoBE215UHJpbWl0aXZlQXJyYXlSZXGqAQ0KC7IBCAoGc3RyaW5nsgEICgZvYmplY3TKAYgDChwKDG15SW50ZWdlclJlcRIMsgEJCgdpbnRlZ2VyChwKDG15SW50ZWdlck9wdBIMsgEJCgdpbnRlZ2VyCi8KDm15UHJpbWl0aXZlUmVxEh0KGyMvZGVmaW5pdGlvbnMvQWxsUHJpbWl0aXZlcwovCg5teVByaW1pdGl2ZU9wdBIdChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKLgoQbXlTdHJpbmdBcnJheVJlcRIasgEHCgVhcnJheboBDQoLsgEICgZzdHJpbmcKLgoQbXlTdHJpbmdBcnJheU9wdBIasgEHCgVhcnJheboBDQoLsgEICgZzdHJpbmcKQwoTbXlQcmltaXRpdmVBcnJheVJlcRIssgEHCgVhcnJheboBHwodChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKQwoTbXlQcmltaXRpdmVBcnJheU9wdBIssgEHCgVhcnJheboBHwodChsjL2RlZmluaXRpb25zL0FsbFByaW1pdGl2ZXMKsQEKClNhbXBsZUJhc2USogEiQVRoaXMgaXMgYSBiYXNlIGNsYXNzIG9iamVjdCBmcm9tIHdoaWNoIG90aGVyIGNsYXNzZXMgd2lsbCBkZXJpdmUusgEICgZvYmplY3TKAVEKIgoTYmFzZUNsYXNzU3RyaW5nUHJvcBILsgEICgZzdHJpbmcKKwoUYmFzZUNsYXNzSW50ZWdlclByb3ASExIFaW50MzKyAQkKB2ludGVnZXIKxwEKDlNhbXBsZVN1YkNsYXNzErQBIjVUaGlzIGlzIGEgc3ViY2xhc3MgZGVyaXZlZCBmcm9tIHRoZSBTYW1wbGVCYXNlIGNsYXNzLsIBGgoYIy9kZWZpbml0aW9ucy9TYW1wbGVCYXNlwgFdsgEICgZvYmplY3TKAU8KIQoSc3ViQ2xhc3NTdHJpbmdQcm9wEguyAQgKBnN0cmluZwoqChNzdWJDbGFzc0ludGVnZXJQcm9wEhMSBWludDMysgEJCgdpbnRlZ2VyCqgBCghCYXNlQ2FyZBKbASJBVGhpcyBpcyBhIGJhc2UgY2FyZCBvYmplY3Qgd2hpY2ggdXNlcyBhICdjYXJkVHlwZScgZGlzY3JpbWluYXRvci6aAQhjYXJkVHlwZbIBCAoGb2JqZWN0ygEZChcKCGNhcmRUeXBlEguyAQgKBnN0cmluZ9IBCGNhcmRUeXBl+gEYCgx4LXVuaXQtdGVzdHMSCBIGLSBCNDUKCsQBCgpQZXJzb25DYXJkErUBIjlUaGlzIGlzIGEgY2FyZCBvYmplY3QgZm9yIGEgUGVyc29uIGRlcml2ZWQgZnJvbSBCYXNlQ2FyZC7CARgKFiMvZGVmaW5pdGlvbnMvQmFzZUNhcmTCAUGyAQgKBm9iamVjdMoBMwoYCglmaXJzdE5hbWUSC7IBCAoGc3RyaW5nChcKCGxhc3ROYW1lEguyAQgKBnN0cmluZ/oBGAoMeC11bml0LXRlc3RzEggSBi0gQjQ1CgrHAQoJUGxhY2VDYXJkErkBIjlUaGlzIGlzIGEgY2FyZCBvYmplY3QgZm9yIGEgUGVyc29uIGRlcml2ZWQgZnJvbSBCYXNlQ2FyZC7CARgKFiMvZGVmaW5pdGlvbnMvQmFzZUNhcmTCAUWyAQgKBm9iamVjdMoBNwoYCglwbGFjZU5hbWUSC7IBCAoGc3RyaW5nChsKDHBsYWNlQWRkcmVzcxILsgEICgZzdHJpbmf6ARgKDHgtdW5pdC10ZXN0cxIIEgYtIEI0NQpyDAoKU3dpZnQ1VGVzdHpTCilMb29rIGluIHRoaXMgZG9jIGZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLhImaHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vZG9jL2luZGV4Lmh0bWw=')),
);

/// From: 2_0/issue_8289.json
final OpenApiProto<v2.Document> fixtures_2_0_issue_8289 = (
  model: surface.Model.fromBuffer(base64Decode('CgxUZXN0IHN3YWdnZXISFgoERmlsZSoOCgRuYW1lEgZzdHJpbmcSGQoGRm9sZGVyKg8KBWZpbGVzEgRGaWxlGAI=')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASFQoMVGVzdCBzd2FnZ2VyEgUwLjEuMBoObG9jYWxob3N0OjMwMDAqBGh0dHBCAEqDAQoxCgRGaWxlEikaBEZpbGWyAQgKBm9iamVjdMoBFQoTCgRuYW1lEguyAQgKBnN0cmluZwpOCgZGb2xkZXISRBoGRm9sZGVysgEICgZvYmplY3TKAS4KLAoFZmlsZXMSI7IBBwoFYXJyYXm6ARYKFAoSIy9kZWZpbml0aW9ucy9GaWxl')),
);

/// From: bugs/issue_14917.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14917 = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0EhgKB0FsbFBldHMqDQoEcGV0cxIDUGV0GAISGAoDUGV0KhEKB3BldFR5cGUSBnN0cmluZxIoCgNDYXQqEQoHcGV0VHlwZRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZxIoCgNEb2cqEQoHcGV0VHlwZRIGc3RyaW5nKg4KBGJhcmsSBnN0cmluZxIyCgZMaXphcmQqEQoHcGV0VHlwZRIGc3RyaW5nKhUKCmxvdmVzUm9ja3MSB2Jvb2xlYW4SYQoRR0VUX2RlbW9SZXNwb25zZXMaLUdFVF9kZW1vUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfZGVtbyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMaKRIFL2RlbW8aA0dFVCoIR0VUX2RlbW9SEUdFVF9kZW1vUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIaCgR0ZXN0Egt0ZXN0IHNjaGVtYTIFMS4wLjAaGAoPaHR0cDovL3Rlc3QuY29tEgVzdGFnZSJuCmwKBS9kZW1vEmMiYRITcGxhY2Vob2xkZXIgc3VtbWFyeUJKEkgKAzIwMBJBCj8KB1N1Y2Nlc3MaNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQq/wMK/AMKTgoHQWxsUGV0cxJDCkHKAQZvYmplY3T6ATUKMwoEcGV0cxIrCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAqvAQoDUGV0EqcBCqQBEnQKB3BldFR5cGUSaQofCgNjYXQSGCMvY29tcG9uZW50cy9zY2hlbWFzL0NhdAofCgNkb2cSGCMvY29tcG9uZW50cy9zY2hlbWFzL0RvZwolCgZsaXphcmQSGyMvY29tcG9uZW50cy9zY2hlbWFzL0xpemFyZLoBB3BldFR5cGXKAQZvYmplY3T6ARgKFgoHcGV0VHlwZRILCgnKAQZzdHJpbmcKTgoDQ2F0EkcKRdIBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXTSASMKIcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZwpOCgNEb2cSRwpF0gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBIwohygEGb2JqZWN0+gEVChMKBGJhcmsSCwoJygEGc3RyaW5nClgKBkxpemFyZBJOCkzSARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV00gEqCijKAQZvYmplY3T6ARwKGgoKbG92ZXNSb2NrcxIMCgrKAQdib29sZWFu')),
);

/// From: bugs/issue_12494.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_12494 = (
  model: surface.Model.fromBuffer(base64Decode('CgtFeGFtcGxlIEFwaRI6CgtQYXJlbnRDbGFzcyoUCgpvYmplY3RUeXBlEgZzdHJpbmcqFQoHc29tZU1hcBIITWFwQ2xhc3MYAxJPCgpDaGlsZENsYXNzKhQKCm9iamVjdFR5cGUSBnN0cmluZyoVCgdzb21lTWFwEghNYXBDbGFzcxgDKhQKCm9iamVjdFR5cGUSBnN0cmluZxI4CghNYXBDbGFzcyosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAEaGwoFZHVtbXkSBi9kdW1teRoDR0VUKgVEdW1teQ==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIUCgtFeGFtcGxlIEFwaTIFMS4wLjAiLQorCgYvZHVtbXkSISIfEgVkdW1teSoFZHVtbXlCDxINCgMyMDASBgoECgJPSyqwAgqtAgp7CgpDaGlsZENsYXNzEm0Ka8oBBm9iamVjdNIBJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnRDbGFzc9IBOAo2ygEGb2JqZWN0+gEqCigKCm9iamVjdFR5cGUSGgoYygEGc3RyaW5nigIMGgpDaGlsZENsYXNzCoQBCgtQYXJlbnRDbGFzcxJ1CnMSDAoKb2JqZWN0VHlwZcoBBm9iamVjdPoBWQopCgpvYmplY3RUeXBlEhsKGcoBBnN0cmluZ4oCDRoLUGFyZW50Q2xhc3MKLAoHc29tZU1hcBIhEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL01hcENsYXNzCicKCE1hcENsYXNzEhsKGcoBBm9iamVjdIICDQoLCgnKAQZzdHJpbmc=')),
);

/// From: bugs/issue_12457.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_12457 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEncKKHdpbGRjYXJkU3ViVHlwZUZvckNvbnRlbnRUeXBlUmVxdWVzdEJvZHkqKgoYYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtEgZzdHJpbmciBmJpbmFyeSofCg1hcHBsaWNhdGlvbi8qEgZzdHJpbmciBmJpbmFyeRLAAQonV2lsZGNhcmRTdWJUeXBlRm9yQ29udGVudFR5cGVQYXJhbWV0ZXJzGllXaWxkY2FyZFN1YlR5cGVGb3JDb250ZW50VHlwZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBXaWxkY2FyZFN1YlR5cGVGb3JDb250ZW50VHlwZSo6CgxyZXF1ZXN0X2JvZHkSKHdpbGRjYXJkU3ViVHlwZUZvckNvbnRlbnRUeXBlUmVxdWVzdEJvZHkYAxK+AQomV2lsZGNhcmRTdWJUeXBlRm9yQ29udGVudFR5cGVSZXNwb25zZXMaV1dpbGRjYXJkU3ViVHlwZUZvckNvbnRlbnRUeXBlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBXaWxkY2FyZFN1YlR5cGVGb3JDb250ZW50VHlwZSoeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nKhsKETIwMCBhcHBsaWNhdGlvbi8qEgZzdHJpbmcangEKHXdpbGRjYXJkU3ViVHlwZUZvckNvbnRlbnRUeXBlEggvcmVxdWVzdBoDR0VUKh1XaWxkY2FyZFN1YlR5cGVGb3JDb250ZW50VHlwZUonV2lsZGNhcmRTdWJUeXBlRm9yQ29udGVudFR5cGVQYXJhbWV0ZXJzUiZXaWxkY2FyZFN1YlR5cGVGb3JDb250ZW50VHlwZVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRI5ChBPcGVuQVBJIFBldHN0b3JlEh5zYW1wbGUgdG8gdmV0IGludGVnZXIgaGFuZGxpbmcyBTEuMC4wIogCCoUCCggvcmVxdWVzdBL4ASL1AQoFdXNlcnMqHXdpbGRjYXJkU3ViVHlwZUZvckNvbnRlbnRUeXBlOnEKbwoOVGhlIGF0dGFjaG1lbnQSXQoyChhhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0SFgoUChLKAQZzdHJpbmeaAgZiaW5hcnkKJwoNYXBwbGljYXRpb24vKhIWChQKEsoBBnN0cmluZ5oCBmJpbmFyeUJaElgKAzIwMBJRCk8KCHJlc3BvbnNlGkMKIQoQYXBwbGljYXRpb24vanNvbhINCgsKCcoBBnN0cmluZwoeCg1hcHBsaWNhdGlvbi8qEg0KCwoJygEGc3RyaW5n')),
);

/// From: bugs/issue_constructor-required-values-with-multiple-inheritance.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_constructor_required_values_with_multiple_inheritance = (
  model: surface.Model.fromBuffer(base64Decode('ChFXcm9uZyBDb25zdHJ1Y3RvchJbCghCYXNlVHlwZSogCg1zY2hlbWFWZXJzaW9uEg1TY2hlbWFWZXJzaW9uGAMqEgoCaWQSBnN0cmluZyIEdXVpZCoZCg1mcmVlVGV4dEZpZWxkEgZzdHJpbmcYAhKZAQoQSW50ZXJtZWRpYXRlVHlwZSogCg1zY2hlbWFWZXJzaW9uEg1TY2hlbWFWZXJzaW9uGAMqEgoCaWQSBnN0cmluZyIEdXVpZCoZCg1mcmVlVGV4dEZpZWxkEgZzdHJpbmcYAioVCgpPbmVCb29sZWFuEgdib29sZWFuKh0KEk9uZU9wdGlvbmFsQm9vbGVhbhIHYm9vbGVhbhLMAQoTSW50ZXJtZWRpYXRlU3ViVHlwZSogCg1zY2hlbWFWZXJzaW9uEg1TY2hlbWFWZXJzaW9uGAMqEgoCaWQSBnN0cmluZyIEdXVpZCoZCg1mcmVlVGV4dEZpZWxkEgZzdHJpbmcYAioVCgpPbmVCb29sZWFuEgdib29sZWFuKh0KEk9uZU9wdGlvbmFsQm9vbGVhbhIHYm9vbGVhbioWCgtzb21lQm9vbGVhbhIHYm9vbGVhbioWCghzb21lRW51bRIIU29tZUVudW0YAxLZAQoHU3ViVHlwZSogCg1zY2hlbWFWZXJzaW9uEg1TY2hlbWFWZXJzaW9uGAMqEgoCaWQSBnN0cmluZyIEdXVpZCoZCg1mcmVlVGV4dEZpZWxkEgZzdHJpbmcYAioVCgpPbmVCb29sZWFuEgdib29sZWFuKh0KEk9uZU9wdGlvbmFsQm9vbGVhbhIHYm9vbGVhbioWCgtzb21lQm9vbGVhbhIHYm9vbGVhbioWCghzb21lRW51bRIIU29tZUVudW0YAyoXCgR0eXBlEgZzdHJpbmdSB1N1YlR5cGUSJwoIU29tZUVudW0qGwoFdmFsdWUSBnN0cmluZ1IETElUMVIETElUMhInCg1TY2hlbWFWZXJzaW9uKhYKBXZhbHVlEgZzdHJpbmdSBTEuMC4w')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIaChFXcm9uZyBDb25zdHJ1Y3RvcjIFMC4wLjAiACqVBwqSBwruAQoIQmFzZVR5cGUS4QEK3gESMQoEdHlwZRIpCicKB1N1YlR5cGUSHCMvY29tcG9uZW50cy9zY2hlbWFzL1N1YlR5cGW6AQ1zY2hlbWFWZXJzaW9uugECaWTKAQZvYmplY3T6AYkBCjcKDXNjaGVtYVZlcnNpb24SJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9TY2hlbWFWZXJzaW9uChgKAmlkEhIKEMoBBnN0cmluZ5oCBHV1aWQKNAoNZnJlZVRleHRGaWVsZBIjCiGQAQbKAQVhcnJhefIBEAoOCgx4/wHKAQZzdHJpbmeKAgAKpAEKEEludGVybWVkaWF0ZVR5cGUSjwEKjAHSASESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvQmFzZVR5cGXSAWUKY7oBCk9uZUJvb2xlYW7KAQZvYmplY3T6AUoKHwoKT25lQm9vbGVhbhIRCg/KAQdib29sZWFuigICEAAKJwoST25lT3B0aW9uYWxCb29sZWFuEhEKD8oBB2Jvb2xlYW6KAgIQAArCAQoTSW50ZXJtZWRpYXRlU3ViVHlwZRKqAQqnAdIBKRInCiUjL2NvbXBvbmVudHMvc2NoZW1hcy9JbnRlcm1lZGlhdGVUeXBl0gF4Cna6AQtzb21lQm9vbGVhbroBCHNvbWVFbnVtygEGb2JqZWN0+gFRCiAKC3NvbWVCb29sZWFuEhEKD8oBB2Jvb2xlYW6KAgIQAAotCghzb21lRW51bRIhEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVFbnVtCoIBCgdTdWJUeXBlEncKddIBLBIqCigjL2NvbXBvbmVudHMvc2NoZW1hcy9JbnRlcm1lZGlhdGVTdWJUeXBl0gFDCkG6AQR0eXBlygEGb2JqZWN0+gEuCiwKBHR5cGUSJAoiwgEKEghTdWJUeXBlCsoBBnN0cmluZ4oCCRoHU3ViVHlwZQpZCghTb21lRW51bRJNCkvCAQcSBUxJVDEKwgEHEgVMSVQyCsoBBnN0cmluZ6ICKwoPeC1lbnVtLXZhcm5hbWVzEhgSFi0gTGl0ZXJhbDEKLSBMaXRlcmFsMgoKUwoNU2NoZW1hVmVyc2lvbhJCCkDCAQgSBjEuMC4wCsoBBnN0cmluZ4oCBxoFMS4wLjCiAh8KD3gtZW51bS12YXJuYW1lcxIMEgotIENVUlJFTlQK')),
);

/// From: bugs/issue_7125.json
final OpenApiProto<v3.Document> fixtures_bugs_issue_7125 = (
  model: surface.Model.fromBuffer(base64Decode('CgV0aXRsZRIYCghTb21lQm9keSoMCgJpZBIGc3RyaW5nEiIKCUhlYWRlck9uZSoVCglIZWFkZXJPbmUSBnN0cmluZygBEiMKCUhlYWRlclR3byoWCglIZWFkZXJUd28SB2ludGVnZXIoARJBCh9tZXRob2RXaXRoVmFsaWRhdGlvblJlcXVlc3RCb2R5Kh4KEGFwcGxpY2F0aW9uL2pzb24SCFNvbWVCb2R5GAMS1AEKHk1ldGhvZFdpdGhWYWxpZGF0aW9uUGFyYW1ldGVycxpHTWV0aG9kV2l0aFZhbGlkYXRpb25QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gTWV0aG9kV2l0aFZhbGlkYXRpb24qGgoJSGVhZGVyT25lEglIZWFkZXJPbmUYAygBKhoKCUhlYWRlclR3bxIJSGVhZGVyVHdvGAMoASoxCgxyZXF1ZXN0X2JvZHkSH21ldGhvZFdpdGhWYWxpZGF0aW9uUmVxdWVzdEJvZHkYAxpxChRtZXRob2RXaXRoVmFsaWRhdGlvbhIQL3NvbWVVcmwvdjEvc210aBoEUE9TVCILZGVzY3JpcHRpb24qFE1ldGhvZFdpdGhWYWxpZGF0aW9uSh5NZXRob2RXaXRoVmFsaWRhdGlvblBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIzCgV0aXRsZRILZGVzY3JpcHRpb24iFgoEbmFtZRIDdXJsGgllbWFpbC5jb20yBTEuMC4wIoYCCoMCChAvc29tZVVybC92MS9zbXRoEu4BMusBCgpzb21lTWV0aG9kEgdzdW1tYXJ5GgtkZXNjcmlwdGlvbioUbWV0aG9kV2l0aFZhbGlkYXRpb24yJRIjCiEjL2NvbXBvbmVudHMvcGFyYW1ldGVycy9IZWFkZXJPbmUyJRIjCiEjL2NvbXBvbmVudHMvcGFyYW1ldGVycy9IZWFkZXJUd286TQpLCgxSZXF1ZXN0IEJvZHkSOQo3ChBhcHBsaWNhdGlvbi9qc29uEiMKIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9Tb21lQm9keRgBQhQSEgoDMjAyEgsKCQoHc3VjY2VzcyrvAQpMCkoKCFNvbWVCb2R5Ej4KPLoBAmlkygEGb2JqZWN0+gErCikKAmlkEiMKIToIEgYiMTIzIgrKAQZzdHJpbmeSAgtkZXNjcmlwdGlvbhqeAQpJCglIZWFkZXJPbmUSPAo6CglIZWFkZXJPbmUSBmhlYWRlchoLZGVzY3JpcHRpb24gAVIWChR4CoABAYoBA1xkK8oBBnN0cmluZwpRCglIZWFkZXJUd28SRApCCglIZWFkZXJUd28SBmhlYWRlchoLZGVzY3JpcHRpb24gAVIeChxZAAAAAACIw0BpAAAAAABAf0DKAQdpbnRlZ2Vy')),
);

/// From: bugs/issue_11304_kotlin_backticks_reserved_words.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11304_kotlin_backticks_reserved_words = (
  model: surface.Model.fromBuffer(base64Decode('CgxLb3RsaW4gSXNzdWUSTAoOVGVzdFBhcmFtZXRlcnMaJ1Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVGVzdCoRCgV2YWx1ZRIGc3RyaW5nKAQaMQoEdGVzdBINL3Rlc3Qve3ZhbHVlfRoEUE9TVCoEVGVzdEoOVGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxITCgxLb3RsaW4gSXNzdWUyAzEuMBoSChBodHRwOi8vbG9jYWxob3N0ImAKXgoNL3Rlc3Qve3ZhbHVlfRJNMksSBHRlc3QqBHRlc3QyLAoqCgV2YWx1ZRIEcGF0aCABUgsKCcoBBnN0cmluZ1oMEgpzb21ldGhpbmcKQg8SDQoDMjAwEgYKBAoCT0s=')),
);

/// From: bugs/issue_12790.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_12790 = (
  model: surface.Model.fromBuffer(base64Decode('CgVUaXRsZRJsCgpUZXN0T2JqZWN0KhoKEG51bGxhYmxlUHJvcGVydHkSBnN0cmluZyodChNub3ROdWxsYWJsZVByb3BlcnR5EgZzdHJpbmcqIwoYbm90TnVsbGFibGVQcm9wZXJ0eU5vdFJPEgdpbnRlZ2VyEmgKEUdFVF90ZXN0UmVzcG9uc2VzGi1HRVRfdGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX3Rlc3QqJAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SClRlc3RPYmplY3QYAxopEgUvdGVzdBoDR0VUKghHRVRfdGVzdFIRR0VUX3Rlc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIKCgVUaXRsZTIBMSJgCl4KBS90ZXN0ElUiU0JREk8KAzIwMBJICkYKB1N1Y2Nlc3MaOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0T2JqZWN0KpkBCpYBCpMBCgpUZXN0T2JqZWN0EoQBCoEBygEGb2JqZWN0+gF1CiMKEG51bGxhYmxlUHJvcGVydHkSDwoNCAEYAcoBBnN0cmluZwokChNub3ROdWxsYWJsZVByb3BlcnR5Eg0KCxgBygEGc3RyaW5nCigKGG5vdE51bGxhYmxlUHJvcGVydHlOb3RSTxIMCgrKAQdpbnRlZ2Vy')),
);

/// From: bugs/issue_13385_2.yml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13385_2 = (
  model: surface.Model.fromBuffer(base64Decode('ChVBcnJheU51bGxhYmxlVGVzdCBBcGkSJQoKVGVzdE9iamVjdCoXCgdwaWN0dXJlEgZzdHJpbmciBGJ5dGUaIwoFZHVtbXkSDi9hcnJheU51bGxhYmxlGgNHRVQqBUR1bW15')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJUChVBcnJheU51bGxhYmxlVGVzdCBBcGkSNFNwZWNpZmljYXRpb24gdG8gcmVwcm9kdWNlIG51bGxhYmxlIGlzc3VlIHdpdGggQXJyYXkyBTEuMC4wIjUKMwoOL2FycmF5TnVsbGFibGUSISIfEgVkdW1teSoFZHVtbXlCDxINCgMyMDASBgoECgJPSyo/Cj0KOwoKVGVzdE9iamVjdBItCivKAQZvYmplY3T6AR8KHQoHcGljdHVyZRISChDKAQZzdHJpbmeaAgRieXRl')),
);

/// From: bugs/issue_13385.yml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13385 = (
  model: surface.Model.fromBuffer(base64Decode('ChVBcnJheU51bGxhYmxlVGVzdCBBcGkSJQoKVGVzdE9iamVjdCoXCgdwaWN0dXJlEgZzdHJpbmciBGJ5dGUaIwoFZHVtbXkSDi9hcnJheU51bGxhYmxlGgNHRVQqBUR1bW15')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJUChVBcnJheU51bGxhYmxlVGVzdCBBcGkSNFNwZWNpZmljYXRpb24gdG8gcmVwcm9kdWNlIG51bGxhYmxlIGlzc3VlIHdpdGggQXJyYXkyBTEuMC4wIjUKMwoOL2FycmF5TnVsbGFibGUSISIfEgVkdW1teSoFZHVtbXlCDxINCgMyMDASBgoECgJPSypBCj8KPQoKVGVzdE9iamVjdBIvCi3KAQZvYmplY3T6ASEKHwoHcGljdHVyZRIUChIIAcoBBnN0cmluZ5oCBGJ5dGU=')),
);

/// From: bugs/issue_12524.json
final OpenApiProto<v3.Document> fixtures_bugs_issue_12524 = (
  model: surface.Model.fromBuffer(base64Decode('CgtTYW1wbGUgQVBJcxI4ChNBUEkwMV9BYnN0cmFjdFN0dWZmKiEKDGRhdGVfY3JlYXRlZBIGc3RyaW5nIglkYXRlLXRpbWUSVAoQQVBJMDFfRmlyc3RTdHVmZiohCgxkYXRlX2NyZWF0ZWQSBnN0cmluZyIJZGF0ZS10aW1lKh0KCGVuZF90aW1lEgZzdHJpbmciCWRhdGUtdGltZRJaChFBUEkwMV9TZWNvbmRTdHVmZiohCgxkYXRlX2NyZWF0ZWQSBnN0cmluZyIJZGF0ZS10aW1lKiIKDWVtaXNzaW9uX2RhdGUSBnN0cmluZyIJZGF0ZS10aW1lEjMKEUFQSTAxX0xpc3RPZlN0dWZmKh4KBXZhbHVlEhNBUEkwMV9BYnN0cmFjdFN0dWZmGAISUAoPQVBJMDFQYXJhbWV0ZXJzGilBUEkwMVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBBUEkwMSoSCgZwYXJhbTESBnN0cmluZygDEmYKDkFQSTAxUmVzcG9uc2VzGidBUEkwMVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQVBJMDEqKwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SEUFQSTAxX0xpc3RPZlN0dWZmGAMaQAoFQVBJMDESCi9hcGkvc3R1ZmYaA0dFVCoFQVBJMDFKD0FQSTAxUGFyYW1ldGVyc1IOQVBJMDFSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIzCgtTYW1wbGUgQVBJczIkMDg5NjBkNDgtMjYxMy00MTMzLTkyZjMtNGFkZTRmMTEwN2Y4IqsBCqgBCgovYXBpL3N0dWZmEpkBIpYBEghEbyBzdHVmZioFQVBJMDEyLgosCgZwYXJhbTESBXF1ZXJ5Gg5Tb21lIHBhcmFtZXRlclILCgnKAQZzdHJpbmdCUxJRCgMyMDASSgpICgJPSxpCCkAKEGFwcGxpY2F0aW9uL2pzb24SLAoqEigKJiMvY29tcG9uZW50cy9zY2hlbWFzL0FQSTAxX0xpc3RPZlN0dWZmKqEFCp4FCswBChNBUEkwMV9BYnN0cmFjdFN0dWZmErQBCrEBEmoKBHR5cGUSYgouCgVGSVJTVBIlIy9jb21wb25lbnRzL3NjaGVtYXMvQVBJMDFfRmlyc3RTdHVmZgowCgZTRUNPTkQSJiMvY29tcG9uZW50cy9zY2hlbWFzL0FQSTAxX1NlY29uZFN0dWZmygEGb2JqZWN0+gE5CjcKDGRhdGVfY3JlYXRlZBInCiXKAQZzdHJpbmeSAg1DcmVhdGlvbiBkYXRlmgIJZGF0ZS10aW1lCqIBChBBUEkwMV9GaXJzdFN0dWZmEo0BCooBygEGb2JqZWN00gEsEioKKCMvY29tcG9uZW50cy9zY2hlbWFzL0FQSTAxX0Fic3RyYWN0U3R1ZmbSAUEKP8oBBm9iamVjdPoBMwoxCghlbmRfdGltZRIlCiPKAQZzdHJpbmeSAgtFbmRpbmcgZGF0ZZoCCWRhdGUtdGltZZICC0ZpcnN0IHN0dWZmCqsBChFBUEkwMV9TZWNvbmRTdHVmZhKVAQqSAcoBBm9iamVjdNIBLBIqCigjL2NvbXBvbmVudHMvc2NoZW1hcy9BUEkwMV9BYnN0cmFjdFN0dWZm0gFICkbKAQZvYmplY3T6AToKOAoNZW1pc3Npb25fZGF0ZRInCiXKAQZzdHJpbmeSAg1FbWlzc2lvbiBkYXRlmgIJZGF0ZS10aW1lkgIMU2Vjb25kIHN0dWZmCnoKEUFQSTAxX0xpc3RPZlN0dWZmEmUKY8oBBWFycmF58gEuCiwSKgooIy9jb21wb25lbnRzL3NjaGVtYXMvQVBJMDFfQWJzdHJhY3RTdHVmZvoBFwoVCgVlbXB0eRIMCgrKAQdib29sZWFukgINTGlzdCBvZiBzdHVmZkodChJ4LWdyb3VwLXBhcmFtZXRlcnMSBxIFdHJ1ZQo=')),
);

/// From: bugs/issue_15265.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_15265 = (
  model: surface.Model.fromBuffer(base64Decode('CgRURVNUEioKEVJlc3BvbnNlQWdyZWVtZW50KhUKC2FncmVlbWVudElkEgZzdHJpbmcSegodUGFnaW5hdGVkV2l0aFBhcmFtc1BhcmFtZXRlcnMaRVBhZ2luYXRlZFdpdGhQYXJhbXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUGFnaW5hdGVkV2l0aFBhcmFtcyoSCgZwYXJhbTESBnN0cmluZygDEpABChxQYWdpbmF0ZWRXaXRoUGFyYW1zUmVzcG9uc2VzGkNQYWdpbmF0ZWRXaXRoUGFyYW1zUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQYWdpbmF0ZWRXaXRoUGFyYW1zKisKFDIwMCBhcHBsaWNhdGlvbi9qc29uEhFSZXNwb25zZUFncmVlbWVudBgDEnIKElBhZ2luYXRlZFJlc3BvbnNlcxovUGFnaW5hdGVkUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQYWdpbmF0ZWQqKwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SEVJlc3BvbnNlQWdyZWVtZW50GAMahAEKE3BhZ2luYXRlZFdpdGhQYXJhbXMSFi9wYWdpbmF0ZWQtd2l0aC1wYXJhbXMaA0dFVCoTUGFnaW5hdGVkV2l0aFBhcmFtc0odUGFnaW5hdGVkV2l0aFBhcmFtc1BhcmFtZXRlcnNSHFBhZ2luYXRlZFdpdGhQYXJhbXNSZXNwb25zZXMaOwoJcGFnaW5hdGVkEgovcGFnaW5hdGVkGgNHRVQqCVBhZ2luYXRlZFISUGFnaW5hdGVkUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIWCgRURVNUEgcjIyBURVNUMgUxLjAuMBofCgMvdjMSGE1ham9yIHZlcnNpb24gb2Ygc2VydmljZSKGAwrbAQoWL3BhZ2luYXRlZC13aXRoLXBhcmFtcxLAASK9AQoSY29uc2VudC1jb250cm9sbGVyKhNwYWdpbmF0ZWRXaXRoUGFyYW1zMh4KHAoGcGFyYW0xEgVxdWVyeVILCgnKAQZzdHJpbmdCUxJRCgMyMDASSgpICgJPSxpCCkAKEGFwcGxpY2F0aW9uL2pzb24SLAoqEigKJiMvY29tcG9uZW50cy9zY2hlbWFzL1Jlc3BvbnNlQWdyZWVtZW50ah0KEngtc3ByaW5nLXBhZ2luYXRlZBIHEgV0cnVlCgqlAQoKL3BhZ2luYXRlZBKWASKTAQoSY29uc2VudC1jb250cm9sbGVyKglwYWdpbmF0ZWRCUxJRCgMyMDASSgpICgJPSxpCCkAKEGFwcGxpY2F0aW9uL2pzb24SLAoqEigKJiMvY29tcG9uZW50cy9zY2hlbWFzL1Jlc3BvbnNlQWdyZWVtZW50ah0KEngtc3ByaW5nLXBhZ2luYXRlZBIHEgV0cnVlCipDCkEKPwoRUmVzcG9uc2VBZ3JlZW1lbnQSKgooygEGb2JqZWN0+gEcChoKC2FncmVlbWVudElkEgsKCcoBBnN0cmluZzohChJjb25zZW50LWNvbnRyb2xsZXISC0NvbnNlbnQgQVBJ')),
);

/// From: bugs/issue_14907.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14907 = (
  model: surface.Model.fromBuffer(base64Decode('CgRURVNUEioKEVJlc3BvbnNlQWdyZWVtZW50KhUKC2FncmVlbWVudElkEgZzdHJpbmcSPAodTGlzdFJlc3BvbnNlUmVzcG9uc2VBZ3JlZW1lbnQqGwoEbGlzdBIRUmVzcG9uc2VBZ3JlZW1lbnQYAhIzChF4LWNsaWVudC1pc21vYmlsZSoeChF4LWNsaWVudC1pc21vYmlsZRIHYm9vbGVhbigBEoABChdSZWFkQWdyZWVtZW50c1Jlc3BvbnNlcxo5UmVhZEFncmVlbWVudHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFJlYWRBZ3JlZW1lbnRzKioKBzIwMCAqLyoSHUxpc3RSZXNwb25zZVJlc3BvbnNlQWdyZWVtZW50GAMaSwoOcmVhZEFncmVlbWVudHMSCy9hZ3JlZW1lbnRzGgNHRVQqDlJlYWRBZ3JlZW1lbnRzUhdSZWFkQWdyZWVtZW50c1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIWCgRURVNUEgcjIyBURVNUMgUxLjAuMBofCgMvdjMSGE1ham9yIHZlcnNpb24gb2Ygc2VydmljZSK8AQq5AQoLL2FncmVlbWVudHMSqQEieAoSY29uc2VudC1jb250cm9sbGVyKg5yZWFkQWdyZWVtZW50c0JSElAKAzIwMBJJCkcKAk9LGkEKPwoDKi8qEjgKNhI0CjIjL2NvbXBvbmVudHMvc2NoZW1hcy9MaXN0UmVzcG9uc2VSZXNwb25zZUFncmVlbWVudGotEisKKSMvY29tcG9uZW50cy9wYXJhbWV0ZXJzL3gtY2xpZW50LWlzbW9iaWxlKoUCCrUBCj8KEVJlc3BvbnNlQWdyZWVtZW50EioKKMoBBm9iamVjdPoBHAoaCgthZ3JlZW1lbnRJZBILCgnKAQZzdHJpbmcKcgodTGlzdFJlc3BvbnNlUmVzcG9uc2VBZ3JlZW1lbnQSUQpPygEGb2JqZWN0+gFDCkEKBGxpc3QSOQo3ygEFYXJyYXnyASwKKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9SZXNwb25zZUFncmVlbWVudBpLCkkKEXgtY2xpZW50LWlzbW9iaWxlEjQKMgoReC1jbGllbnQtaXNtb2JpbGUSBmhlYWRlchoHYmxhYmxhClIMCgrKAQdib29sZWFuOiEKEmNvbnNlbnQtY29udHJvbGxlchILQ29uc2VudCBBUEk=')),
);

/// From: bugs/issue_14252.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14252 = (
  model: surface.Model.fromBuffer(base64Decode('Chl0ZXN0IGJpZ2RlY2ltYWwgYXMgU3RyaW5nEigKCk15UmVzcG9uc2UqGgoQbXlQcm9wVHlwZU51bWJlchIGbnVtYmVyElkKDEdldFJlc3BvbnNlcxojR2V0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXQqJAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCk15UmVzcG9uc2UYAxokCgNnZXQSBS90ZXN0GgNHRVQqA0dldFIMR2V0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhI9Chl0ZXN0IGJpZ2RlY2ltYWwgYXMgU3RyaW5nEhl0ZXN0IGJpZ2RlY2ltYWwgYXMgU3RyaW5nMgUxLjAuMBoSChBodHRwczovL3Rlc3Qub3JnImAKXgoFL3Rlc3QSVSJTKgNnZXRCTBJKCgMyMDASQwpBCgJPSxo7CjkKEGFwcGxpY2F0aW9uL2pzb24SJQojEiEKHyMvY29tcG9uZW50cy9zY2hlbWFzL015UmVzcG9uc2UqOAo2CjQKCk15UmVzcG9uc2USJgok+gEhCh8KEG15UHJvcFR5cGVOdW1iZXISCwoJygEGbnVtYmVy')),
);

/// From: bugs/issue_7118.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_7118 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEnAKFUdldFVzZXJJZFNldFJlc3BvbnNlcxo1R2V0VXNlcklkU2V0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRVc2VySWRTZXQqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxgCEnMKFkdldFVzZXJJZExpc3RSZXNwb25zZXMaN0dldFVzZXJJZExpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFVzZXJJZExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxgCGkwKDGdldFVzZXJJZFNldBISL3VzZXJzL2lkP3R5cGU9c2V0GgNHRVQqDEdldFVzZXJJZFNldFIVR2V0VXNlcklkU2V0UmVzcG9uc2VzGlAKDWdldFVzZXJJZExpc3QSEy91c2Vycy9pZD90eXBlPWxpc3QaA0dFVCoNR2V0VXNlcklkTGlzdFIWR2V0VXNlcklkTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJSChBPcGVuQVBJIFBldHN0b3JlEjdzYW1wbGUgdG8gZ2V0IGFsbCB1c2VyIGlkIGFzIHN0cmluZyBsaXN0IGFuZCBzdHJpbmcgc2V0MgUxLjAuMCL5AQp7ChIvdXNlcnMvaWQ/dHlwZT1zZXQSZSJjCgV1c2VycyoMZ2V0VXNlcklkU2V0QkwSSgoDMjAwEkMKQQoIcmVzcG9uc2UaNQozChBhcHBsaWNhdGlvbi9qc29uEh8KHQoboAEBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCnoKEy91c2Vycy9pZD90eXBlPWxpc3QSYyJhCgV1c2VycyoNZ2V0VXNlcklkTGlzdEJJEkcKAzIwMBJACj4KCHJlc3BvbnNlGjIKMAoQYXBwbGljYXRpb24vanNvbhIcChoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZw==')),
);

/// From: bugs/Swift5CodeGenerationBug2.yaml
final OpenApiProto<v3.Document> fixtures_bugs_swift5_code_generation_bug2 = (
  model: surface.Model.fromBuffer(base64Decode('CgNYWFgSXAoDUGV0Kg4KBG5hbWUSBnN0cmluZyoTCgVzdG9yZRIIUGV0U3RvcmUYAyoPCgZtb3RoZXISA1BldBgDKg8KBmZhdGhlchIDUGV0GAMqDgoEdHlwZRIGc3RyaW5nEm8KA0NhdCoOCgRuYW1lEgZzdHJpbmcqEwoFc3RvcmUSCFBldFN0b3JlGAMqDwoGbW90aGVyEgNQZXQYAyoPCgZmYXRoZXISA1BldBgDKg4KBHR5cGUSBnN0cmluZyoRCgdjYXRGb29kEgZzdHJpbmcSbwoDRG9nKg4KBG5hbWUSBnN0cmluZyoTCgVzdG9yZRIIUGV0U3RvcmUYAyoPCgZtb3RoZXISA1BldBgDKg8KBmZhdGhlchIDUGV0GAMqDgoEdHlwZRIGc3RyaW5nKhEKB2RvZ0Zvb2QSBnN0cmluZxIZCghQZXRTdG9yZSoNCgRwZXRzEgNQZXQYAhIiChJzYXZlUGV0UmVxdWVzdEJvZHkqDAoDKi8qEgNQZXQYAxJoChFTYXZlUGV0UGFyYW1ldGVycxotU2F2ZVBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBTYXZlUGV0KiQKDHJlcXVlc3RfYm9keRISc2F2ZVBldFJlcXVlc3RCb2R5GAMSUQoQU2F2ZVBldFJlc3BvbnNlcxorU2F2ZVBldFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgU2F2ZVBldCoQCgdkZWZhdWx0EgNQZXQYAxIsChdzYXZlUGV0U3RvcmVSZXF1ZXN0Qm9keSoRCgMqLyoSCFBldFN0b3JlGAMSfAoWU2F2ZVBldFN0b3JlUGFyYW1ldGVycxo3U2F2ZVBldFN0b3JlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFNhdmVQZXRTdG9yZSopCgxyZXF1ZXN0X2JvZHkSF3NhdmVQZXRTdG9yZVJlcXVlc3RCb2R5GAMSZQoVU2F2ZVBldFN0b3JlUmVzcG9uc2VzGjVTYXZlUGV0U3RvcmVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFNhdmVQZXRTdG9yZSoVCgdkZWZhdWx0EghQZXRTdG9yZRgDGmMKB3NhdmVQZXQSFy9hcGkvdjEvcGV0cmVzb3VyY2UvcGV0GgRQT1NUIgtTYXZlIGEgUGV0LioHU2F2ZVBldEoRU2F2ZVBldFBhcmFtZXRlcnNSEFNhdmVQZXRSZXNwb25zZXMagQEKDHNhdmVQZXRTdG9yZRIcL2FwaS92MS9wZXRyZXNvdXJjZS9wZXRzdG9yZRoEUE9TVCIQU2F2ZSBhIFBldHN0b3JlLioMU2F2ZVBldFN0b3JlShZTYXZlUGV0U3RvcmVQYXJhbWV0ZXJzUhVTYXZlUGV0U3RvcmVSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJKCgNYWFgSLERhcyBpc3QgamV0enQgZGVyIGVyc3RlIE9wZW5BUEkgMy4wIEVuZHBvaW50IhAaDlhYWC5YWFhAWFhYLmRlMgMxLjAisQMKyAEKFy9hcGkvdjEvcGV0cmVzb3VyY2UvcGV0EqwBMqkBCg52MS9wZXRyZXNvdXJjZRILU2F2ZSBhIFBldC4aC1NhdmUgYSBQZXQuKgdzYXZlUGV0OisKKRInCiUKAyovKhIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0QkcKRQpDCgtQZXRSZXNwb25zZRo0CjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldArjAQocL2FwaS92MS9wZXRyZXNvdXJjZS9wZXRzdG9yZRLCATK/AQoOdjEvcGV0cmVzb3VyY2USEFNhdmUgYSBQZXRzdG9yZS4aEFNhdmUgYSBQZXRzdG9yZS4qDHNhdmVQZXRTdG9yZTowCi4SLAoqCgMqLyoSIwohEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL1BldFN0b3JlQkkKRwpFCghQZXRTdG9yZRo5CjcKEGFwcGxpY2F0aW9uL2pzb24SIwohEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL1BldFN0b3JlKuwECukECmcKA0NhdBJgCl66AQR0eXBlygEGb2JqZWN00gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBJgokygEGb2JqZWN0+gEYChYKB2NhdEZvb2QSCwoJygEGc3RyaW5nkgIDQ2F0CmcKA0RvZxJgCl66AQR0eXBlygEGb2JqZWN00gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBJgokygEGb2JqZWN0+gEYChYKB2RvZ0Zvb2QSCwoJygEGc3RyaW5nkgIDRG9nCrgCCgNQZXQSsAIKrQISSgoEdHlwZRJCCh8KA0RvZxIYIy9jb21wb25lbnRzL3NjaGVtYXMvRG9nCh8KA0NhdBIYIy9jb21wb25lbnRzL3NjaGVtYXMvQ2F0ugEEdHlwZcoBBm9iamVjdPoBwgEKGgoEbmFtZRISChDKAQZzdHJpbmeSAgROYW1lCioKBXN0b3JlEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0U3RvcmUKJgoGbW90aGVyEhwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0CiYKBmZhdGhlchIcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAooCgR0eXBlEiAKHsoBBnN0cmluZ5ICElR5cGUgRGlza3JpbWluYXRvcpICCEJhc2UgUGV0CloKCFBldFN0b3JlEk4KTMoBBm9iamVjdPoBNQozCgRwZXRzEisKKcoBBWFycmF58gEeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0kgIIUGV0U3RvcmU=')),
);

/// From: bugs/issue_14418.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14418 = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0ElcKDlRlc3RQYXJhbWV0ZXJzGidUZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFRlc3QqHAoKdGVzdEhlYWRlchIGc3RyaW5nIgR1dWlkKAEaKAoEdGVzdBIFL3Rlc3QaA0dFVCoEVGVzdEoOVGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRINCgR0ZXN0MgUxLjAuMCKXAQqUAQoFL3Rlc3QSigEihwEKBHRlc3QSBHRlc3QqBHRlc3QyYgpgCgp0ZXN0SGVhZGVyEgZoZWFkZXIaC1Rlc3QgaGVhZGVyIAFSEgoQygEGc3RyaW5nmgIEdXVpZFonEiU1MjMwMjhhYy0yZTBlLTQxYWItYjZmNy0zOGMxZWZkYmFjNDUKQg8SDQoDMjAwEgYKBAoCb2s=')),
);

/// From: bugs/issue_14731.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14731 = (
  model: surface.Model.fromBuffer(base64Decode('CgpGb29TZXJ2aWNlEi0KEVBhcmVudFdpdGhNYXBwaW5nKhgKCWNoaWxkVHlwZRIJQ2hpbGRUeXBlGAMSPgoRQ2hpbGRXaXRoTWFwcGluZ0EqGAoJY2hpbGRUeXBlEglDaGlsZFR5cGUYAyoPCgVuYW1lQRIGc3RyaW5nEj4KEUNoaWxkV2l0aE1hcHBpbmdCKhgKCWNoaWxkVHlwZRIJQ2hpbGRUeXBlGAMqDwoFbmFtZUISBnN0cmluZxIcCglDaGlsZFR5cGUqDwoFdmFsdWUSBnN0cmluZxIwChRQYXJlbnRXaXRob3V0TWFwcGluZyoYCgljaGlsZFR5cGUSCUNoaWxkVHlwZRgDEkEKFENoaWxkV2l0aG91dE1hcHBpbmdBKhgKCWNoaWxkVHlwZRIJQ2hpbGRUeXBlGAMqDwoFbmFtZUESBnN0cmluZxJBChRDaGlsZFdpdGhvdXRNYXBwaW5nQioYCgljaGlsZFR5cGUSCUNoaWxkVHlwZRgDKg8KBW5hbWVCEgZzdHJpbmcSSgofcHV0UGFyZW50V2l0aE1hcHBpbmdSZXF1ZXN0Qm9keSonChBhcHBsaWNhdGlvbi9qc29uEhFQYXJlbnRXaXRoTWFwcGluZxgDEpwBCh5QdXRQYXJlbnRXaXRoTWFwcGluZ1BhcmFtZXRlcnMaR1B1dFBhcmVudFdpdGhNYXBwaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFB1dFBhcmVudFdpdGhNYXBwaW5nKjEKDHJlcXVlc3RfYm9keRIfcHV0UGFyZW50V2l0aE1hcHBpbmdSZXF1ZXN0Qm9keRgDEn0KHVB1dFBhcmVudFdpdGhNYXBwaW5nUmVzcG9uc2VzGkVQdXRQYXJlbnRXaXRoTWFwcGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUHV0UGFyZW50V2l0aE1hcHBpbmcqFRIRUGFyZW50V2l0aE1hcHBpbmcYAxJQCiJwdXRQYXJlbnRXaXRob3V0TWFwcGluZ1JlcXVlc3RCb2R5KioKEGFwcGxpY2F0aW9uL2pzb24SFFBhcmVudFdpdGhvdXRNYXBwaW5nGAMSqAEKIVB1dFBhcmVudFdpdGhvdXRNYXBwaW5nUGFyYW1ldGVycxpNUHV0UGFyZW50V2l0aG91dE1hcHBpbmdQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUHV0UGFyZW50V2l0aG91dE1hcHBpbmcqNAoMcmVxdWVzdF9ib2R5EiJwdXRQYXJlbnRXaXRob3V0TWFwcGluZ1JlcXVlc3RCb2R5GAMSiQEKIFB1dFBhcmVudFdpdGhvdXRNYXBwaW5nUmVzcG9uc2VzGktQdXRQYXJlbnRXaXRob3V0TWFwcGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUHV0UGFyZW50V2l0aG91dE1hcHBpbmcqGBIUUGFyZW50V2l0aG91dE1hcHBpbmcYAxqEAQoUcHV0UGFyZW50V2l0aE1hcHBpbmcSEi9wYXJlbnRXaXRoTWFwcGluZxoDUFVUKhRQdXRQYXJlbnRXaXRoTWFwcGluZ0oeUHV0UGFyZW50V2l0aE1hcHBpbmdQYXJhbWV0ZXJzUh1QdXRQYXJlbnRXaXRoTWFwcGluZ1Jlc3BvbnNlcxqTAQoXcHV0UGFyZW50V2l0aG91dE1hcHBpbmcSFS9wYXJlbnRXaXRob3V0TWFwcGluZxoDUFVUKhdQdXRQYXJlbnRXaXRob3V0TWFwcGluZ0ohUHV0UGFyZW50V2l0aG91dE1hcHBpbmdQYXJhbWV0ZXJzUiBQdXRQYXJlbnRXaXRob3V0TWFwcGluZ1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBITCgpGb29TZXJ2aWNlMgUxLjAuMCLoAwrrAQoSL3BhcmVudFdpdGhNYXBwaW5nEtQBKtEBCgNwZXQSCnB1dCBwYXJlbnQqFHB1dFBhcmVudFdpdGhNYXBwaW5nOnEKbwonVGhlIHVwZGF0ZWQgYWNjb3VudCBkZWZpbml0aW9uIHRvIHNhdmUuEkIKQAoQYXBwbGljYXRpb24vanNvbhIsCioSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvUGFyZW50V2l0aE1hcHBpbmcYAUI1EjMKAzIwMBIsEioKKCMvY29tcG9uZW50cy9yZXNwb25zZXMvUGFyZW50V2l0aE1hcHBpbmcK9wEKFS9wYXJlbnRXaXRob3V0TWFwcGluZxLdASraAQoDcGV0EgpwdXQgcGFyZW50KhdwdXRQYXJlbnRXaXRob3V0TWFwcGluZzp0CnIKJ1RoZSB1cGRhdGVkIGFjY291bnQgZGVmaW5pdGlvbiB0byBzYXZlLhJFCkMKEGFwcGxpY2F0aW9uL2pzb24SLwotEisKKSMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudFdpdGhvdXRNYXBwaW5nGAFCOBI2CgMyMDASLxItCisjL2NvbXBvbmVudHMvcmVzcG9uc2VzL1BhcmVudFdpdGhvdXRNYXBwaW5nKvEICocHCvABChFQYXJlbnRXaXRoTWFwcGluZxLaAQrXARJzCgljaGlsZFR5cGUSZgoxCgdjaGlsZF9hEiYjL2NvbXBvbmVudHMvc2NoZW1hcy9DaGlsZFdpdGhNYXBwaW5nQQoxCgdjaGlsZF9iEiYjL2NvbXBvbmVudHMvc2NoZW1hcy9DaGlsZFdpdGhNYXBwaW5nQroBBHR5cGXKAQZvYmplY3T6ATEKLwoJY2hpbGRUeXBlEiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGRUeXBlkgIbRGVmaW5lcyBhbiBhY2NvdW50IGJ5IG5hbWUuCmsKEUNoaWxkV2l0aE1hcHBpbmdBElYKVNIBKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnRXaXRoTWFwcGluZ9IBJAoiygEGb2JqZWN0+gEWChQKBW5hbWVBEgsKCcoBBnN0cmluZwprChFDaGlsZFdpdGhNYXBwaW5nQhJWClTSASoSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvUGFyZW50V2l0aE1hcHBpbmfSASQKIsoBBm9iamVjdPoBFgoUCgVuYW1lQhILCgnKAQZzdHJpbmcKRgoJQ2hpbGRUeXBlEjkKN8oBBnN0cmluZ6ICKwoReC1leHRlbnNpYmxlLWVudW0SFhIULSBjaGlsZF9hCi0gY2hpbGRfYgoKiQEKFFBhcmVudFdpdGhvdXRNYXBwaW5nEnEKbxILCgljaGlsZFR5cGW6AQR0eXBlygEGb2JqZWN0+gExCi8KCWNoaWxkVHlwZRIiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkVHlwZZICG0RlZmluZXMgYW4gYWNjb3VudCBieSBuYW1lLgpxChRDaGlsZFdpdGhvdXRNYXBwaW5nQRJZClfSAS0SKwopIy9jb21wb25lbnRzL3NjaGVtYXMvUGFyZW50V2l0aG91dE1hcHBpbmfSASQKIsoBBm9iamVjdPoBFgoUCgVuYW1lQRILCgnKAQZzdHJpbmcKcQoUQ2hpbGRXaXRob3V0TWFwcGluZ0ISWQpX0gEtEisKKSMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudFdpdGhvdXRNYXBwaW5n0gEkCiLKAQZvYmplY3T6ARYKFAoFbmFtZUISCwoJygEGc3RyaW5nEuQBCl8KEVBhcmVudFdpdGhNYXBwaW5nEkoKSAoCT0saQgpAChBhcHBsaWNhdGlvbi9qc29uEiwKKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnRXaXRoTWFwcGluZwqAAQoUUGFyZW50V2l0aG91dE1hcHBpbmcSaApmCh1UaGUgc2F2ZWQgYWNjb3VudCBkZWZpbml0aW9uLhpFCkMKEGFwcGxpY2F0aW9uL2pzb24SLwotEisKKSMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudFdpdGhvdXRNYXBwaW5n')),
);

/// From: bugs/issue_9719.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_9719 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEpgBCiNQZXRzdG9yZV9BcGlfVXNlcnNfR2V0X2FsbFJlc3BvbnNlcxpRUGV0c3RvcmVfQXBpX1VzZXJzX0dldF9hbGxSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBldHN0b3JlX0FwaV9Vc2Vyc19HZXRfYWxsKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcSlQEKIlBldHN0b3JlX2FwaV91c2Vyc19nZXRBbGxSZXNwb25zZXMaT1BldHN0b3JlX2FwaV91c2Vyc19nZXRBbGxSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBldHN0b3JlX2FwaV91c2Vyc19nZXRBbGwqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxpxChpwZXRzdG9yZS5hcGkudXNlcnMuZ2V0X2FsbBINL2RvdERlbGltaXRlchoDR0VUKhpQZXRzdG9yZV9BcGlfVXNlcnNfR2V0X2FsbFIjUGV0c3RvcmVfQXBpX1VzZXJzX0dldF9hbGxSZXNwb25zZXMadQoZcGV0c3RvcmVfYXBpX3VzZXJzX2dldEFsbBIUL3VuZGVyc2NvcmVEZWxpbWl0ZXIaA0dFVCoZUGV0c3RvcmVfYXBpX3VzZXJzX2dldEFsbFIiUGV0c3RvcmVfYXBpX3VzZXJzX2dldEFsbFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJ5ChBPcGVuQVBJIFBldHN0b3JlEh5zYW1wbGUgdG8gdmV0IGludGVnZXIgaGFuZGxpbmcqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBoiCiBodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pbzo4MC92MiK+AwrZAQoNL2RvdERlbGltaXRlchLHASLEAQoFdXNlcnMSDkxpc3QgYWxsIHVzZXJzKhpwZXRzdG9yZS5hcGkudXNlcnMuZ2V0X2FsbEKOARKLAQoDMjAwEoMBCoABChZBIHBhZ2VkIGFycmF5IG9mIHVzZXJzEkEKPwoGeC1uZXh0EjUKMwokQSBsaW5rIHRvIHRoZSBuZXh0IHBhZ2Ugb2YgcmVzcG9uc2VzQgsKCcoBBnN0cmluZxojCiEKEGFwcGxpY2F0aW9uL2pzb24SDQoLCgnKAQZzdHJpbmcK3wEKFC91bmRlcnNjb3JlRGVsaW1pdGVyEsYBIsMBCgV1c2VycxIOTGlzdCBhbGwgdXNlcnMqGXBldHN0b3JlX2FwaV91c2Vyc19nZXRBbGxCjgESiwEKAzIwMBKDAQqAAQoWQSBwYWdlZCBhcnJheSBvZiB1c2VycxJBCj8KBngtbmV4dBI1CjMKJEEgbGluayB0byB0aGUgbmV4dCBwYWdlIG9mIHJlc3BvbnNlc0ILCgnKAQZzdHJpbmcaIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5n')),
);

/// From: bugs/issue_11731.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11731 = (
  model: surface.Model.fromBuffer(base64Decode('ChZQZXRzdG9yZSAtIE9wZW5BUEkgMy4wElIKDlJlc3BvbnNlT2JqZWN0KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoqCgZzdGF0dXMSBnN0cmluZ1IJYXZhaWxhYmxlUgdwZW5kaW5nUgRzb2xkEogBChlHZXRBbGxVc2luZ0dFVF8xUmVzcG9uc2VzGj1HZXRBbGxVc2luZ0dFVF8xUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRBbGxVc2luZ0dFVF8xKiwKGDIwMCBhcHBsaWNhdGlvbi9oYWwranNvbhIOUmVzcG9uc2VPYmplY3QYAxpQChBnZXRBbGxVc2luZ0dFVF8xEgovY3VzdG9tZXJzGgNHRVQqEEdldEFsbFVzaW5nR0VUXzFSGUdldEFsbFVzaW5nR0VUXzFSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhLXAQoWUGV0c3RvcmUgLSBPcGVuQVBJIDMuMBJUU3BlY2lmaWNhdGlvbiB0byByZXByb2R1Y2UgaXNzdWVzIHdpdGggbWVkaWF0eXBlcyBvdGhlciB0aGFuIGNvbW1vbiBhcHBsaWNhdGlvbi9qc29uGg5odHRwOi8vaW5zcy5jaCIRGg9vcGVuYXBpQGluc3MuY2gqPQoKQXBhY2hlIDIuMBIvaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGh4KHGh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvdjMi5gEK4wEKCi9jdXN0b21lcnMS1AEi0QEKE2N1c3RvbWVyLWNvbnRyb2xsZXISBmdldEFsbCoQZ2V0QWxsVXNpbmdHRVRfMUKfARJSCgMyMDASSwpJCgJPSxpDCkEKFGFwcGxpY2F0aW9uL2hhbCtqc29uEikKJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9SZXNwb25zZU9iamVjdBIZCgM0MDESEgoQCgxVbmF1dGhvcml6ZWQaABIWCgM0MDMSDwoNCglGb3JiaWRkZW4aABIWCgM0MDQSDwoNCglOb3QgRm91bmQaACrJAQrGAQrDAQoOUmVzcG9uc2VPYmplY3QSsAEKrQG6AQRuYW1lugEJcGhvdG9VcmxzygEGb2JqZWN0+gGNAQomCgJpZBIgCh46BRIDMTAKygEHaW50ZWdlcpICAklkmgIFaW50NjQKYwoGc3RhdHVzElkKVzoMEgphdmFpbGFibGUKwgEMEgphdmFpbGFibGUKwgEKEghwZW5kaW5nCsIBBxIFc29sZArKAQZzdHJpbmeSAhdwZXQgc3RhdHVzIGluIHRoZSBzdG9yZQ==')),
);

/// From: bugs/issue_13917.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13917 = (
  model: surface.Model.fromBuffer(base64Decode('CgF4EhYKBXZhbHVlEAEiC2ludGVyZmFjZXt9EkIKHkpTT05QYXRjaFJlcXVlc3RBZGRSZXBsYWNlVGVzdCoOCgRwYXRoEgZzdHJpbmcqEAoFdmFsdWUSBXZhbHVlGAMSPgoWSlNPTlBhdGNoUmVxdWVzdFJlbW92ZSoOCgRwYXRoEgZzdHJpbmcqFAoCb3ASBnN0cmluZ1IGcmVtb3ZlEkQKGEpTT05QYXRjaFJlcXVlc3RNb3ZlQ29weSoOCgRwYXRoEgZzdHJpbmcqGAoCb3ASBnN0cmluZ1IEbW92ZVIEY29weRKAAQoMUGF0Y2hSZXF1ZXN0Kg4KBHBhdGgSBnN0cmluZyoQCgV2YWx1ZRIFdmFsdWUYAyoOCgRwYXRoEgZzdHJpbmcqFAoCb3ASBnN0cmluZ1IGcmVtb3ZlKg4KBHBhdGgSBnN0cmluZyoYCgJvcBIGc3RyaW5nUgRtb3ZlUgRjb3B5EksKGkdldE9yZ2FuaXphdGlvblJlcXVlc3RCb2R5Ki0KG2FwcGxpY2F0aW9uL2pzb24tcGF0Y2granNvbhIMUGF0Y2hSZXF1ZXN0GAMSngEKGUdldE9yZ2FuaXphdGlvblBhcmFtZXRlcnMaPUdldE9yZ2FuaXphdGlvblBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRPcmdhbml6YXRpb24qFAoCaWQSBnN0cmluZyIEdXVpZCgEKiwKDHJlcXVlc3RfYm9keRIaR2V0T3JnYW5pemF0aW9uUmVxdWVzdEJvZHkYAxpqCg9HZXRPcmdhbml6YXRpb24SCy91c2Vycy97aWR9GgVQQVRDSCIXUmV0dXJucyBhbiBvcmdhbml6YXRpb24qD0dldE9yZ2FuaXphdGlvbkoZR2V0T3JnYW5pemF0aW9uUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIyCgF4EgN4eHgyBTAuMC4xOiEKCngtYXVkaWVuY2USExIRY29tcGFueS1pbnRlcm5hbAoi3QEK2gEKCy91c2Vycy97aWR9EsoBUscBGhdSZXR1cm5zIGFuIG9yZ2FuaXphdGlvbioPR2V0T3JnYW5pemF0aW9uMioKKAoCaWQSBHBhdGggAToGc2ltcGxlUhIKEMoBBnN0cmluZ5oCBHV1aWQ6TApKEkgKRgobYXBwbGljYXRpb24vanNvbi1wYXRjaCtqc29uEicKJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXRjaFJlcXVlc3RCIRIfCgMyMDASGAoWChRTdWNjZXNzZnVsIHJlc3BvbnNlLirTBQrQBQrGAQoMUGF0Y2hSZXF1ZXN0ErUBCrIBygEFYXJyYXnyAaYBCqMBCqAB2gE3EjUKMyMvY29tcG9uZW50cy9zY2hlbWFzL0pTT05QYXRjaFJlcXVlc3RBZGRSZXBsYWNlVGVzdNoBLxItCisjL2NvbXBvbmVudHMvc2NoZW1hcy9KU09OUGF0Y2hSZXF1ZXN0UmVtb3Zl2gExEi8KLSMvY29tcG9uZW50cy9zY2hlbWFzL0pTT05QYXRjaFJlcXVlc3RNb3ZlQ29weQqpAQoeSlNPTlBhdGNoUmVxdWVzdEFkZFJlcGxhY2VUZXN0EoYBCoMBugEFdmFsdWW6AQJvcLoBBHBhdGjKAQZvYmplY3T6AV4KKgoEcGF0aBIiCiDKAQZzdHJpbmeSAhRBIEpTT04gUG9pbnRlciBwYXRoLgowCgV2YWx1ZRInCiWSAiJUaGUgdmFsdWUgdG8gYWRkLCByZXBsYWNlIG9yIHRlc3QuggICEAAKogEKFkpTT05QYXRjaFJlcXVlc3RSZW1vdmUShwEKhAG6AQJvcLoBBHBhdGjKAQZvYmplY3T6AWcKKgoEcGF0aBIiCiDKAQZzdHJpbmeSAhRBIEpTT04gUG9pbnRlciBwYXRoLgo5CgJvcBIzCjHCAQkSB3JlbW92ZQrKAQZzdHJpbmeSAhlUaGUgb3BlcmF0aW9uIHRvIHBlcmZvcm0uggICEAAKswEKGEpTT05QYXRjaFJlcXVlc3RNb3ZlQ29weRKWAQqTAboBBGZyb226AQJvcLoBBHBhdGjKAQZvYmplY3T6AW8KKgoEcGF0aBIiCiDKAQZzdHJpbmeSAhRBIEpTT04gUG9pbnRlciBwYXRoLgpBCgJvcBI7CjnCAQcSBW1vdmUKwgEHEgVjb3B5CsoBBnN0cmluZ5ICGVRoZSBvcGVyYXRpb24gdG8gcGVyZm9ybS6CAgIQAA==')),
);

/// From: bugs/issue_13150.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13150 = (
  model: surface.Model.fromBuffer(base64Decode('CgpGb29TZXJ2aWNlEigKBlBhcmVudCoOCgRuYW1lEgZzdHJpbmcqDgoEdHlwZRIGc3RyaW5nEjgKA0ZvbyoOCgRuYW1lEgZzdHJpbmcqDgoEdHlwZRIGc3RyaW5nKhEKB2Zvb1R5cGUSBnN0cmluZxI0ChRwdXRQYXJlbnRSZXF1ZXN0Qm9keSocChBhcHBsaWNhdGlvbi9qc29uEgZQYXJlbnQYAxKCAQoTUHV0UGFyZW50UGFyYW1ldGVycxoxUHV0UGFyZW50UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFB1dFBhcmVudCoQCgRuYW1lEgZzdHJpbmcoBComCgxyZXF1ZXN0X2JvZHkSFHB1dFBhcmVudFJlcXVlc3RCb2R5GAMSUQoSUHV0UGFyZW50UmVzcG9uc2VzGi9QdXRQYXJlbnRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFB1dFBhcmVudCoKEgZQYXJlbnQYAxpNCglwdXRQYXJlbnQSBy9wYXJlbnQaA1BVVCoJUHV0UGFyZW50ShNQdXRQYXJlbnRQYXJhbWV0ZXJzUhJQdXRQYXJlbnRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBITCgpGb29TZXJ2aWNlMgUxLjAuMCKAAgr9AQoHL3BhcmVudBLxASruARIKcHV0IHBhcmVudCoJcHV0UGFyZW50MkEKPwoEbmFtZRIEcGF0aBoiTmFtZSBvZiB0aGUgYWNjb3VudCBiZWluZyB1cGRhdGVkLiABUgsKCcoBBnN0cmluZzpmCmQKJ1RoZSB1cGRhdGVkIGFjY291bnQgZGVmaW5pdGlvbiB0byBzYXZlLhI3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudBgBQioSKAoDMjAwEiESHwodIy9jb21wb25lbnRzL3Jlc3BvbnNlcy9QYXJlbnQqlQMKqgIK0QEKBlBhcmVudBLGAQrDARIpCgR0eXBlEiEKHwoDZm9vEhgjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb2+6AQRuYW1lugEEdHlwZcoBBm9iamVjdPoBYAonCgRuYW1lEh8KHcoBBnN0cmluZ5ICEVRoZSBhY2NvdW50IG5hbWUuCjUKBHR5cGUSLQorygEGc3RyaW5nkgIfVGhlIGFjY291bnQgdHlwZSBkaXNjcmltaW5hdG9yLpICG0RlZmluZXMgYW4gYWNjb3VudCBieSBuYW1lLgpUCgNGb28STQpL0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudNIBJgokygEGb2JqZWN0+gEYChYKB2Zvb1R5cGUSCwoJygEGc3RyaW5nEmYKZAoGUGFyZW50EloKWAodVGhlIHNhdmVkIGFjY291bnQgZGVmaW5pdGlvbi4aNwo1ChBhcHBsaWNhdGlvbi9qc29uEiEKHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnQ=')),
);

/// From: bugs/issue_14026_kotlin_backticks_reserved_words.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14026_kotlin_backticks_reserved_words = (
  model: surface.Model.fromBuffer(base64Decode('CgV0aXRsZRIgCgpBbm5vdGF0aW9uKhIKAmlkEgZzdHJpbmciBHV1aWQSLwoLUmVxdWVzdEJvZHkqIAoQYXBwbGljYXRpb24vanNvbhIKQW5ub3RhdGlvbhgDEnwKGlBPU1RfYW5ub3RhdGlvbnNQYXJhbWV0ZXJzGj9QT1NUX2Fubm90YXRpb25zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBPU1RfYW5ub3RhdGlvbnMqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDGkISDC9hbm5vdGF0aW9ucxoEUE9TVCoQUE9TVF9hbm5vdGF0aW9uc0oaUE9TVF9hbm5vdGF0aW9uc1BhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuNxIOCgV0aXRsZTIFMC4wLjEicgpwCgwvYW5ub3RhdGlvbnMSYDJeEghhbm5vdGF0ZTpBCj8SOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9Bbm5vdGF0aW9uGAFCDxINCgMyMDASBgoECgJPSyo6CjgKNgoKQW5ub3RhdGlvbhIoCibKAQZvYmplY3T6ARoKGAoCaWQSEgoQygEGc3RyaW5nmgIEdXVpZA==')),
);

/// From: bugs/Swift5CodeGenerationStackOverflow#2966.yaml
final OpenApiProto<v3.Document> fixtures_bugs_swift5_code_generation_stack_overflow_2966 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjoKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKg0KBHBldHMSA1BldBgCEi4KEWFkZFBldFJlcXVlc3RCb2R5KhkKEGFwcGxpY2F0aW9uL2pzb24SA1BldBgDEmQKEEFkZFBldFBhcmFtZXRlcnMaK0FkZFBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBBZGRQZXQqIwoMcmVxdWVzdF9ib2R5EhFhZGRQZXRSZXF1ZXN0Qm9keRgDGi4KBmFkZFBldBIEL3BldBoEUE9TVCoGQWRkUGV0ShBBZGRQZXRQYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKJAQoQT3BlbkFQSSBQZXRzdG9yZRIvVGhpcyBzcGVjIGlzIG1haW5seSBmb3IgdGVzdGluZyBQZXRzdG9yZSBzZXJ2ZXIqPQoKQXBhY2hlLTIuMBIvaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGiIKIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvOjgwL3YyIsABCr0BCgQvcGV0ErQBMrEBCgNwZXQSGkFkZCBhIG5ldyBwZXQgdG8gdGhlIHN0b3JlKgZhZGRQZXQ6agpoCi5QZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlEjQKMgoQYXBwbGljYXRpb24vanNvbhIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0GAFCGhIYCgM0MDASEQoPCg1JbnZhbGlkIGlucHV0Kq8BCqwBCqkBCgNQZXQSoQEKngG6AQRuYW1lygEGb2JqZWN0+gGKAQozCgJpZBItCivKAQdpbnRlZ2VymgIFaW50NjSiAhYKC3gtaXMtdW5pcXVlEgcSBXRydWUKCh4KBG5hbWUSFgoUOgkSB2RvZ2dpZQrKAQZzdHJpbmcKMwoEcGV0cxIrCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldDohCgNwZXQSGkV2ZXJ5dGhpbmcgYWJvdXQgeW91ciBQZXRz')),
);

/// From: bugs/issue_11897.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11897 = (
  model: surface.Model.fromBuffer(base64Decode('CgxtZXRhZGF0YS1zdmMSIgoMVGVzdFJlc3BvbnNlKhIKB2VuYWJsZWQSB2Jvb2xlYW4SiAEKHUdldFdpdGhBcnJheU9mU3RyaW5nUmVzcG9uc2VzGkVHZXRXaXRoQXJyYXlPZlN0cmluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0V2l0aEFycmF5T2ZTdHJpbmcqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxgCEpEBCh5HZXRXaXRoQXJyYXlPZk9iamVjdHNSZXNwb25zZXMaR0dldFdpdGhBcnJheU9mT2JqZWN0c1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0V2l0aEFycmF5T2ZPYmplY3RzKiYKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgxUZXN0UmVzcG9uc2UYAhKFAQocR2V0V2l0aFNldE9mU3RyaW5nc1Jlc3BvbnNlcxpDR2V0V2l0aFNldE9mU3RyaW5nc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0V2l0aFNldE9mU3RyaW5ncyogChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGAISiwEKHEdldFdpdGhTZXRPZk9iamVjdHNSZXNwb25zZXMaQ0dldFdpdGhTZXRPZk9iamVjdHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFdpdGhTZXRPZk9iamVjdHMqJgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SDFRlc3RSZXNwb25zZRgCEkQKFDIwMCBhcHBsaWNhdGlvbi9qc29uKiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARKTAQocR2V0V2l0aE1hcE9mU3RyaW5nc1Jlc3BvbnNlcxpDR2V0V2l0aE1hcE9mU3RyaW5nc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0V2l0aE1hcE9mU3RyaW5ncyouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxKTAQocR2V0V2l0aE1hcE9mT2JqZWN0c1Jlc3BvbnNlcxpDR2V0V2l0aE1hcE9mT2JqZWN0c1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0V2l0aE1hcE9mT2JqZWN0cyouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxqPAQoUZ2V0V2l0aEFycmF5T2ZTdHJpbmcSEy92MS9hcnJheS1vZi1zdHJpbmcaA0dFVCIoR2V0IHRoZSBsaXN0IG9mIGdyb3VwcyBmb3IgdGhpcyBleGFtcGxlLioUR2V0V2l0aEFycmF5T2ZTdHJpbmdSHUdldFdpdGhBcnJheU9mU3RyaW5nUmVzcG9uc2VzGpMBChVnZXRXaXRoQXJyYXlPZk9iamVjdHMSFC92MS9hcnJheS1vZi1vYmplY3RzGgNHRVQiKEdldCB0aGUgbGlzdCBvZiBncm91cHMgZm9yIHRoaXMgZXhhbXBsZS4qFUdldFdpdGhBcnJheU9mT2JqZWN0c1IeR2V0V2l0aEFycmF5T2ZPYmplY3RzUmVzcG9uc2VzGosBChNnZXRXaXRoU2V0T2ZTdHJpbmdzEhIvdjEvc2V0LW9mLXN0cmluZ3MaA0dFVCIoR2V0IHRoZSBzZXQgb2Ygc3RyaW5ncyBmb3IgdGhpcyBleGFtcGxlLioTR2V0V2l0aFNldE9mU3RyaW5nc1IcR2V0V2l0aFNldE9mU3RyaW5nc1Jlc3BvbnNlcxqKAQoTZ2V0V2l0aFNldE9mT2JqZWN0cxISL3YxL3NldC1vZi1vYmplY3RzGgNHRVQiJ0dldCB0aGUgc2V0IG9mIGdyb3VwcyBmb3IgdGhpcyBleGFtcGxlLioTR2V0V2l0aFNldE9mT2JqZWN0c1IcR2V0V2l0aFNldE9mT2JqZWN0c1Jlc3BvbnNlcxqLAQoTZ2V0V2l0aE1hcE9mU3RyaW5ncxISL3YxL21hcC1vZi1zdHJpbmdzGgNHRVQiKEdldCB0aGUgbWFwIG9mIHN0cmluZ3MgZm9yIHRoaXMgZXhhbXBsZS4qE0dldFdpdGhNYXBPZlN0cmluZ3NSHEdldFdpdGhNYXBPZlN0cmluZ3NSZXNwb25zZXMaigEKE2dldFdpdGhNYXBPZk9iamVjdHMSEi92MS9tYXAtb2Ytb2JqZWN0cxoDR0VUIidHZXQgdGhlIG1hcCBvZiBncm91cHMgZm9yIHRoaXMgZXhhbXBsZS4qE0dldFdpdGhNYXBPZk9iamVjdHNSHEdldFdpdGhNYXBPZk9iamVjdHNSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJACgxtZXRhZGF0YS1zdmMSEE1ldGFkYXRhIFNlcnZpY2UiFwoIVGVzdCBTdmMaC3h5ekB4eXouY29tMgUzLjEuMhoZChdodHRwczovL2xvY2FsaG9zdDo4MDgwLyL2CQrEAQoTL3YxL2FycmF5LW9mLXN0cmluZxKsASKpAQoIbWV0YWRhdGESC0dldCBncm91cHMuGihHZXQgdGhlIGxpc3Qgb2YgZ3JvdXBzIGZvciB0aGlzIGV4YW1wbGUuKhRnZXRXaXRoQXJyYXlPZlN0cmluZ0JQEk4KAzIwMBJHCkUKD0xpc3Qgb2YgZ3JvdXBzLhoyCjAKEGFwcGxpY2F0aW9uL2pzb24SHAoaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcK4AEKFC92MS9hcnJheS1vZi1vYmplY3RzEscBIsQBCghtZXRhZGF0YRILR2V0IGdyb3Vwcy4aKEdldCB0aGUgbGlzdCBvZiBncm91cHMgZm9yIHRoaXMgZXhhbXBsZS4qFWdldFdpdGhBcnJheU9mT2JqZWN0c0JqEmgKAzIwMBJhCl8KD0xpc3Qgb2YgZ3JvdXBzLhpMCkoKEGFwcGxpY2F0aW9uL2pzb24SNgo0CjLKAQVhcnJhefIBJwolEiMKISMvY29tcG9uZW50cy9zY2hlbWFzL1Rlc3RSZXNwb25zZQrFAQoSL3YxL3NldC1vZi1zdHJpbmdzEq4BIqsBCghtZXRhZGF0YRILR2V0IGdyb3Vwcy4aKEdldCB0aGUgc2V0IG9mIHN0cmluZ3MgZm9yIHRoaXMgZXhhbXBsZS4qE2dldFdpdGhTZXRPZlN0cmluZ3NCUxJRCgMyMDASSgpICg9TZXQgb2Ygc3RyaW5ncy4aNQozChBhcHBsaWNhdGlvbi9qc29uEh8KHQoboAEBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCt0BChIvdjEvc2V0LW9mLW9iamVjdHMSxgEiwwEKCG1ldGFkYXRhEgtHZXQgZ3JvdXBzLhonR2V0IHRoZSBzZXQgb2YgZ3JvdXBzIGZvciB0aGlzIGV4YW1wbGUuKhNnZXRXaXRoU2V0T2ZPYmplY3RzQmwSagoDMjAwEmMKYQoOU2V0IG9mIGdyb3Vwcy4aTwpNChBhcHBsaWNhdGlvbi9qc29uEjkKNwo1oAEBygEFYXJyYXnyAScKJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0UmVzcG9uc2UKwwEKEi92MS9tYXAtb2Ytc3RyaW5ncxKsASKpAQoIbWV0YWRhdGESC0dldCBncm91cHMuGihHZXQgdGhlIG1hcCBvZiBzdHJpbmdzIGZvciB0aGlzIGV4YW1wbGUuKhNnZXRXaXRoTWFwT2ZTdHJpbmdzQlESTwoDMjAwEkgKRgoPTWFwIG9mIHN0cmluZ3MuGjMKMQoQYXBwbGljYXRpb24vanNvbhIdChsKGcoBBm9iamVjdIICDQoLCgnKAQZzdHJpbmcK2wEKEi92MS9tYXAtb2Ytb2JqZWN0cxLEASLBAQoIbWV0YWRhdGESC0dldCBncm91cHMuGidHZXQgdGhlIG1hcCBvZiBncm91cHMgZm9yIHRoaXMgZXhhbXBsZS4qE2dldFdpdGhNYXBPZk9iamVjdHNCahJoCgMyMDASYQpfCg5NYXAgb2YgZ3JvdXBzLhpNCksKEGFwcGxpY2F0aW9uL2pzb24SNwo1CjPKAQZvYmplY3SCAicKJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0UmVzcG9uc2UqswEKfgp8CgxUZXN0UmVzcG9uc2USbApqSgxUZXN0UmVzcG9uc2W6AQdlbmFibGVkygEGb2JqZWN0+gE9CjsKB2VuYWJsZWQSMAouOggSBmZhbHNlCsoBB2Jvb2xlYW6SAhdEZWZhdWx0IHZhbHVlIGlzIGZhbHNlLpICBk9iamVjdDoxCi8KCmJlYXJlckF1dGgSIQofCgZhcGlLZXkaDUF1dGhvcml6YXRpb24iBmhlYWRlcjohCghtZXRhZGF0YRIVQVBJcyB0byBnZXQgbWV0YWRhdGEu')),
);

/// From: bugs/mergerTest/spec2.yaml
final OpenApiProto<v3.Document> fixtures_bugs_merger_test_spec2 = (
  model: surface.Model.fromBuffer(base64Decode('ChVBcnJheU51bGxhYmxlVGVzdCBBcGkSIgoKU3BlYzJNb2RlbCoUCgpzcGVjMkZpZWxkEgZudW1iZXISegoXU3BlYzJPcGVyYXRpb25SZXNwb25zZXMaOVNwZWMyT3BlcmF0aW9uUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBTcGVjMk9wZXJhdGlvbiokChQyMDAgYXBwbGljYXRpb24vanNvbhIKU3BlYzJNb2RlbBgDGkYKDnNwZWMyT3BlcmF0aW9uEgYvc3BlYzIaA0dFVCoOU3BlYzJPcGVyYXRpb25SF1NwZWMyT3BlcmF0aW9uUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJUChVBcnJheU51bGxhYmxlVGVzdCBBcGkSNFNwZWNpZmljYXRpb24gdG8gcmVwcm9kdWNlIG51bGxhYmxlIGlzc3VlIHdpdGggQXJyYXkyBTEuMC4wInoKeAoGL3NwZWMyEm4ibAoFc3BlYzISBWR1bW15Kg5zcGVjMk9wZXJhdGlvbkJMEkoKAzIwMBJDCkEKAk9LGjsKOQoQYXBwbGljYXRpb24vanNvbhIlCiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvU3BlYzJNb2RlbCo7CjkKNwoKU3BlYzJNb2RlbBIpCifKAQZvYmplY3T6ARsKGQoKc3BlYzJGaWVsZBILCgnKAQZudW1iZXI=')),
);

/// From: bugs/mergerTest/spec1.json
final OpenApiProto<v3.Document> fixtures_bugs_merger_test_spec1 = (
  model: surface.Model.fromBuffer(base64Decode('ChVBcnJheU51bGxhYmxlVGVzdCBBcGkSIgoKU3BlYzFNb2RlbCoUCgpzcGVjMUZpZWxkEgZzdHJpbmcSegoXU3BlYzFPcGVyYXRpb25SZXNwb25zZXMaOVNwZWMxT3BlcmF0aW9uUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBTcGVjMU9wZXJhdGlvbiokChQyMDAgYXBwbGljYXRpb24vanNvbhIKU3BlYzFNb2RlbBgDEoABCh9TcGVjMU9wZXJhdGlvbkNvbXBsZXhQYXJhbWV0ZXJzGklTcGVjMU9wZXJhdGlvbkNvbXBsZXhQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gU3BlYzFPcGVyYXRpb25Db21wbGV4KhIKBnBhcmFtMRIGc3RyaW5nKAQSjwEKHlNwZWMxT3BlcmF0aW9uQ29tcGxleFJlc3BvbnNlcxpHU3BlYzFPcGVyYXRpb25Db21wbGV4UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBTcGVjMU9wZXJhdGlvbkNvbXBsZXgqJAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SClNwZWMxTW9kZWwYAxpGCg5zcGVjMU9wZXJhdGlvbhIGL3NwZWMxGgNHRVQqDlNwZWMxT3BlcmF0aW9uUhdTcGVjMU9wZXJhdGlvblJlc3BvbnNlcxqSAQoVc3BlYzFPcGVyYXRpb25Db21wbGV4Ehwvc3BlYzEvY29tcGxleC97cGFyYW0xfS9wYXRoGgNHRVQqFVNwZWMxT3BlcmF0aW9uQ29tcGxleEofU3BlYzFPcGVyYXRpb25Db21wbGV4UGFyYW1ldGVyc1IeU3BlYzFPcGVyYXRpb25Db21wbGV4UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJUChVBcnJheU51bGxhYmxlVGVzdCBBcGkSNFNwZWNpZmljYXRpb24gdG8gcmVwcm9kdWNlIG51bGxhYmxlIGlzc3VlIHdpdGggQXJyYXkyBTEuMC4wIrUCCngKBi9zcGVjMRJuImwKBXNwZWMxEgVkdW1teSoOc3BlYzFPcGVyYXRpb25CTBJKCgMyMDASQwpBCgJPSxo7CjkKEGFwcGxpY2F0aW9uL2pzb24SJQojEiEKHyMvY29tcG9uZW50cy9zY2hlbWFzL1NwZWMxTW9kZWwKuAEKHC9zcGVjMS9jb21wbGV4L3twYXJhbTF9L3BhdGgSlwEilAEKBXNwZWMxEgVkdW1teSoVc3BlYzFPcGVyYXRpb25Db21wbGV4Mh8KHQoGcGFyYW0xEgRwYXRoIAFSCwoJygEGc3RyaW5nQkwSSgoDMjAwEkMKQQoCT0saOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9TcGVjMU1vZGVsKjsKOQo3CgpTcGVjMU1vZGVsEikKJ8oBBm9iamVjdPoBGwoZCgpzcGVjMUZpZWxkEgsKCcoBBnN0cmluZw==')),
);

/// From: bugs/issue_13932.yml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13932 = (
  model: surface.Model.fromBuffer(base64Decode('Ch1SZXF1ZXN0Qm9keVZhbGlkYXRpb25UZXN0IEFwaRIqCgtSZXF1ZXN0Qm9keSobChBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyEmQKElBPU1RfYWRkUGFyYW1ldGVycxovUE9TVF9hZGRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9hZGQqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDEmMKEVBPU1RfYWRkUmVzcG9uc2VzGi1QT1NUX2FkZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUE9TVF9hZGQqHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2Jvb2xlYW4aPRIEL2FkZBoEUE9TVCoIUE9TVF9hZGRKElBPU1RfYWRkUGFyYW1ldGVyc1IRUE9TVF9hZGRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJhCh1SZXF1ZXN0Qm9keVZhbGlkYXRpb25UZXN0IEFwaRI5U3BlY2lmaWNhdGlvbiB0byByZXByb2R1Y2UgYmVhblZhbGlkYXRpb24gYm9keVBhcmFtIGlzc3VlMgUxLjAuMCKDAQqAAQoEL2FkZBJ4MnY6PQo7EjcKNQoQYXBwbGljYXRpb24vanNvbhIhCh8KHUoIcXVhbnRpdHlpAAAAAAAAAEDKAQdpbnRlZ2VyGAFCNRIzCgMyMDASLAoqCgJPSxokCiIKEGFwcGxpY2F0aW9uL2pzb24SDgoMCgrKAQdib29sZWFu')),
);

/// From: bugs/issue_11957.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11957 = (
  model: surface.Model.fromBuffer(base64Decode('CgpTZWFyY2ggQVBJErMBChVEZWZhdWx0TGlzdFBhcmFtZXRlcnMaNURlZmF1bHRMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERlZmF1bHRMaXN0Kg4KAXASB2ludGVnZXIoAypTCgdvcmRlckJ5EgZzdHJpbmcYAigDUg1jcmVhdGVkQXQ6QVNDUg5jcmVhdGVkQXQ6REVTQ1INdXBkYXRlZEF0OkFTQ1IOdXBkYXRlZEF0OkRFU0MSwgEKGkVtcHR5RGVmYXVsdExpc3RQYXJhbWV0ZXJzGj9FbXB0eURlZmF1bHRMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEVtcHR5RGVmYXVsdExpc3QqDgoBcBIHaW50ZWdlcigDKlMKB29yZGVyQnkSBnN0cmluZxgCKANSDWNyZWF0ZWRBdDpBU0NSDmNyZWF0ZWRBdDpERVNDUg11cGRhdGVkQXQ6QVNDUg51cGRhdGVkQXQ6REVTQxKwAQoURGVmYXVsdFNldFBhcmFtZXRlcnMaM0RlZmF1bHRTZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRGVmYXVsdFNldCoOCgFwEgdpbnRlZ2VyKAMqUwoHb3JkZXJCeRIGc3RyaW5nGAIoA1INY3JlYXRlZEF0OkFTQ1IOY3JlYXRlZEF0OkRFU0NSDXVwZGF0ZWRBdDpBU0NSDnVwZGF0ZWRBdDpERVNDEr8BChlFbXB0eURlZmF1bHRTZXRQYXJhbWV0ZXJzGj1FbXB0eURlZmF1bHRTZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRW1wdHlEZWZhdWx0U2V0Kg4KAXASB2ludGVnZXIoAypTCgdvcmRlckJ5EgZzdHJpbmcYAigDUg1jcmVhdGVkQXQ6QVNDUg5jcmVhdGVkQXQ6REVTQ1INdXBkYXRlZEF0OkFTQ1IOdXBkYXRlZEF0OkRFU0MaRQoLZGVmYXVsdExpc3QSDS9kZWZhdWx0LWxpc3QaA0dFVCoLRGVmYXVsdExpc3RKFURlZmF1bHRMaXN0UGFyYW1ldGVycxpaChBlbXB0eURlZmF1bHRMaXN0EhMvZW1wdHktZGVmYXVsdC1saXN0GgNHRVQqEEVtcHR5RGVmYXVsdExpc3RKGkVtcHR5RGVmYXVsdExpc3RQYXJhbWV0ZXJzGkEKCmRlZmF1bHRTZXQSDC9kZWZhdWx0LXNldBoDR0VUKgpEZWZhdWx0U2V0ShREZWZhdWx0U2V0UGFyYW1ldGVycxpWCg9lbXB0eURlZmF1bHRTZXQSEi9lbXB0eS1kZWZhdWx0LXNldBoDR0VUKg9FbXB0eURlZmF1bHRTZXRKGUVtcHR5RGVmYXVsdFNldFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIRCgpTZWFyY2ggQVBJMgMxLjAaHgocaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MSL4BwrxAQoNL2RlZmF1bHQtbGlzdBLfASLcAQoGc2VhcmNoKgtkZWZhdWx0TGlzdDImCiQKAXASBXF1ZXJ5UhgKFsoBB2ludGVnZXKKAgkJAAAAAAAAAAAyfwp9CgdvcmRlckJ5EgVxdWVyeVJrCmnKAQVhcnJhefIBWwpZClfCARASDmNyZWF0ZWRBdDpBU0MKwgEREg9jcmVhdGVkQXQ6REVTQwrCARASDnVwZGF0ZWRBdDpBU0MKwgEREg91cGRhdGVkQXQ6REVTQwrKAQZzdHJpbmeKAgBCHBIaCgMyMDQSEwoRCg9DdXN0b20gcmVzcG9uc2UKggIKEy9lbXB0eS1kZWZhdWx0LWxpc3QS6gEi5wEKBnNlYXJjaCoQZW1wdHlEZWZhdWx0TGlzdDIsCioKAXASBXF1ZXJ5GgRQYWdlUhgKFsoBB2ludGVnZXKKAgkJAAAAAAAAAAAyfwp9CgdvcmRlckJ5EgVxdWVyeVJrCmnKAQVhcnJhefIBWwpZClfCARASDmNyZWF0ZWRBdDpBU0MKwgEREg9jcmVhdGVkQXQ6REVTQwrCARASDnVwZGF0ZWRBdDpBU0MKwgEREg91cGRhdGVkQXQ6REVTQwrKAQZzdHJpbmeKAgBCHBIaCgMyMDQSEwoRCg9DdXN0b20gcmVzcG9uc2UK9AEKDC9kZWZhdWx0LXNldBLjASLgAQoGc2VhcmNoKgpkZWZhdWx0U2V0MiYKJAoBcBIFcXVlcnlSGAoWygEHaW50ZWdlcooCCQkAAAAAAAAAADKDAQqAAQoHb3JkZXJCeRIFcXVlcnlSbgpsoAEBygEFYXJyYXnyAVsKWQpXwgEQEg5jcmVhdGVkQXQ6QVNDCsIBERIPY3JlYXRlZEF0OkRFU0MKwgEQEg51cGRhdGVkQXQ6QVNDCsIBERIPdXBkYXRlZEF0OkRFU0MKygEGc3RyaW5nigIAQhwSGgoDMjA0EhMKEQoPQ3VzdG9tIHJlc3BvbnNlCoUCChIvZW1wdHktZGVmYXVsdC1zZXQS7gEi6wEKBnNlYXJjaCoPZW1wdHlEZWZhdWx0U2V0MiwKKgoBcBIFcXVlcnkaBFBhZ2VSGAoWygEHaW50ZWdlcooCCQkAAAAAAAAAADKDAQqAAQoHb3JkZXJCeRIFcXVlcnlSbgpsoAEBygEFYXJyYXnyAVsKWQpXwgEQEg5jcmVhdGVkQXQ6QVNDCsIBERIPY3JlYXRlZEF0OkRFU0MKwgEQEg51cGRhdGVkQXQ6QVNDCsIBERIPdXBkYXRlZEF0OkRFU0MKygEGc3RyaW5nigIAQhwSGgoDMjA0EhMKEQoPQ3VzdG9tIHJlc3BvbnNlOggKBnNlYXJjaA==')),
);

/// From: bugs/issue_12622.json
final OpenApiProto<v3.Document> fixtures_bugs_issue_12622 = (
  model: surface.Model.fromBuffer(base64Decode('CgpCdWcgUmVwb3J0EjwKA0ZvbyoLCgFhEgZzdHJpbmcqCwoBYhIGc3RyaW5nKgwKAWMSB2ludGVnZXIqDQoCZDoSB2Jvb2xlYW4SWwoPR2V0Rm9vUmVzcG9uc2VzGilHZXRGb29SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldEZvbyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDRm9vGAMaLAoGZ2V0Rm9vEgQvZm9vGgNHRVQqBkdldEZvb1IPR2V0Rm9vUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRITCgpCdWcgUmVwb3J0MgUxLjAuMCJgCl4KBC9mb28SViJUKgZnZXRGb29CShJICgMyMDASQQo/CgdnZXQgZm9vGjQKMgoQYXBwbGljYXRpb24vanNvbhIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vKnAKbgpsCgNGb28SZQpjugEBY7oBAWTKAQZvYmplY3T6AU8KEAoBYRILCgnKAQZzdHJpbmcKEgoBYhINCgsYAcoBBnN0cmluZwoTCgFjEg4KDBgBygEHaW50ZWdlcgoSCgJkOhIMCgrKAQdib29sZWFu')),
);

/// From: bugs/issue_4947.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_4947 = (
  model: surface.Model.fromBuffer(base64Decode('CgpUZXN0IElzc3VlEhsKCHN0cmluZzUwKg8KBXZhbHVlEgZzdHJpbmcS+AUKA0ZvbyoWCghjYXRlZ29yeRIIc3RyaW5nNTAYAioZCg1zdHJpbmdQYXR0ZXJuEgZzdHJpbmcYAioeChJzdHJpbmdNYXhNaW5MZW5ndGgSBnN0cmluZxgCKhsKD3N0cmluZ01pbkxlbmd0aBIGc3RyaW5nGAIqGwoPc3RyaW5nTWF4TGVuZ3RoEgZzdHJpbmcYAioeCgtzdHJpbmdFbWFpbBIGc3RyaW5nGAIiBWVtYWlsKhYKCWludE1pbk1heBIHaW50ZWdlchgCKhMKBmludE1pbhIHaW50ZWdlchgCKhMKBmludE1heBIHaW50ZWdlchgCKhgKDG51bWJlck1pbk1heBIGbnVtYmVyGAIqFQoJbnVtYmVyTWluEgZudW1iZXIYAioVCgludW1iZXJNYXgSBm51bWJlchgCKiAKFHN0cmluZ1BhdHRlcm5XaXRoTWluEgZzdHJpbmcYAiohChVzdHJpbmdQYXR0ZXJuTnVsbGFibGUSBnN0cmluZxgCKiYKGnN0cmluZ01heE1pbkxlbmd0aE51bGxhYmxlEgZzdHJpbmcYAiojChdzdHJpbmdNaW5MZW5ndGhOdWxsYWJsZRIGc3RyaW5nGAIqIwoXc3RyaW5nTWF4TGVuZ3RoTnVsbGFibGUSBnN0cmluZxgCKiEKDXN0cmluZ051bWJlcnMSBnN0cmluZxgCIgZudW1iZXIqJgoTc3RyaW5nRW1haWxOdWxsYWJsZRIGc3RyaW5nGAIiBWVtYWlsKh4KEWludE1pbk1heE51bGxhYmxlEgdpbnRlZ2VyGAIqGwoOaW50TWluTnVsbGFibGUSB2ludGVnZXIYAiobCg5pbnRNYXhOdWxsYWJsZRIHaW50ZWdlchgCKiAKFG51bWJlck1pbk1heE51bGxhYmxlEgZudW1iZXIYAiodChFudW1iZXJNaW5OdWxsYWJsZRIGbnVtYmVyGAIqHQoRbnVtYmVyTWF4TnVsbGFibGUSBm51bWJlchgCElQKEUdFVF90ZXN0UmVzcG9uc2VzGi1HRVRfdGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX3Rlc3QqEAoHMjAwICovKhIDRm9vGAMaKRIFL3Rlc3QaA0dFVCoIR0VUX3Rlc3RSEUdFVF90ZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIQCgpUZXN0IElzc3VlMgJ2MSJVClMKBS90ZXN0EkoiSEJGEkQKAzIwMBI9CjsKEGRlZmF1bHQgcmVzcG9uc2UaJwolCgMqLyoSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0ZvbyrTDArQDAowCghzdHJpbmc1MBIkCiJ4MooBFF5bYS16QS1aMC05IC46ISgpLV0kygEGc3RyaW5nCpsMCgNGb28SkwwKkAzKAQZvYmplY3T6AYMMCj8KCGNhdGVnb3J5EjMKMZABFMoBBWFycmF58gEjCiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvc3RyaW5nNTAKNgoNc3RyaW5nUGF0dGVybhIlCiOgAQHKAQVhcnJhefIBFQoTChGKAQVbYS16XcoBBnN0cmluZwo7ChJzdHJpbmdNYXhNaW5MZW5ndGgSJQojkAEKoAEBygEFYXJyYXnyARIKEAoOeAqAAQHKAQZzdHJpbmcKMwoPc3RyaW5nTWluTGVuZ3RoEiAKHpABCsoBBWFycmF58gEQCg4KDIABAcoBBnN0cmluZwo1Cg9zdHJpbmdNYXhMZW5ndGgSIgogkAEKoAEBygEFYXJyYXnyAQ8KDQoLeAHKAQZzdHJpbmcKMQoLc3RyaW5nRW1haWwSIgogygEFYXJyYXnyARUKEwoRygEGc3RyaW5nmgIFZW1haWwKOgoJaW50TWluTWF4Ei0KK8oBBWFycmF58gEgCh4KHFkAAAAAAAAkQGkAAAAAAADwP8oBB2ludGVnZXIKLgoGaW50TWluEiQKIsoBBWFycmF58gEXChUKE2kAAAAAAADwP8oBB2ludGVnZXIKLgoGaW50TWF4EiQKIsoBBWFycmF58gEXChUKE1kAAAAAAAAkQMoBB2ludGVnZXIKPAoMbnVtYmVyTWluTWF4EiwKKsoBBWFycmF58gEfCh0KG1kAAAAAAAAkQGkAAAAAAADwP8oBBm51bWJlcgowCgludW1iZXJNaW4SIwohygEFYXJyYXnyARYKFAoSaQAAAAAAAPA/ygEGbnVtYmVyCjAKCW51bWJlck1heBIjCiHKAQVhcnJhefIBFgoUChJZAAAAAAAAJEDKAQZudW1iZXIKUAoUc3RyaW5nUGF0dGVybldpdGhNaW4SOAo2CAGgAQHKAQVhcnJhefIBJgokCiKAAQqKARNeXGR7M30tXGR7Mn0tXGR7NH0kygEGc3RyaW5nCk4KFXN0cmluZ1BhdHRlcm5OdWxsYWJsZRI1CjMIAaABAcoBBWFycmF58gEjCiEKH4oBE15cZHszfS1cZHsyfS1cZHs0fSTKAQZzdHJpbmcKRQoac3RyaW5nTWF4TWluTGVuZ3RoTnVsbGFibGUSJwolCAGQAQqgAQHKAQVhcnJhefIBEgoQCg54CoABAcoBBnN0cmluZwo9ChdzdHJpbmdNaW5MZW5ndGhOdWxsYWJsZRIiCiAIAZABCsoBBWFycmF58gEQCg4KDIABAcoBBnN0cmluZwo/ChdzdHJpbmdNYXhMZW5ndGhOdWxsYWJsZRIkCiIIAZABCqABAcoBBWFycmF58gEPCg0KC3gBygEGc3RyaW5nCkwKDXN0cmluZ051bWJlcnMSOwo5kAEKoAEBygEFYXJyYXnyASgKJgokWQAAAAAAACRAaQAAAAAAAPA/ygEGc3RyaW5nmgIGbnVtYmVyCjsKE3N0cmluZ0VtYWlsTnVsbGFibGUSJAoiCAHKAQVhcnJhefIBFQoTChHKAQZzdHJpbmeaAgVlbWFpbApEChFpbnRNaW5NYXhOdWxsYWJsZRIvCi0IAcoBBWFycmF58gEgCh4KHFkAAAAAAAAkQGkAAAAAAADwP8oBB2ludGVnZXIKOAoOaW50TWluTnVsbGFibGUSJgokCAHKAQVhcnJhefIBFwoVChNpAAAAAAAA8D/KAQdpbnRlZ2VyCjgKDmludE1heE51bGxhYmxlEiYKJAgBygEFYXJyYXnyARcKFQoTWQAAAAAAACRAygEHaW50ZWdlcgpGChRudW1iZXJNaW5NYXhOdWxsYWJsZRIuCiwIAcoBBWFycmF58gEfCh0KG1kAAAAAAAAkQGkAAAAAAADwP8oBBm51bWJlcgo6ChFudW1iZXJNaW5OdWxsYWJsZRIlCiMIAcoBBWFycmF58gEWChQKEmkAAAAAAADwP8oBBm51bWJlcgo8ChFudW1iZXJNYXhOdWxsYWJsZRInCiUIAcoBBWFycmF58gEYChYKFFkAAAAAAAAkQGABygEGbnVtYmVy')),
);

/// From: bugs/issue_12692.yml
final OpenApiProto<v3.Document> fixtures_bugs_issue_12692 = (
  model: surface.Model.fromBuffer(base64Decode('ChBTd2FnZ2VyIFBldHN0b3JlEhUKA1BldCoOCgR0eXBlEgZzdHJpbmcSJQoDQ2F0Kg4KBHR5cGUSBnN0cmluZyoOCgR0eXBlEgZzdHJpbmcSYQoRTGlzdFBldHNSZXNwb25zZXMaLUxpc3RQZXRzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0UGV0cyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAIaMwoIbGlzdFBldHMSBS9wZXRzGgNHRVQqCExpc3RQZXRzUhFMaXN0UGV0c1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIgChBTd2FnZ2VyIFBldHN0b3JlKgUKA01JVDIFMS4wLjAidgp0CgUvcGV0cxJrImkqCGxpc3RQZXRzQl0SWwoDMjAwElQKUgoLZGVzY3JpcHRpb24aQwpBChBhcHBsaWNhdGlvbi9qc29uEi0KKwopygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQq5AEK4QEKXAoDUGV0ElUKUxIpCgR0eXBlEiEKHwoDY2F0EhgjL2NvbXBvbmVudHMvc2NoZW1hcy9DYXS6AQR0eXBlygEGb2JqZWN0+gEVChMKBHR5cGUSCwoJygEGc3RyaW5nCoABCgNDYXQSeQp30gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBVQpTEikKBHR5cGUSIQofCgNjYXQSGCMvY29tcG9uZW50cy9zY2hlbWFzL0NhdLoBBHR5cGXKAQZvYmplY3T6ARUKEwoEdHlwZRILCgnKAQZzdHJpbmc=')),
);

/// From: bugs/issue_11537.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11537 = (
  model: surface.Model.fromBuffer(base64Decode('CgxtZXRhZGF0YS1zdmMScAoVR2V0U29tZXRoaW5nUmVzcG9uc2VzGjVHZXRTb21ldGhpbmdSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFNvbWV0aGluZyogChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGAISbgoVUHV0U29tZXRoaW5nUmVzcG9uc2VzGjVQdXRTb21ldGhpbmdSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFB1dFNvbWV0aGluZyoeChQyMDEgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGmMKDGdldFNvbWV0aGluZxIKL3YxL2EtcGF0aBoDR0VUIh1HZXQgc29tZXRoaW5nIGZyb20gc29tZXdoZXJlLioMR2V0U29tZXRoaW5nUhVHZXRTb21ldGhpbmdSZXNwb25zZXMaaAoMcHV0U29tZXRoaW5nEhAvdjEvYW5vdGhlci1wYXRoGgRQT1NUIhtJbnNlcnQgc29tZXRoaW5nIHNvbWV3aGVyZS4qDFB1dFNvbWV0aGluZ1IVUHV0U29tZXRoaW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJACgxtZXRhZGF0YS1zdmMSEE1ldGFkYXRhIFNlcnZpY2UiFwoIVGVzdCBTdmMaC3h5ekB4eXouY29tMgUzLjEuMhoZChdodHRwczovL2xvY2FsaG9zdDo4MDgwLyLhAgq4AQoKL3YxL2EtcGF0aBKpASKmAQoIbWV0YWRhdGESG0EgZ2VuZXJpYyBnZXR0ZXIgb3BlcmF0aW9uLhodR2V0IHNvbWV0aGluZyBmcm9tIHNvbWV3aGVyZS4qDGdldFNvbWV0aGluZ0JQEk4KAzIwMBJHCkUKD0xpc3Qgb2YgZ3JvdXBzLhoyCjAKEGFwcGxpY2F0aW9uL2pzb24SHAoaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKowEKEC92MS9hbm90aGVyLXBhdGgSjgEyiwEKCG1ldGFkYXRhEhFJbnNlcnQgc29tZXRoaW5nLhobSW5zZXJ0IHNvbWV0aGluZyBzb21ld2hlcmUuKgxwdXRTb21ldGhpbmdCQRI/CgMyMDESOAo2Cg9MaXN0IG9mIGdyb3Vwcy4aIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5nOiEKCG1ldGFkYXRhEhVBUElzIHRvIGdldCBtZXRhZGF0YS4=')),
);

/// From: bugs/issue_11464.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_11464 = (
  model: surface.Model.fromBuffer(base64Decode('CgtFeGFtcGxlIEFwaRJiChFHZXRfbm9uZVJlc3BvbnNlcxotR2V0X25vbmVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldF9ub25lKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcSdAoXR2V0X3NpbmdsZV90YWdSZXNwb25zZXMaOUdldF9zaW5nbGVfdGFnUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRfc2luZ2xlX3RhZyoeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nEn0KGkdldF9tdWx0aXBsZV90YWdzUmVzcG9uc2VzGj9HZXRfbXVsdGlwbGVfdGFnc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0X211bHRpcGxlX3RhZ3MqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxozCghnZXRfbm9uZRIFL25vbmUaA0dFVCoIR2V0X25vbmVSEUdldF9ub25lUmVzcG9uc2VzGkcKDmdldF9zaW5nbGVfdGFnEgcvc2luZ2xlGgNHRVQqDkdldF9zaW5nbGVfdGFnUhdHZXRfc2luZ2xlX3RhZ1Jlc3BvbnNlcxpSChFnZXRfbXVsdGlwbGVfdGFncxIJL211bHRpcGxlGgNHRVQqEUdldF9tdWx0aXBsZV90YWdzUhpHZXRfbXVsdGlwbGVfdGFnc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIUCgtFeGFtcGxlIEFwaTIFMS4wLjAisQIKUwoFL25vbmUSSiJIEgZObyBUYWcqCGdldF9ub25lQjQSMgoDMjAwEisKKQoCT0saIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5nCmUKBy9zaW5nbGUSWiJYCgR0YWcxEgpTaW5nbGUgVGFnKg5nZXRfc2luZ2xlX3RhZ0I0EjIKAzIwMBIrCikKAk9LGiMKIQoQYXBwbGljYXRpb24vanNvbhINCgsKCcoBBnN0cmluZwpzCgkvbXVsdGlwbGUSZiJkCgR0YWcxCgR0YWcyEg1NdWx0aXBsZSBUYWdzKhFnZXRfbXVsdGlwbGVfdGFnc0I0EjIKAzIwMBIrCikKAk9LGiMKIQoQYXBwbGljYXRpb24vanNvbhINCgsKCcoBBnN0cmluZw==')),
);

/// From: bugs/issue_14723.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_14723 = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0EiwKG2RldGFpbHNBZGRpdGlvbmFsUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRJMCgdkZXRhaWxzKkEKFWFkZGl0aW9uYWxfcHJvcGVydGllcxImbWFwW3N0cmluZ11kZXRhaWxzQWRkaXRpb25hbFByb3BlcnRpZXMYARKVAgoMUmVzcG9uc2VUZXN0KhQKB2RldGFpbHMSB2RldGFpbHMYAyobCghyZXNwb25zZRINUmVzcG9uc2VUZXN0MhgCKh8KDG51bGxhYmxlRHRvcxINUmVzcG9uc2VUZXN0MhgCKhcKBGR0b3MSDVJlc3BvbnNlVGVzdDIYAiojChBsaXN0TnVsbGFibGVEdG9zEg1SZXNwb25zZVRlc3QyGAIqGwoIbGlzdER0b3MSDVJlc3BvbnNlVGVzdDIYAiobCg9udWxsYWJsZVN0cmluZ3MSBnN0cmluZxgCKhMKB3N0cmluZ3MSBnN0cmluZxgCKhUKDG51bGxhYmxlSW50cxIDaW50GAIqDQoEaW50cxIDaW50GAISIAoNUmVzcG9uc2VUZXN0MioPCgVsYWJlbBIGc3RyaW5nEkgKDVRlc3RSZXNwb25zZXMaJVRlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFRlc3QqEBIMUmVzcG9uc2VUZXN0GAMaJwoEdGVzdBIFL3Rlc3QaA0dFVCoEVGVzdFINVGVzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRINCgR0ZXN0MgUxLjAuMCJLCkkKBS90ZXN0EkAiPhIEdGVzdCoEdGVzdEIwEi4KAzIwMBInEiUKIyMvY29tcG9uZW50cy9yZXNwb25zZXMvUmVzcG9uc2VUZXN0Kp8HCscGCo0GCgxSZXNwb25zZVRlc3QS/AUK+QXKAQZvYmplY3T6AewFCnoKB2RldGFpbHMSbwptygEGb2JqZWN0ggINCgsKCcoBBm9iamVjdJICUUFuIG9iamVjdCB3aXRoIGtleS92YWx1ZSBwYWlycyBjb250YWluaW5nIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVycm9yLgpQCghyZXNwb25zZRJECkIIAZABCqABAcoBBWFycmF58gEoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvUmVzcG9uc2VUZXN0MpICBGR0b3MKVAoMbnVsbGFibGVEdG9zEkQKQggBkAEKoAEBygEFYXJyYXnyASgKJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9SZXNwb25zZVRlc3QykgIEZHRvcwpKCgRkdG9zEkIKQJABCqABAcoBBWFycmF58gEoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvUmVzcG9uc2VUZXN0MpICBGR0b3MKVQoQbGlzdE51bGxhYmxlRHRvcxJBCj8IAZABCsoBBWFycmF58gEoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvUmVzcG9uc2VUZXN0MpICBGR0b3MKSwoIbGlzdER0b3MSPwo9kAEKygEFYXJyYXnyASgKJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9SZXNwb25zZVRlc3QykgIEZHRvcwo8Cg9udWxsYWJsZVN0cmluZ3MSKQonCAGQAQqgAQHKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmeSAgRkdG9zCjIKB3N0cmluZ3MSJwolkAEKoAEBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nkgIEZHRvcwo2CgxudWxsYWJsZUludHMSJgokCAGQAQqgAQHKAQVhcnJhefIBCgoICgbKAQNpbnSSAgRkdG9zCiwKBGludHMSJAoikAEKoAEBygEFYXJyYXnyAQoKCAoGygEDaW50kgIEZHRvcwo1Cg1SZXNwb25zZVRlc3QyEiQKIsoBBm9iamVjdPoBFgoUCgVsYWJlbBILCgnKAQZzdHJpbmcSUwpRCgxSZXNwb25zZVRlc3QSQQo/Gj0KOwoQYXBwbGljYXRpb24vanNvbhInCiUSIwohIy9jb21wb25lbnRzL3NjaGVtYXMvUmVzcG9uc2VUZXN0')),
);

/// From: bugs/java-codegen-empty-array-as-default-value/issue_wrong-default.yaml
final OpenApiProto<v3.Document> fixtures_bugs_java_codegen_empty_array_as_default_value_issue_wrong_default = (
  model: surface.Model.fromBuffer(base64Decode('ChBTdWJmaWxlLURlZmF1bHRzEiYKC0Jhc2VSZXF1ZXN0KhcKBGRhdGESDWJhc2VUeXBlLnlhbWwYAxIiCgxCYXNlUmVzcG9uc2UqEgoGc3RhdHVzEgZTdGF0dXMYAxIkCgZTdGF0dXMqGgoFdmFsdWUSBnN0cmluZ1IER09PRFIDQkFEEjsKFmRvU29tZXRoaW5nUmVxdWVzdEJvZHkqIQoQYXBwbGljYXRpb24vanNvbhILQmFzZVJlcXVlc3QYAxJ4ChVEb1NvbWV0aGluZ1BhcmFtZXRlcnMaNURvU29tZXRoaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERvU29tZXRoaW5nKigKDHJlcXVlc3RfYm9keRIWZG9Tb21ldGhpbmdSZXF1ZXN0Qm9keRgDEnMKFERvU29tZXRoaW5nUmVzcG9uc2VzGjNEb1NvbWV0aGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgRG9Tb21ldGhpbmcqJgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SDEJhc2VSZXNwb25zZRgDGlUKC2RvU29tZXRoaW5nEgYvZHVtbXkaBFBPU1QqC0RvU29tZXRoaW5nShVEb1NvbWV0aGluZ1BhcmFtZXRlcnNSFERvU29tZXRoaW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIZChBTdWJmaWxlLURlZmF1bHRzMgUxLjAuMCLFAQrCAQoGL2R1bW15ErcBMrQBKgtkb1NvbWV0aGluZzpCCkASPAo6ChBhcHBsaWNhdGlvbi9qc29uEiYKJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXNlUmVxdWVzdBgBQmESXwoDMjAwElgKVgoVU3VjY2Vzc2Z1bCBPcGVyYXRpb24uGj0KOwoQYXBwbGljYXRpb24vanNvbhInCiUSIwohIy9jb21wb25lbnRzL3NjaGVtYXMvQmFzZVJlc3BvbnNlKrsBCrgBCkEKC0Jhc2VSZXF1ZXN0EjIKMLoBBGRhdGHKAQZvYmplY3T6AR0KGwoEZGF0YRITEhEKDy4vYmFzZVR5cGUueWFtbApJCgxCYXNlUmVzcG9uc2USOQo3ygEGb2JqZWN0+gErCikKBnN0YXR1cxIfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1N0YXR1cwooCgZTdGF0dXMSHgocwgEHEgVHT09ECsIBBhIEQkFECsoBBnN0cmluZw==')),
);

/// From: bugs/issue_13052.yaml
final OpenApiProto<v3.Document> fixtures_bugs_issue_13052 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEiwKCFBhZ2VhYmxlKg8KBHBhZ2USB2ludGVnZXIqDwoEc2l6ZRIHaW50ZWdlchJrChZGaW5kUGFnZWFibGVQYXJhbWV0ZXJzGjdGaW5kUGFnZWFibGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRmluZFBhZ2VhYmxlKhgKCHBhZ2VhYmxlEghQYWdlYWJsZRgDKAMSiwEKFUZpbmRQYWdlYWJsZVJlc3BvbnNlcxo1RmluZFBhZ2VhYmxlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBGaW5kUGFnZWFibGUqHAoTMjAwIGFwcGxpY2F0aW9uL3htbBIDUGV0GAIqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgCGqgBCgxmaW5kUGFnZWFibGUSES9wZXQvZmluZFBhZ2VhYmxlGgNHRVQiQ011bHRpcGxlIHN0YXR1cyB2YWx1ZXMgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MqDEZpbmRQYWdlYWJsZUoWRmluZFBhZ2VhYmxlUGFyYW1ldGVyc1IVRmluZFBhZ2VhYmxlUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRLdAQoQT3BlbkFQSSBQZXRzdG9yZRKCAVRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gRm9yIHRoaXMgc2FtcGxlLCB5b3UgY2FuIHVzZSB0aGUgYXBpIGtleSBgc3BlY2lhbC1rZXlgIHRvIHRlc3QgdGhlIGF1dGhvcml6YXRpb24gZmlsdGVycy4qPQoKQXBhY2hlLTIuMBIvaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGh8KHWh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyIpwDCpkDChEvcGV0L2ZpbmRQYWdlYWJsZRKDAyKAAwoDcGV0EhRGaW5kcyBQZXRzIGJ5IHN0YXR1cxpDTXVsdGlwbGUgc3RhdHVzIHZhbHVlcyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncyoMZmluZFBhZ2VhYmxlMj4KPAoIcGFnZWFibGUSBXF1ZXJ5OgRmb3JtQAFSIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9QYWdlYWJsZULPARKpAQoDMjAwEqEBCp4BChRzdWNjZXNzZnVsIG9wZXJhdGlvbhqFAQpACg9hcHBsaWNhdGlvbi94bWwSLQorCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldApBChBhcHBsaWNhdGlvbi9qc29uEi0KKwopygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSIQoDNDAwEhoKGAoUSW52YWxpZCBzdGF0dXMgdmFsdWUaACpkCmIKYAoIUGFnZWFibGUSVApSygEGb2JqZWN0+gFGCiIKBHBhZ2USGgoYygEHaW50ZWdlcpICC3BhZ2UgbnVtYmVyCiAKBHNpemUSGAoWygEHaW50ZWdlcpICCXBhZ2Ugc2l6ZTohCgNwZXQSGkV2ZXJ5dGhpbmcgYWJvdXQgeW91ciBQZXRzOiIKBXN0b3JlEhlBY2Nlc3MgdG8gUGV0c3RvcmUgb3JkZXJzOh0KBHVzZXISFU9wZXJhdGlvbnMgYWJvdXQgdXNlcg==')),
);

/// From: 3_0/issue_16496.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_16496 = (
  model: surface.Model.fromBuffer(base64Decode('CgtPcGVuQVBJIFpvbxJQCgZBbmltYWwqFQoEdHlwZRIGc3RyaW5nUgV6ZWJyYSoOCgRuYW1lEgZzdHJpbmcqDgoDYWdlEgdpbnRlZ2VyKg8KBWFsaWFzEgZzdHJpbmcSfgoFWmVicmEqFQoEdHlwZRIGc3RyaW5nUgV6ZWJyYSoOCgRuYW1lEgZzdHJpbmcqDgoDYWdlEgdpbnRlZ2VyKg8KBWFsaWFzEgZzdHJpbmcqLQoNc3RyaXBlUGF0dGVybhIGc3RyaW5nUgpob3Jpem9udGFsUgh2ZXJ0aWNhbBJmChJHZXRaZWJyYXNSZXNwb25zZXMaL0dldFplYnJhc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0WmVicmFzKh8KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgVaZWJyYRgCGjgKCWdldFplYnJhcxIHL3plYnJhcxoDR0VUKglHZXRaZWJyYXNSEkdldFplYnJhc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJUCgtPcGVuQVBJIFpvbyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGhAKDmxvY2FsaG9zdDo4MDgwInIKcAoHL3plYnJhcxJlImMqCWdldFplYnJhc0JWElQKAzIwMBJNCksKAk9LGkUKQwoQYXBwbGljYXRpb24vanNvbhIvCi0KK8oBBWFycmF58gEgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvWmVicmEqtAIKsQIKsgEKBkFuaW1hbBKnAQqkARIGCgR0eXBlygEGb2JqZWN0+gGPAQoeCgR0eXBlEhYKFMIBCBIGemVicmEKygEGc3RyaW5nCh0KBG5hbWUSFQoTOggSBk1hcnR5CsoBBnN0cmluZwoaCgNhZ2USEwoROgUSAzE1CsoBB2ludGVnZXIKMgoFYWxpYXMSKQonCAE6CRIHU3RyaXB5CsoBBnN0cmluZ5ICDlRoZSBzdHJpcHkgb25lCnoKBVplYnJhEnEKb9IBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9BbmltYWzSAUoKSMoBBm9iamVjdPoBPAo6Cg1zdHJpcGVQYXR0ZXJuEikKJ8IBDRILaG9yaXpvbnRhbArCAQsSCXZlcnRpY2FsCsoBBnN0cmluZw==')),
);

/// From: 3_0/anyOfDiscriminator.yaml
final OpenApiProto<v3.Document> fixtures_3_0_any_of_discriminator = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSIAoJRnJ1aXRUeXBlKhMKCWZydWl0VHlwZRIGc3RyaW5nEmAKD0ZydWl0SW5saW5lRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSZgoVRnJ1aXRJbmxpbmVJbmxpbmVEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI1CgxBcHBsZVJlcURpc2MqEAoFc2VlZHMSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSNwoNQmFuYW5hUmVxRGlzYyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSXQoMRnJ1aXRSZXFEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI3Cg5BcHBsZUFsbE9mRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI5Cg9CYW5hbmFBbGxPZkRpc2MqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEl8KDkZydWl0QWxsT2ZEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI3Cg5BcHBsZUFueU9mRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI5Cg9CYW5hbmFBbnlPZkRpc2MqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEl8KDkZydWl0QW55T2ZEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxIdCgZQYXJlbnQqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSPQoUQXBwbGVHcmFuZHBhcmVudERpc2MqEAoFc2VlZHMSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSPwoVQmFuYW5hR3JhbmRwYXJlbnREaXNjKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxJlChRGcnVpdEdyYW5kcGFyZW50RGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSKAoXRGlzY01pc3NpbmdOb1Byb3BlcnRpZXMQASILaW50ZXJmYWNle30SMAofQ29tcG9zZWREaXNjTWlzc2luZ05vUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRIuChlEaXNjTWlzc2luZ0Zyb21Qcm9wZXJ0aWVzKhEKBmxlbmd0aBIHaW50ZWdlchI2CiFDb21wb3NlZERpc2NNaXNzaW5nRnJvbVByb3BlcnRpZXMqEQoGbGVuZ3RoEgdpbnRlZ2VyEi4KF0Rpc2NPcHRpb25hbFR5cGVDb3JyZWN0KhMKCWZydWl0VHlwZRIGc3RyaW5nEjYKH0NvbXBvc2VkRGlzY09wdGlvbmFsVHlwZUNvcnJlY3QqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSMQoZRGlzY09wdGlvbmFsVHlwZUluY29ycmVjdCoUCglmcnVpdFR5cGUSB2ludGVnZXISOQohQ29tcG9zZWREaXNjT3B0aW9uYWxUeXBlSW5jb3JyZWN0KhQKCWZydWl0VHlwZRIHaW50ZWdlchJRCiRDb21wb3NlZERpc2NPcHRpb25hbFR5cGVJbmNvbnNpc3RlbnQqFAoJZnJ1aXRUeXBlEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEikKEURpc2NUeXBlSW5jb3JyZWN0KhQKCWZydWl0VHlwZRIHaW50ZWdlchIxChlDb21wb3NlZERpc2NUeXBlSW5jb3JyZWN0KhQKCWZydWl0VHlwZRIHaW50ZWdlchJJChxDb21wb3NlZERpc2NUeXBlSW5jb25zaXN0ZW50KhQKCWZydWl0VHlwZRIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxJMCiBDb21wb3NlZERpc2NSZXF1aXJlZEluY29uc2lzdGVudCoTCglmcnVpdFR5cGUSBnN0cmluZyoTCglmcnVpdFR5cGUSBnN0cmluZxJgCg1HRVRfUmVzcG9uc2VzGiVHRVRfUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfKigKFDIwMCBhcHBsaWNhdGlvbi9qc29uEg5GcnVpdEFsbE9mRGlzYxgDGh0SAS8aA0dFVCoER0VUX1INR0VUX1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIl0KWwoBLxJWIlRCUhJQCgMyMDASSQpHCgRkZXNjGj8KPQoQYXBwbGljYXRpb24vanNvbhIpCicSJQojIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRBbGxPZkRpc2Mq8RgK7hgKOAoJRnJ1aXRUeXBlEisKKboBCWZydWl0VHlwZfoBGgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCtIBCg9GcnVpdElubGluZURpc2MSvgEKuwESCwoJZnJ1aXRUeXBl4gFTClG6AQVzZWVkc7oBCWZydWl0VHlwZcoBBm9iamVjdPoBMQoVCgVzZWVkcxIMCgrKAQdpbnRlZ2VyChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmfiAVUKU7oBBmxlbmd0aLoBCWZydWl0VHlwZcoBBm9iamVjdPoBMgoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCvoBChVGcnVpdElubGluZUlubGluZURpc2MS4AEK3QESCwoJZnJ1aXRUeXBl4gFkCmK6AQVzZWVkc8oBBm9iamVjdOIBNAoyugEJZnJ1aXRUeXBlygEGb2JqZWN0+gEaChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmf6ARcKFQoFc2VlZHMSDAoKygEHaW50ZWdlcuIBZgpkugEGbGVuZ3RoygEGb2JqZWN04gE0CjK6AQlmcnVpdFR5cGXKAQZvYmplY3T6ARoKGAoJZnJ1aXRUeXBlEgsKCcoBBnN0cmluZ/oBGAoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgpwCgxGcnVpdFJlcURpc2MSYApeEgsKCWZydWl0VHlwZeIBJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZVJlcURpc2PiASYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5hUmVxRGlzYwpjCgxBcHBsZVJlcURpc2MSUwpRugEFc2VlZHO6AQlmcnVpdFR5cGXKAQZvYmplY3T6ATEKFQoFc2VlZHMSDAoKygEHaW50ZWdlcgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCmYKDUJhbmFuYVJlcURpc2MSVQpTugEGbGVuZ3RougEJZnJ1aXRUeXBlygEGb2JqZWN0+gEyChYKBmxlbmd0aBIMCgrKAQdpbnRlZ2VyChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmcKdgoORnJ1aXRBbGxPZkRpc2MSZApiEgsKCWZydWl0VHlwZeIBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZUFsbE9mRGlzY+IBKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFBbGxPZkRpc2MKZAoOQXBwbGVBbGxPZkRpc2MSUgpQugEFc2VlZHPKAQZvYmplY3TSASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKZwoPQmFuYW5hQWxsT2ZEaXNjElQKUroBBmxlbmd0aMoBBm9iamVjdNIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGX6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKdgoORnJ1aXRBbnlPZkRpc2MSZApiEgsKCWZydWl0VHlwZeIBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZUFueU9mRGlzY+IBKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFBbnlPZkRpc2MKZAoOQXBwbGVBbnlPZkRpc2MSUgpQugEFc2VlZHPKAQZvYmplY3TiASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKZwoPQmFuYW5hQW55T2ZEaXNjElQKUroBBmxlbmd0aMoBBm9iamVjdOIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGX6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKiAEKFEZydWl0R3JhbmRwYXJlbnREaXNjEnAKbhILCglmcnVpdFR5cGXiAS0SKwopIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGVHcmFuZHBhcmVudERpc2PiAS4SLAoqIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5hR3JhbmRwYXJlbnREaXNjCjoKBlBhcmVudBIwCi7KAQZvYmplY3TSASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBlCmcKFEFwcGxlR3JhbmRwYXJlbnREaXNjEk8KTboBBXNlZWRzygEGb2JqZWN00gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudPoBFwoVCgVzZWVkcxIMCgrKAQdpbnRlZ2VyCmoKFUJhbmFuYUdyYW5kcGFyZW50RGlzYxJRCk+6AQZsZW5ndGjKAQZvYmplY3TSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGFyZW50+gEYChYKBmxlbmd0aBIMCgrKAQdpbnRlZ2VyCmUKH0NvbXBvc2VkRGlzY01pc3NpbmdOb1Byb3BlcnRpZXMSQgpAEgsKCWZydWl0VHlwZeIBMBIuCiwjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjTWlzc2luZ05vUHJvcGVydGllcwomChdEaXNjTWlzc2luZ05vUHJvcGVydGllcxILCgnKAQZvYmplY3QKaQohQ29tcG9zZWREaXNjTWlzc2luZ0Zyb21Qcm9wZXJ0aWVzEkQKQhILCglmcnVpdFR5cGXiATISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY01pc3NpbmdGcm9tUHJvcGVydGllcwpDChlEaXNjTWlzc2luZ0Zyb21Qcm9wZXJ0aWVzEiYKJMoBBm9iamVjdPoBGAoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgplCh9Db21wb3NlZERpc2NPcHRpb25hbFR5cGVDb3JyZWN0EkIKQBILCglmcnVpdFR5cGXiATASLgosIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY09wdGlvbmFsVHlwZUNvcnJlY3QKQwoXRGlzY09wdGlvbmFsVHlwZUNvcnJlY3QSKAomygEGb2JqZWN0+gEaChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmcKaQohQ29tcG9zZWREaXNjT3B0aW9uYWxUeXBlSW5jb3JyZWN0EkQKQhILCglmcnVpdFR5cGXiATISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY09wdGlvbmFsVHlwZUluY29ycmVjdApGChlEaXNjT3B0aW9uYWxUeXBlSW5jb3JyZWN0EikKJ8oBBm9iamVjdPoBGwoZCglmcnVpdFR5cGUSDAoKygEHaW50ZWdlcgqfAQokQ29tcG9zZWREaXNjT3B0aW9uYWxUeXBlSW5jb25zaXN0ZW50EncKdRILCglmcnVpdFR5cGXiATISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY09wdGlvbmFsVHlwZUluY29ycmVjdOIBMBIuCiwjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjT3B0aW9uYWxUeXBlQ29ycmVjdApZChlDb21wb3NlZERpc2NUeXBlSW5jb3JyZWN0EjwKOhILCglmcnVpdFR5cGXiASoSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY1R5cGVJbmNvcnJlY3QKSgoRRGlzY1R5cGVJbmNvcnJlY3QSNQozugEJZnJ1aXRUeXBlygEGb2JqZWN0+gEbChkKCWZydWl0VHlwZRIMCgrKAQdpbnRlZ2VyCoEBChxDb21wb3NlZERpc2NUeXBlSW5jb25zaXN0ZW50EmEKXxILCglmcnVpdFR5cGXiASoSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY1R5cGVJbmNvcnJlY3TiASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBlCosBCiBDb21wb3NlZERpc2NSZXF1aXJlZEluY29uc2lzdGVudBJnCmUSCwoJZnJ1aXRUeXBl4gEwEi4KLCMvY29tcG9uZW50cy9zY2hlbWFzL0Rpc2NPcHRpb25hbFR5cGVDb3JyZWN04gEiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0ZydWl0VHlwZQ==')),
);

/// From: 3_0/anyOf.yaml
final OpenApiProto<v3.Document> fixtures_3_0_any_of = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSFwoFYXBwbGUqDgoEa2luZBIGc3RyaW5nEhkKBmJhbmFuYSoPCgVjb3VudBIGbnVtYmVyEjkKBWZydWl0Kg8KBWNvbG9yEgZzdHJpbmcqDgoEa2luZBIGc3RyaW5nKg8KBWNvdW50EgZudW1iZXISVwoNR0VUX1Jlc3BvbnNlcxolR0VUX1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUXyofChQyMDAgYXBwbGljYXRpb24vanNvbhIFZnJ1aXQYAxodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIlQKUgoBLxJNIktCSRJHCgMyMDASQAo+CgRkZXNjGjYKNAoQYXBwbGljYXRpb24vanNvbhIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvZnJ1aXQq6QEK5gEKdwoFZnJ1aXQSbgpsSgVmcnVpdMoBBm9iamVjdOIBHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9hcHBsZeIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9iYW5hbmH6ARYKFAoFY29sb3ISCwoJygEGc3RyaW5nCjMKBWFwcGxlEioKKEoFYXBwbGXKAQZvYmplY3T6ARUKEwoEa2luZBILCgnKAQZzdHJpbmcKNgoGYmFuYW5hEiwKKkoGYmFuYW5hygEGb2JqZWN0+gEWChQKBWNvdW50EgsKCcoBBm51bWJlcg==')),
);

/// From: 3_0/mapSchemas.yaml
final OpenApiProto<v3.Document> fixtures_3_0_map_schemas = (
  model: surface.Model.fromBuffer(base64Decode('CgtFeGFtcGxlIEFQSRJZCgxFeGFtcGxlTW9kZWwqDAoCaWQSBnN0cmluZyo7Chh3aXRoQWRkaXRpb25hbFByb3BlcnRpZXMSHU1vZGVsV2l0aEFkZGl0aW9uYWxQcm9wZXJ0aWVzGAMSQgoxTW9kZWxXaXRoQWRkaXRpb25hbFByb3BlcnRpZXNBZGRpdGlvbmFsUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRKGAQodTW9kZWxXaXRoQWRkaXRpb25hbFByb3BlcnRpZXMqDAoCaWQSBnN0cmluZypXChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSPG1hcFtzdHJpbmddTW9kZWxXaXRoQWRkaXRpb25hbFByb3BlcnRpZXNBZGRpdGlvbmFsUHJvcGVydGllcxgBEk4KHk1vZGVsV2l0aFN0cmluZ1RvU3RyaW5nTWFwcGluZyosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESUwodTW9kZWxXaXRoU3RyaW5nVG9Nb2RlbE1hcHBpbmcqMgoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhdtYXBbc3RyaW5nXUNvbXBsZXhNb2RlbBgBEjQKDENvbXBsZXhNb2RlbCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEp0CChNGcmVlZm9ybU9iamVjdFR5cGVzKh4KDEV4YW1wbGVNb2RlbBIMRXhhbXBsZU1vZGVsGAMqQAodTW9kZWxXaXRoQWRkaXRpb25hbFByb3BlcnRpZXMSHU1vZGVsV2l0aEFkZGl0aW9uYWxQcm9wZXJ0aWVzGAMqQgoeTW9kZWxXaXRoU3RyaW5nVG9TdHJpbmdNYXBwaW5nEh5Nb2RlbFdpdGhTdHJpbmdUb1N0cmluZ01hcHBpbmcYAypACh1Nb2RlbFdpdGhTdHJpbmdUb01vZGVsTWFwcGluZxIdTW9kZWxXaXRoU3RyaW5nVG9Nb2RlbE1hcHBpbmcYAyoeCgxDb21wbGV4TW9kZWwSDENvbXBsZXhNb2RlbBgDEmUKDUdFVF9SZXNwb25zZXMaJUdFVF9SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF8qLQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SE0ZyZWVmb3JtT2JqZWN0VHlwZXMYAhodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIUCgtFeGFtcGxlIEFQSTIFMy4wLjAiygEKxwEKAS8SwQEivgESC0VtcHR5IFJvdXRlQq4BEm0KAzIwMBJmCmQKDUdvb2QgUmVxdWVzdC4aUwpRChBhcHBsaWNhdGlvbi9qc29uEj0KOwo5ygEFYXJyYXnyAS4KLBIqCigjL2NvbXBvbmVudHMvc2NoZW1hcy9GcmVlZm9ybU9iamVjdFR5cGVzEhcKAzQwMBIQCg4KDEJhZCBSZXF1ZXN0LhIkCgM0MDMSHQobChlGb3JiaWRkZW4uIEFjY2VzcyBkZW5pZWQuKoAHCv0GCoUBCgxFeGFtcGxlTW9kZWwSdQpzygEGb2JqZWN0+gFnChEKAmlkEgsKCcoBBnN0cmluZwpSChh3aXRoQWRkaXRpb25hbFByb3BlcnRpZXMSNhI0CjIjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbFdpdGhBZGRpdGlvbmFsUHJvcGVydGllcwpJCh1Nb2RlbFdpdGhBZGRpdGlvbmFsUHJvcGVydGllcxIoCibKAQZvYmplY3T6ARMKEQoCaWQSCwoJygEGc3RyaW5nggIECgIKAAo9Ch5Nb2RlbFdpdGhTdHJpbmdUb1N0cmluZ01hcHBpbmcSGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZwpWCh1Nb2RlbFdpdGhTdHJpbmdUb01vZGVsTWFwcGluZxI1CjPKAQZvYmplY3SCAicKJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9Db21wbGV4TW9kZWwKawoMQ29tcGxleE1vZGVsElsKWToTEhFuYW1lOiBQdW1hCmlkOiAxCroBBG5hbWXKAQZvYmplY3T6ATEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0ChMKBG5hbWUSCwoJygEGc3RyaW5nCqMDChNGcmVlZm9ybU9iamVjdFR5cGVzEosDCogDygEGb2JqZWN0+gH7Ago1CgxFeGFtcGxlTW9kZWwSJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9FeGFtcGxlTW9kZWwKVwodTW9kZWxXaXRoQWRkaXRpb25hbFByb3BlcnRpZXMSNhI0CjIjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbFdpdGhBZGRpdGlvbmFsUHJvcGVydGllcwpZCh5Nb2RlbFdpdGhTdHJpbmdUb1N0cmluZ01hcHBpbmcSNxI1CjMjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbFdpdGhTdHJpbmdUb1N0cmluZ01hcHBpbmcKVwodTW9kZWxXaXRoU3RyaW5nVG9Nb2RlbE1hcHBpbmcSNhI0CjIjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbFdpdGhTdHJpbmdUb01vZGVsTWFwcGluZwo1CgxDb21wbGV4TW9kZWwSJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9Db21wbGV4TW9kZWw=')),
);

/// From: 3_0/http-basic-test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_http_basic_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjAKCENhdGVnb3J5KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSKwoDVGFnKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSlQEKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqDQoEdGFncxIDVGFnGAIqKgoGc3RhdHVzEgZzdHJpbmdSCWF2YWlsYWJsZVIHcGVuZGluZ1IEc29sZBI6CgNQZXQqGQoQYXBwbGljYXRpb24vanNvbhIDUGV0GAMqGAoPYXBwbGljYXRpb24veG1sEgNQZXQYAxJWChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0KhUKDHJlcXVlc3RfYm9keRIDUGV0GAMSeQoPQWRkUGV0UmVzcG9uc2VzGilBZGRQZXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEFkZFBldCocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMaPwoGYWRkUGV0EgQvcGV0GgRQT1NUKgZBZGRQZXRKEEFkZFBldFBhcmFtZXRlcnNSD0FkZFBldFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBLeAQoQT3BlbkFQSSBQZXRzdG9yZRKCAVRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gRm9yIHRoaXMgc2FtcGxlLCB5b3UgY2FuIHVzZSB0aGUgYXBpIGtleSBgc3BlY2lhbC1rZXlgIHRvIHRlc3QgdGhlIGF1dGhvcml6YXRpb24gZmlsdGVycy4qPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBofCh1odHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92MiKXAgqUAgoEL3BldBKLAjKIAgoDcGV0EhpBZGQgYSBuZXcgcGV0IHRvIHRoZSBzdG9yZSoGYWRkUGV0OiISIAoeIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvUGV0QqYBEokBCgMyMDASgQEKfwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aZwoxCg9hcHBsaWNhdGlvbi94bWwSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSGAoDNDA1EhEKDwoNSW52YWxpZCBpbnB1dFoQCg4KCmh0dHBfYmFzaWMSACqABwqwBQqsAQoIQ2F0ZWdvcnkSnwEKnAEqCgoIQ2F0ZWdvcnlKDFBldCBjYXRlZ29yecoBBm9iamVjdPoBXwoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKQQoEbmFtZRI5CjeKASteW2EtekEtWjAtOV0rW2EtekEtWjAtOVwuXC1fXSpbYS16QS1aMC05XSskygEGc3RyaW5nkgIUQSBjYXRlZ29yeSBmb3IgYSBwZXQKaAoDVGFnEmEKXyoFCgNUYWdKB1BldCBUYWfKAQZvYmplY3T6ATEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0ChMKBG5hbWUSCwoJygEGc3RyaW5nkgIPQSB0YWcgZm9yIGEgcGV0CpQDCgNQZXQSjAMKiQMqBQoDUGV0SgVhIFBldLoBBG5hbWW6AQlwaG90b1VybHPKAQZvYmplY3T6AbkCChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAotCghjYXRlZ29yeRIhEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL0NhdGVnb3J5Ch4KBG5hbWUSFgoUOgkSB2RvZ2dpZQrKAQZzdHJpbmcKNQoJcGhvdG9VcmxzEigKJioMCghwaG90b1VybCgBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCjwKBHRhZ3MSNAoyKgcKA3RhZygBygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9UYWcKVwoGc3RhdHVzEk0KS0ABwgEMEgphdmFpbGFibGUKwgEKEghwZW5kaW5nCsIBBxIFc29sZArKAQZzdHJpbmeSAhdwZXQgc3RhdHVzIGluIHRoZSBzdG9yZZICH0EgcGV0IGZvciBzYWxlIGluIHRoZSBwZXQgc3RvcmUqqQEKpgEKA1BldBKeAQqbAQouUGV0IG9iamVjdCB0aGF0IG5lZWRzIHRvIGJlIGFkZGVkIHRvIHRoZSBzdG9yZRJnCjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAoxCg9hcHBsaWNhdGlvbi94bWwSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldBgBOh8KHQoKaHR0cF9iYXNpYxIPCg0KBGh0dHAqBWJhc2ljOiEKA3BldBIaRXZlcnl0aGluZyBhYm91dCB5b3VyIFBldHNCMAobRmluZCBvdXQgbW9yZSBhYm91dCBTd2FnZ2VyEhFodHRwOi8vc3dhZ2dlci5pbw==')),
);

/// From: 3_0/issue_12857.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_12857 = (
  model: surface.Model.fromBuffer(base64Decode('ChlvcGVuYXBpIDMuMC4zIHNhbXBsZSBzcGVjEhQKA2ZvbxABIgtpbnRlcmZhY2V7fRIbCgtGb29SZXF1aXJlZCoMCgNmb28SA2ZvbxgDEhsKC0Zvb09wdGlvbmFsKgwKA2ZvbxIDZm9vGAM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJ6ChlvcGVuYXBpIDMuMC4zIHNhbXBsZSBzcGVjElZzYW1wbGUgc3BlYyBmb3IgdGVzdGluZyBvcGVuYXBpIGZ1bmN0aW9uYWxpdHksIGJ1aWx0IGZyb20ganNvbiBzY2hlbWEgdGVzdHMgZm9yIGRyYWZ0NjIFMC4wLjEiACpKCkgKJQoLRm9vUmVxdWlyZWQSFgoUugEDZm9v+gELCgkKA2ZvbxICCgAKHwoLRm9vT3B0aW9uYWwSEAoO+gELCgkKA2ZvbxICCgA=')),
);

/// From: 3_0/allof_primitive.yaml
final OpenApiProto<v3.Document> fixtures_3_0_allof_primitive = (
  model: surface.Model.fromBuffer(base64Decode('CgNGb28SJgoIRGF0ZVRpbWUqGgoFdmFsdWUSBnN0cmluZyIJZGF0ZS10aW1lEisKDUFsbE9mRGF0ZXRpbWUqGgoFdmFsdWUSBnN0cmluZyIJZGF0ZS10aW1lEjsKB1BheW1lbnQqFwoEZGF0ZRINQWxsT2ZEYXRldGltZRgDKhcKBmFtb3VudBIGbnVtYmVyIgVmbG9hdBJiChBHRVRfZm9vUmVzcG9uc2VzGitHRVRfZm9vUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfZm9vKiEKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdQYXltZW50GAIaJhIEL2ZvbxoDR0VUKgdHRVRfZm9vUhBHRVRfZm9vUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIMCgNGb28yBTEuMC4wImsKaQoEL2ZvbxJhIl9CXRJbCgMyMDASVApSCgdleGFtcGxlGkcKRQoQYXBwbGljYXRpb24vanNvbhIxCi8KLcoBBWFycmF58gEiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvUGF5bWVudCqHAgqEAgo7CghEYXRlVGltZRIvCi06FhIUMjAxOS0wMS0wMVQwMDowMDowMArKAQZzdHJpbmeaAglkYXRlLXRpbWUKUQoNQWxsT2ZEYXRldGltZRJACj46GBIWIjIwMTktMDEtMDEgMDA6MDA6MDAiCtIBIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9EYXRlVGltZQpyCgdQYXltZW50EmcKZcoBBm9iamVjdPoBWQouCgRkYXRlEiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvQWxsT2ZEYXRldGltZQonCgZhbW91bnQSHQobOggSBjYyNS4wCsoBBm51bWJlcpoCBWZsb2F0')),
);

/// From: 3_0/sse.yaml
final OpenApiProto<v3.Document> fixtures_3_0_sse = (
  model: surface.Model.fromBuffer(base64Decode('CghTU0UgdGVzdBIhCglFdmVudFR5cGUqFAoKYXR0cmlidXRlMRIGc3RyaW5nEm4KFFNzZVZhcmlhbnQxUmVzcG9uc2VzGjNTc2VWYXJpYW50MVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgU3NlVmFyaWFudDEqIQoVMjAwIHRleHQvZXZlbnQtc3RyZWFtEgZzdHJpbmcYAhJxChRTc2VWYXJpYW50MlJlc3BvbnNlcxozU3NlVmFyaWFudDJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFNzZVZhcmlhbnQyKiQKFTIwMCB0ZXh0L2V2ZW50LXN0cmVhbRIJRXZlbnRUeXBlGAISawoPTm9uU1NFUmVzcG9uc2VzGilOb25TU0VSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIE5vblNTRSotChUyMDAgdGV4dC9ldmVudC1zdHJlYW0SBnN0cmluZyIMZXZlbnQtc3RyZWFtGkYKC3NzZVZhcmlhbnQxEg4vcGF0aC92YXJpYW50MRoEUE9TVCoLU3NlVmFyaWFudDFSFFNzZVZhcmlhbnQxUmVzcG9uc2VzGkYKC3NzZVZhcmlhbnQyEg4vcGF0aC92YXJpYW50MhoEUE9TVCoLU3NlVmFyaWFudDJSFFNzZVZhcmlhbnQyUmVzcG9uc2VzGjcKBm5vblNTRRIOL3BhdGgvdmFyaWFudDMaBFBPU1QqBk5vblNTRVIPTm9uU1NFUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIhCghTU0UgdGVzdBIOU1NFIHRlc3QgY2FzZXMyBTEuMC4wGgcKBWh0dHBzIpwDCoUBCg4vcGF0aC92YXJpYW50MRJzMnEKA3NzZSoLc3NlVmFyaWFudDFCXRJbCgMyMDASVApSCgxhY2tub3dsZWRnZWQaQgpAChF0ZXh0L2V2ZW50LXN0cmVhbRIrCikKJ8oBBWFycmF58gENCgsKCcoBBnN0cmluZ5oCDGV2ZW50LXN0cmVhbQqeAQoOL3BhdGgvdmFyaWFudDISiwEyiAEKA3NzZSoLc3NlVmFyaWFudDJCdBJyCgMyMDASawppCgxhY2tub3dsZWRnZWQaWQpXChF0ZXh0L2V2ZW50LXN0cmVhbRJCCkAKPsoBBWFycmF58gEkCiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRXZlbnRUeXBlmgIMZXZlbnQtc3RyZWFtCnEKDi9wYXRoL3ZhcmlhbnQzEl8yXQoDc3NlKgZub25TU0VCThJMCgMyMDASRQpDCgxhY2tub3dsZWRnZWQaMwoxChF0ZXh0L2V2ZW50LXN0cmVhbRIcChoKGMoBBnN0cmluZ5oCDGV2ZW50LXN0cmVhbSo6CjgKNgoJRXZlbnRUeXBlEikKJ8oBBm9iamVjdPoBGwoZCgphdHRyaWJ1dGUxEgsKCcoBBnN0cmluZzoFCgNzc2U=')),
);

/// From: 3_0/simplifyOneOfAnyOf_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_simplify_one_of_any_of_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEisKCUFueU9mVGVzdCoPCgV2YWx1ZRIGc3RyaW5nKg0KBXZhbHVlEgRudWxsEiwKCU9uZU9mVGVzdCoQCgV2YWx1ZRIHaW50ZWdlcioNCgV2YWx1ZRIEbnVsbBI2ChFPbmVPZk51bGxhYmxlVGVzdCoQCgV2YWx1ZRIHaW50ZWdlcioPCgV2YWx1ZRIGc3RyaW5nEigKD1NpbmdsZUFueU9mVGVzdCoVCgV2YWx1ZRIGc3RyaW5nUgFBUgFCEioKBk51bWJlciogCgV2YWx1ZRIGc3RyaW5nUgNvbmVSA3R3b1IFdGhyZWUSKgoGbnVtYmVyKiAKBXZhbHVlEgZzdHJpbmdSA29uZVIDdHdvUgV0aHJlZRIcCgZQYXJlbnQqEgoGbnVtYmVyEgZudW1iZXIYAxItChdQYXJlbnRXaXRoT25lT2ZQcm9wZXJ0eSoSCgZudW1iZXISBm51bWJlchgDEiQKB051bWJlcjIqGQoFdmFsdWUSBnN0cmluZ1IDb25lUgN0d28SMwodUGFyZW50V2l0aFBsdXJhbE9uZU9mUHJvcGVydHkqEgoGbnVtYmVyEgZudW1iZXIYAxI+ChhBbnlPZlN0cmluZ0FycmF5T2ZTdHJpbmcqDwoFdmFsdWUSBnN0cmluZyoRCgV2YWx1ZRIGc3RyaW5nGAISVAoMQW55T2ZBbnlUeXBlKhAKBXZhbHVlEgdib29sZWFuKg8KBXZhbHVlEgZzdHJpbmcqDwoFdmFsdWUSBm51bWJlcioQCgV2YWx1ZRIHaW50ZWdlchJUCgxPbmVPZkFueVR5cGUqEAoFdmFsdWUSB2Jvb2xlYW4qDwoFdmFsdWUSBm51bWJlcioPCgV2YWx1ZRIGc3RyaW5nKhAKBXZhbHVlEgdpbnRlZ2VyEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElsKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCUFueU9mVGVzdBgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK9AQq6AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmwEimAEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSxJJCgMyMDASQgpACgJPSxo6CjgKEGFwcGxpY2F0aW9uL2pzb24SJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0FueU9mVGVzdCrrBwroBwpDCglBbnlPZlRlc3QSNgo04gELCgnKAQZzdHJpbmfiAQkKB8oBBG51bGziAQIKAOIBAhIAkgINdG8gdGVzdCBhbnlPZgpECglPbmVPZlRlc3QSNwo12gEMCgrKAQdpbnRlZ2Vy2gEJCgfKAQRudWxs2gECCgDaAQISAJICDXRvIHRlc3Qgb25lT2YKUgoRT25lT2ZOdWxsYWJsZVRlc3QSPQo72gEMCgrKAQdpbnRlZ2Vy2gELCgnKAQZzdHJpbmfaAQISAJICFnRvIHRlc3Qgb25lT2YgbnVsbGFibGUKVAoPU2luZ2xlQW55T2ZUZXN0EkEKP+IBGQoXwgEEEgJBCsIBBBICQgrKAQZzdHJpbmeSAiB0byB0ZXN0IGFueU9mIChlbnVtIHN0cmluZyBvbmx5KQpICgZQYXJlbnQSPgo8ygEGb2JqZWN0+gEwCi4KBm51bWJlchIkCiLiAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvTnVtYmVyClkKF1BhcmVudFdpdGhPbmVPZlByb3BlcnR5Ej4KPMoBBm9iamVjdPoBMAouCgZudW1iZXISJAoi2gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL051bWJlcgqCAQodUGFyZW50V2l0aFBsdXJhbE9uZU9mUHJvcGVydHkSYQpfygEGb2JqZWN0+gFTClEKBm51bWJlchJHCkXaAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvTnVtYmVy2gEgEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL051bWJlcjIKMgoGTnVtYmVyEigKJsIBBhIEb25lCsIBBhIEdHdvCsIBCBIGdGhyZWUKygEGc3RyaW5nCigKB051bWJlcjISHQobwgEGEgRvbmUKwgEGEgR0d28KygEGc3RyaW5nCkkKGEFueU9mU3RyaW5nQXJyYXlPZlN0cmluZxItCiviAQsKCcoBBnN0cmluZ+IBGgoYygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCm4KDEFueU9mQW55VHlwZRJeClziAQwKCsoBB2Jvb2xlYW7iAREKD8oBBWFycmF58gEECgIKAOIBCwoJygEGb2JqZWN04gELCgnKAQZzdHJpbmfiAQsKCcoBBm51bWJlcuIBDAoKygEHaW50ZWdlcgpuCgxPbmVPZkFueVR5cGUSXgpc2gELCgnKAQZvYmplY3TaAQwKCsoBB2Jvb2xlYW7aAQsKCcoBBm51bWJlctoBCwoJygEGc3RyaW5n2gEMCgrKAQdpbnRlZ2Vy2gERCg/KAQVhcnJhefIBBAoCCgA=')),
);

/// From: 3_0/schema-with-nullable-arrays.yaml
final OpenApiProto<v3.Document> fixtures_3_0_schema_with_nullable_arrays = (
  model: surface.Model.fromBuffer(base64Decode('ChBNaW5pbWFsIEV4YW1wbGUgEpkBCg9CeXRlQXJyYXlPYmplY3QqHQoNbnVsbGFibGVBcnJheRIGc3RyaW5nIgRieXRlKhsKC25vcm1hbEFycmF5EgZzdHJpbmciBGJ5dGUqGAoObnVsbGFibGVTdHJpbmcSBnN0cmluZyoVCgtzdHJpbmdGaWVsZBIGc3RyaW5nKhkKCGludEZpZWxkEgZudW1iZXIiBWludDMyEpoBCiBHRVRfbnVsbGFibGUtYXJyYXktdGVzdFJlc3BvbnNlcxpLR0VUX251bGxhYmxlLWFycmF5LXRlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9udWxsYWJsZS1hcnJheS10ZXN0KikKFDIwMCBhcHBsaWNhdGlvbi9qc29uEg9CeXRlQXJyYXlPYmplY3QYAhpWEhQvbnVsbGFibGUtYXJyYXktdGVzdBoDR0VUKhdHRVRfbnVsbGFibGUtYXJyYXktdGVzdFIgR0VUX251bGxhYmxlLWFycmF5LXRlc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBI4ChBNaW5pbWFsIEV4YW1wbGUgEiBieXRlIEFycmF5IGVycm9yIGluIGVxdWFsIG1ldGhvZDICdjEiegp4ChQvbnVsbGFibGUtYXJyYXktdGVzdBJgIl5CXBJaCgMyMDASUwpRGk8KTQoQYXBwbGljYXRpb24vanNvbhI5CjcKNcoBBWFycmF58gEqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvQnl0ZUFycmF5T2JqZWN0Ku4BCusBCugBCg9CeXRlQXJyYXlPYmplY3QS1AEK0QHKAQZvYmplY3T6AcQBCjMKDW51bGxhYmxlQXJyYXkSIgogCAHKAQZzdHJpbmeSAgtieXRlIGFycmF5LpoCBGJ5dGUKLwoLbm9ybWFsQXJyYXkSIAoeygEGc3RyaW5nkgILYnl0ZSBhcnJheS6aAgRieXRlCh8KDm51bGxhYmxlU3RyaW5nEg0KCwgBygEGc3RyaW5nChoKC3N0cmluZ0ZpZWxkEgsKCcoBBnN0cmluZwofCghpbnRGaWVsZBITChHKAQZudW1iZXKaAgVpbnQzMg==')),
);

/// From: 3_0/issue_10866_bigdecimal_default.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_10866_bigdecimal_default = (
  model: surface.Model.fromBuffer(base64Decode('CgREZW1vEmoKA0FwYSoUCgRiZXBhEgZudW1iZXIiBGxvbmcqDgoEY2VwYRIGbnVtYmVyKg4KBGRlcGESBm51bWJlcioNCgNlcGESBm51bWJlcioOCgRmZXBhEgZudW1iZXIqDgoEZ2VwYRIGbnVtYmVyEigKC1JlcXVlc3RCb2R5KhkKEGFwcGxpY2F0aW9uL2pzb24SA0FwYRgDEmcKE1BPU1RfdGVzdFBhcmFtZXRlcnMaMVBPU1RfdGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX3Rlc3QqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDGi0SBS90ZXN0GgRQT1NUKglQT1NUX3Rlc3RKE1BPU1RfdGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBINCgREZW1vMgUxLjAuMCJsCmoKBS90ZXN0EmEyXzo6CjgSNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9BcGEYAUIhEh8KAzIwMBIYChYKFFN1Y2Nlc3NmdWwgb3BlcmF0aW9uKvIBCu8BCuwBCgNBcGES5AEK4QG6AQRiZXBhugEEY2VwYcoBBm9iamVjdPoBxgEKJgoEYmVwYRIeChzKAQZudW1iZXKKAgkJAAAAAAAAAACaAgRsb25nCh8KBGNlcGESFwoVygEGbnVtYmVyigIJCW6GG/D5IRlACh8KBGRlcGESFwoVygEGbnVtYmVyigIJCQAAAAAAwFFACh4KA2VwYRIXChXKAQZudW1iZXKKAgkJAAAAAADAUcAKIwoEZmVwYRIbChkIAUABygEGbnVtYmVyigIJCQAAAAAAAFlAChUKBGdlcGESDQoLCAHKAQZudW1iZXI=')),
);

/// From: 3_0/allOf-required-parent.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_required_parent = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEtABCg9wZXJzb25Gb3JVcGRhdGUqEwoJZmlyc3ROYW1lEgZzdHJpbmcqDgoEbmFtZRIGc3RyaW5nKhkKCWJpcnRoRGF0ZRIGc3RyaW5nIgRkYXRlKhEKB2FkZHJlc3MSBnN0cmluZyoUCgpwb3N0YWxDb2RlEgZzdHJpbmcqDgoEY2l0eRIGc3RyaW5nKhUKC3Bob25lTnVtYmVyEgZzdHJpbmcqFgoFZW1haWwSBnN0cmluZyIFZW1haWwqFQoLbmF0aW9uYWxpdHkSBnN0cmluZxLSAQoRcGVyc29uRm9yQ3JlYXRpb24qEwoJZmlyc3ROYW1lEgZzdHJpbmcqDgoEbmFtZRIGc3RyaW5nKhkKCWJpcnRoRGF0ZRIGc3RyaW5nIgRkYXRlKhEKB2FkZHJlc3MSBnN0cmluZyoUCgpwb3N0YWxDb2RlEgZzdHJpbmcqDgoEY2l0eRIGc3RyaW5nKhUKC3Bob25lTnVtYmVyEgZzdHJpbmcqFgoFZW1haWwSBnN0cmluZyIFZW1haWwqFQoLbmF0aW9uYWxpdHkSBnN0cmluZxLdAQoGcGVyc29uKhMKCWZpcnN0TmFtZRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoZCgliaXJ0aERhdGUSBnN0cmluZyIEZGF0ZSoRCgdhZGRyZXNzEgZzdHJpbmcqFAoKcG9zdGFsQ29kZRIGc3RyaW5nKg4KBGNpdHkSBnN0cmluZyoVCgtwaG9uZU51bWJlchIGc3RyaW5nKhYKBWVtYWlsEgZzdHJpbmciBWVtYWlsKhUKC25hdGlvbmFsaXR5EgZzdHJpbmcqFAoCaWQSB2ludGVnZXIiBWludDMyEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElgKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnBlcnNvbhgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL3BlcnNvbiqCBAr/AwpiCgZwZXJzb24SWApWugECaWTSASoSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvcGVyc29uRm9yQ3JlYXRpb27SASEKH/oBHAoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50MzIKXQoRcGVyc29uRm9yQ3JlYXRpb24SSApGugEJZmlyc3ROYW1lugEEbmFtZboBBWVtYWls0gEoEiYKJCMvY29tcG9uZW50cy9zY2hlbWFzL3BlcnNvbkZvclVwZGF0ZQq5AgoPcGVyc29uRm9yVXBkYXRlEqUCCqIC+gGeAgobCglmaXJzdE5hbWUSDgoMeP8BygEGc3RyaW5nChYKBG5hbWUSDgoMeP8BygEGc3RyaW5nCh8KCWJpcnRoRGF0ZRISChDKAQZzdHJpbmeaAgRkYXRlChkKB2FkZHJlc3MSDgoMeP8BygEGc3RyaW5nChwKCnBvc3RhbENvZGUSDgoMeP8BygEGc3RyaW5nChYKBGNpdHkSDgoMeP8BygEGc3RyaW5nCjgKC3Bob25lTnVtYmVyEikKJ4oBG14oKFwrKTMzfDApWzEtOV0oXGR7Mn0pezR9JMoBBnN0cmluZwocCgVlbWFpbBITChHKAQZzdHJpbmeaAgVlbWFpbAodCgtuYXRpb25hbGl0eRIOCgx4/wHKAQZzdHJpbmc=')),
);

/// From: 3_0/inner_enum.yaml
final OpenApiProto<v3.Document> fixtures_3_0_inner_enum = (
  model: surface.Model.fromBuffer(base64Decode('CgpTYW1wbGUgQVBJEi4KBFBvbnkqJgoEdHlwZRIGc3RyaW5nUgVFYXJ0aFIGUGVnYXNpUgdVbmljb3JuEmgKE0dFVF9wb25pZXNSZXNwb25zZXMaMUdFVF9wb25pZXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9wb25pZXMqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBFBvbnkYAhpbEgcvcG9uaWVzGgNHRVQiKk9wdGlvbmFsIGV4dGVuZGVkIGRlc2NyaXB0aW9uIGluIE1hcmtkb3duLioKR0VUX3Bvbmllc1ITR0VUX3Bvbmllc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIxCgpTYW1wbGUgQVBJEhxBUEkgZGVzY3JpcHRpb24gaW4gTWFya2Rvd24uMgUxLjAuMCKrAQqoAQoHL3BvbmllcxKcASKZARIUUmV0dXJucyBhbGwgYW5pbWFscy4aKk9wdGlvbmFsIGV4dGVuZGVkIGRlc2NyaXB0aW9uIGluIE1hcmtkb3duLkJVElMKAzIwMBJMCkoKAk9LGkQKQgoQYXBwbGljYXRpb24vanNvbhIuCiwKKsoBBWFycmF58gEfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvUG9ueSpTClEKTwoEUG9ueRJHCkXKAQZvYmplY3T6ATkKNwoEdHlwZRIvCi3CAQgSBkVhcnRoCsIBCRIHUGVnYXNpCsIBChIIVW5pY29ybgrKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_10865_default_values.yaml
final OpenApiProto<v2.Document> fixtures_3_0_issue_10865_default_values = (
  model: surface.Model.fromBuffer(base64Decode('CgREZW1vEj8KA0FwYSoNCgJpMBIHaW50ZWdlcioNCgJpMRIHaW50ZWdlcioMCgJuMBIGbnVtYmVyKgwKAm4xEgZudW1iZXIStgQKDlRlc3RQYXJhbWV0ZXJzGidUZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFRlc3QqEAoDcGkwEgdpbnRlZ2VyKAQqEAoDcGkxEgdpbnRlZ2VyKAQqDwoDcG4wEgZudW1iZXIoBCoPCgNwbjESBm51bWJlcigEKhAKA3FpMBIHaW50ZWdlcigDKhAKA3FpMRIHaW50ZWdlcigDKhAKA3FpMhIHaW50ZWdlcigDKhAKA3FpMxIHaW50ZWdlcigDKg8KA3FuMBIGbnVtYmVyKAMqDwoDcW4xEgZudW1iZXIoAyoPCgNxbjISBm51bWJlcigDKg8KA3FuMxIGbnVtYmVyKAMqEAoDaGkwEgdpbnRlZ2VyKAEqEAoDaGkxEgdpbnRlZ2VyKAEqEAoDaGkyEgdpbnRlZ2VyKAEqEAoDaGkzEgdpbnRlZ2VyKAEqDwoDaG4wEgZudW1iZXIoASoPCgNobjESBm51bWJlcigBKg8KA2huMhIGbnVtYmVyKAEqDwoDaG4zEgZudW1iZXIoASoQCgNmaTASB2ludGVnZXIoAioQCgNmaTESB2ludGVnZXIoAioQCgNmaTISB2ludGVnZXIoAioQCgNmaTMSB2ludGVnZXIoAioPCgNmbjASBm51bWJlcigCKg8KA2ZuMRIGbnVtYmVyKAIqDwoDZm4yEgZudW1iZXIoAioPCgNmbjMSBm51bWJlcigCKhEKA2ZuNBIGc3RyaW5nGAIoAhpXCgR0ZXN0EgUvdGVzdBoEUE9TVCIsVGVzdHMgZGVmYXVsdCB2YWx1ZXMgb2YgZGlmZmVyZW50IHBhcmFtZXRlcnMqBFRlc3RKDlRlc3RQYXJhbWV0ZXJz')),
  document: v2.Document.fromBuffer(base64Decode('CgMyLjASDQoERGVtbxIFMS4wLjBC4ggS3wgKBS90ZXN0EtUIItIIEhRUZXN0cyBkZWZhdWx0IHZhbHVlcxosVGVzdHMgZGVmYXVsdCB2YWx1ZXMgb2YgZGlmZmVyZW50IHBhcmFtZXRlcnMqBHRlc3RCIwohEh8iHQgBEgRwYXRoIgNwaTAqB2ludGVnZXJKBRIDMTAKQhwKGhIYIhYIARIEcGF0aCIDcGkxKgdpbnRlZ2VyQiIKIBIeIhwIARIEcGF0aCIDcG4wKgZudW1iZXJKBRIDMTAKQhsKGRIXIhUIARIEcGF0aCIDcG4xKgZudW1iZXJCIgogEh4aHBIFcXVlcnkiA3FpMDIHaW50ZWdlclIFEgMxMApCJAoiEiAaHggBEgVxdWVyeSIDcWkxMgdpbnRlZ2VyUgUSAzcxCkIbChkSFxoVEgVxdWVyeSIDcWkyMgdpbnRlZ2VyQh0KGxIZGhcIARIFcXVlcnkiA3FpMzIHaW50ZWdlckIhCh8SHRobEgVxdWVyeSIDcW4wMgZudW1iZXJSBRIDMTAKQiMKIRIfGh0IARIFcXVlcnkiA3FuMTIGbnVtYmVyUgUSAzcxCkIaChgSFhoUEgVxdWVyeSIDcW4yMgZudW1iZXJCHAoaEhgaFggBEgVxdWVyeSIDcW4zMgZudW1iZXJCIwohEh8KHRIGaGVhZGVyIgNoaTAqB2ludGVnZXJKBRIDMTAKQiUKIxIhCh8IARIGaGVhZGVyIgNoaTEqB2ludGVnZXJKBRIDNzEKQhwKGhIYChYSBmhlYWRlciIDaGkyKgdpbnRlZ2VyQh4KHBIaChgIARIGaGVhZGVyIgNoaTMqB2ludGVnZXJCIgogEh4KHBIGaGVhZGVyIgNobjAqBm51bWJlckoFEgMxMApCJAoiEiAKHggBEgZoZWFkZXIiA2huMSoGbnVtYmVySgUSAzcxCkIbChkSFwoVEgZoZWFkZXIiA2huMioGbnVtYmVyQh0KGxIZChcIARIGaGVhZGVyIgNobjMqBm51bWJlckIlCiMSIRIfEghmb3JtRGF0YSIDZmkwMgdpbnRlZ2VyUgUSAzEwCkInCiUSIxIhCAESCGZvcm1EYXRhIgNmaTEyB2ludGVnZXJSBRIDNzEKQh4KHBIaEhgSCGZvcm1EYXRhIgNmaTIyB2ludGVnZXJCIAoeEhwSGggBEghmb3JtRGF0YSIDZmkzMgdpbnRlZ2VyQiQKIhIgEh4SCGZvcm1EYXRhIgNmbjAyBm51bWJlclIFEgMxMApCJgokEiISIAgBEghmb3JtRGF0YSIDZm4xMgZudW1iZXJSBRIDNzEKQh0KGxIZEhcSCGZvcm1EYXRhIgNmbjIyBm51bWJlckIfCh0SGxIZCAESCGZvcm1EYXRhIgNmbjMyBm51bWJlckI0CjISMBIuCAESCGZvcm1EYXRhIgNmbjQyBWFycmF5QggKBnN0cmluZ1IKEggtIGl0ZW0wCkoUChIKAzIwMBILCgkKB1N1Y2Nlc3NKjQEKigEKA0FwYRKCAZoBAmkwmgECbjCyAQgKBm9iamVjdMoBagoZCgJpMBITKgUSAzEwCrIBCQoHaW50ZWdlcgoZCgJpMRITKgUSAzIwCrIBCQoHaW50ZWdlcgoYCgJuMBISKgUSAzcxCrIBCAoGbnVtYmVyChgKAm4xEhIqBRIDNjgKsgEICgZudW1iZXI=')),
);

/// From: 3_0/allOfMultiParent.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_multi_parent = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEqkBCgZQZXJzb24qEAoGJF90eXBlEgZzdHJpbmcqEgoIbGFzdE5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyoeChNkdXBsaWNhdGVkX29wdGlvbmFsEgdpbnRlZ2VyKh4KE2R1cGxpY2F0ZWRfcmVxdWlyZWQSB2ludGVnZXIqJAoPcGVyc29uX3JlcXVpcmVkEgZzdHJpbmciCWRhdGUtdGltZRIpCgVIdW1hbioQCgYkX3R5cGUSBnN0cmluZyoOCgRib2R5EgZzdHJpbmcSugIKBUFkdWx0KhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqHgoTZHVwbGljYXRlZF9vcHRpb25hbBIHaW50ZWdlcioeChNkdXBsaWNhdGVkX3JlcXVpcmVkEgdpbnRlZ2VyKiQKD3BlcnNvbl9yZXF1aXJlZBIGc3RyaW5nIglkYXRlLXRpbWUqEAoGJF90eXBlEgZzdHJpbmcqDgoEYm9keRIGc3RyaW5nKh4KE2R1cGxpY2F0ZWRfb3B0aW9uYWwSB2ludGVnZXIqHgoTZHVwbGljYXRlZF9yZXF1aXJlZBIHaW50ZWdlcioTCghjaGlsZHJlbhIFQ2hpbGQYAioZCg5hZHVsdF9yZXF1aXJlZBIHYm9vbGVhbhLUAQoFQ2hpbGQqFQoDYWdlEgdpbnRlZ2VyIgVpbnQzMioTCglmaXJzdE5hbWUSBnN0cmluZyoQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKh4KE2R1cGxpY2F0ZWRfb3B0aW9uYWwSB2ludGVnZXIqHgoTZHVwbGljYXRlZF9yZXF1aXJlZBIHaW50ZWdlciokCg9wZXJzb25fcmVxdWlyZWQSBnN0cmluZyIJZGF0ZS10aW1lEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElgKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBlBlcnNvbhgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqXBwqUBwrRAgoGUGVyc29uEsYCCsMCEkwKBiRfdHlwZRJCCh8KAWESGiMvY29tcG9uZW50cy9zY2hlbWFzL0FkdWx0Ch8KAWMSGiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkugETZHVwbGljYXRlZF9yZXF1aXJlZLoBD3BlcnNvbl9yZXF1aXJlZMoBBm9iamVjdPoBwAEKFQoGJF90eXBlEgsKCcoBBnN0cmluZwoXCghsYXN0TmFtZRILCgnKAQZzdHJpbmcKGAoJZmlyc3ROYW1lEgsKCcoBBnN0cmluZwojChNkdXBsaWNhdGVkX29wdGlvbmFsEgwKCsoBB2ludGVnZXIKIwoTZHVwbGljYXRlZF9yZXF1aXJlZBIMCgrKAQdpbnRlZ2VyCioKD3BlcnNvbl9yZXF1aXJlZBIXChXKAQZzdHJpbmeaAglkYXRlLXRpbWUKVAoFSHVtYW4SSwpJEggKBiRfdHlwZboBBGJvZHnKAQZvYmplY3T6ASwKFQoGJF90eXBlEgsKCcoBBnN0cmluZwoTCgRib2R5EgsKCcoBBnN0cmluZwrPAgoFQWR1bHQSxQIKwgLSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGVyc29u0gEeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0h1bWFu0gHcAQrZAboBE2R1cGxpY2F0ZWRfcmVxdWlyZWS6AQ5jaGlsZF9yZXF1aXJlZMoBBm9iamVjdPoBpQEKIwoTZHVwbGljYXRlZF9vcHRpb25hbBIMCgrKAQdpbnRlZ2VyCiMKE2R1cGxpY2F0ZWRfcmVxdWlyZWQSDAoKygEHaW50ZWdlcgo5CghjaGlsZHJlbhItCivKAQVhcnJhefIBIAoeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkCh4KDmFkdWx0X3JlcXVpcmVkEgwKCsoBB2Jvb2xlYW6SAhxBIHJlcHJlc2VudGF0aW9uIG9mIGFuIGFkdWx0CpUBCgVDaGlsZBKLAQqIAdIBRQpDygEGb2JqZWN0+gE3ChsKA2FnZRIUChLKAQdpbnRlZ2VymgIFaW50MzIKGAoJZmlyc3ROYW1lEgsKCcoBBnN0cmluZ9IBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXJzb26SAhtBIHJlcHJlc2VudGF0aW9uIG9mIGEgY2hpbGQ=')),
);

/// From: 3_0/oneOfDiscriminator.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_discriminator = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSIAoJRnJ1aXRUeXBlKhMKCWZydWl0VHlwZRIGc3RyaW5nEmAKD0ZydWl0SW5saW5lRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSZgoVRnJ1aXRJbmxpbmVJbmxpbmVEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI1CgxBcHBsZVJlcURpc2MqEAoFc2VlZHMSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSNwoNQmFuYW5hUmVxRGlzYyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSXQoMRnJ1aXRSZXFEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI3Cg5BcHBsZUFsbE9mRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI5Cg9CYW5hbmFBbGxPZkRpc2MqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEl8KDkZydWl0QWxsT2ZEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI3Cg5BcHBsZUFueU9mRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI5Cg9CYW5hbmFBbnlPZkRpc2MqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEl8KDkZydWl0QW55T2ZEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI3Cg5BcHBsZU9uZU9mRGlzYyoQCgVzZWVkcxIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxI5Cg9CYW5hbmFPbmVPZkRpc2MqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEl8KDkZydWl0T25lT2ZEaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nKhEKBmxlbmd0aBIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxIvCg1GcnVpdFR5cGVFbnVtKh4KBXZhbHVlEgZzdHJpbmdSBUFQUExFUgZCQU5BTkESLQoZQXBwbGVPbmVPZkVudW1NYXBwaW5nRGlzYyoQCgVzZWVkcxIHaW50ZWdlchIvChpCYW5hbmFPbmVPZkVudW1NYXBwaW5nRGlzYyoRCgZsZW5ndGgSB2ludGVnZXISXgoZRnJ1aXRPbmVPZkVudW1NYXBwaW5nRGlzYyocCglmcnVpdFR5cGUSDUZydWl0VHlwZUVudW0YAyoQCgVzZWVkcxIHaW50ZWdlcioRCgZsZW5ndGgSB2ludGVnZXISHQoGUGFyZW50KhMKCWZydWl0VHlwZRIGc3RyaW5nEj0KFEFwcGxlR3JhbmRwYXJlbnREaXNjKhAKBXNlZWRzEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEj8KFUJhbmFuYUdyYW5kcGFyZW50RGlzYyoRCgZsZW5ndGgSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSZQoURnJ1aXRHcmFuZHBhcmVudERpc2MqEAoFc2VlZHMSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcqEQoGbGVuZ3RoEgdpbnRlZ2VyKhMKCWZydWl0VHlwZRIGc3RyaW5nEigKF0Rpc2NNaXNzaW5nTm9Qcm9wZXJ0aWVzEAEiC2ludGVyZmFjZXt9EjAKH0NvbXBvc2VkRGlzY01pc3NpbmdOb1Byb3BlcnRpZXMQASILaW50ZXJmYWNle30SLgoZRGlzY01pc3NpbmdGcm9tUHJvcGVydGllcyoRCgZsZW5ndGgSB2ludGVnZXISNgohQ29tcG9zZWREaXNjTWlzc2luZ0Zyb21Qcm9wZXJ0aWVzKhEKBmxlbmd0aBIHaW50ZWdlchIuChdEaXNjT3B0aW9uYWxUeXBlQ29ycmVjdCoTCglmcnVpdFR5cGUSBnN0cmluZxI2Ch9Db21wb3NlZERpc2NPcHRpb25hbFR5cGVDb3JyZWN0KhMKCWZydWl0VHlwZRIGc3RyaW5nEjEKGURpc2NPcHRpb25hbFR5cGVJbmNvcnJlY3QqFAoJZnJ1aXRUeXBlEgdpbnRlZ2VyEjkKIUNvbXBvc2VkRGlzY09wdGlvbmFsVHlwZUluY29ycmVjdCoUCglmcnVpdFR5cGUSB2ludGVnZXISUQokQ29tcG9zZWREaXNjT3B0aW9uYWxUeXBlSW5jb25zaXN0ZW50KhQKCWZydWl0VHlwZRIHaW50ZWdlcioTCglmcnVpdFR5cGUSBnN0cmluZxIpChFEaXNjVHlwZUluY29ycmVjdCoUCglmcnVpdFR5cGUSB2ludGVnZXISMQoZQ29tcG9zZWREaXNjVHlwZUluY29ycmVjdCoUCglmcnVpdFR5cGUSB2ludGVnZXISSQocQ29tcG9zZWREaXNjVHlwZUluY29uc2lzdGVudCoUCglmcnVpdFR5cGUSB2ludGVnZXIqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSTAogQ29tcG9zZWREaXNjUmVxdWlyZWRJbmNvbnNpc3RlbnQqEwoJZnJ1aXRUeXBlEgZzdHJpbmcqEwoJZnJ1aXRUeXBlEgZzdHJpbmcSYAoNR0VUX1Jlc3BvbnNlcxolR0VUX1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUXyooChQyMDAgYXBwbGljYXRpb24vanNvbhIORnJ1aXRBbGxPZkRpc2MYAxodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIl0KWwoBLxJWIlRCUhJQCgMyMDASSQpHCgRkZXNjGj8KPQoQYXBwbGljYXRpb24vanNvbhIpCicSJQojIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRBbGxPZkRpc2Mq6B8K5R8KOAoJRnJ1aXRUeXBlEisKKboBCWZydWl0VHlwZfoBGgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCtIBCg9GcnVpdElubGluZURpc2MSvgEKuwESCwoJZnJ1aXRUeXBl2gFTClG6AQVzZWVkc7oBCWZydWl0VHlwZcoBBm9iamVjdPoBMQoVCgVzZWVkcxIMCgrKAQdpbnRlZ2VyChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmfaAVUKU7oBBmxlbmd0aLoBCWZydWl0VHlwZcoBBm9iamVjdPoBMgoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCvoBChVGcnVpdElubGluZUlubGluZURpc2MS4AEK3QESCwoJZnJ1aXRUeXBl2gFkCmK6AQVzZWVkc8oBBm9iamVjdNoBNAoyugEJZnJ1aXRUeXBlygEGb2JqZWN0+gEaChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmf6ARcKFQoFc2VlZHMSDAoKygEHaW50ZWdlctoBZgpkugEGbGVuZ3RoygEGb2JqZWN02gE0CjK6AQlmcnVpdFR5cGXKAQZvYmplY3T6ARoKGAoJZnJ1aXRUeXBlEgsKCcoBBnN0cmluZ/oBGAoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgpwCgxGcnVpdFJlcURpc2MSYApeEgsKCWZydWl0VHlwZdoBJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZVJlcURpc2PaASYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5hUmVxRGlzYwpjCgxBcHBsZVJlcURpc2MSUwpRugEFc2VlZHO6AQlmcnVpdFR5cGXKAQZvYmplY3T6ATEKFQoFc2VlZHMSDAoKygEHaW50ZWdlcgoYCglmcnVpdFR5cGUSCwoJygEGc3RyaW5nCmYKDUJhbmFuYVJlcURpc2MSVQpTugEGbGVuZ3RougEJZnJ1aXRUeXBlygEGb2JqZWN0+gEyChYKBmxlbmd0aBIMCgrKAQdpbnRlZ2VyChgKCWZydWl0VHlwZRILCgnKAQZzdHJpbmcKdgoORnJ1aXRBbGxPZkRpc2MSZApiEgsKCWZydWl0VHlwZdoBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZUFsbE9mRGlzY9oBKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFBbGxPZkRpc2MKZAoOQXBwbGVBbGxPZkRpc2MSUgpQugEFc2VlZHPKAQZvYmplY3TSASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKZwoPQmFuYW5hQWxsT2ZEaXNjElQKUroBBmxlbmd0aMoBBm9iamVjdNIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGX6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKdgoORnJ1aXRBbnlPZkRpc2MSZApiEgsKCWZydWl0VHlwZdoBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZUFueU9mRGlzY9oBKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFBbnlPZkRpc2MKZAoOQXBwbGVBbnlPZkRpc2MSUgpQugEFc2VlZHPKAQZvYmplY3TiASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKZwoPQmFuYW5hQW55T2ZEaXNjElQKUroBBmxlbmd0aMoBBm9iamVjdOIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGX6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKdgoORnJ1aXRPbmVPZkRpc2MSZApiEgsKCWZydWl0VHlwZdoBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZU9uZU9mRGlzY9oBKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFPbmVPZkRpc2MKZAoOQXBwbGVPbmVPZkRpc2MSUgpQugEFc2VlZHPKAQZvYmplY3TaASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKZwoPQmFuYW5hT25lT2ZEaXNjElQKUroBBmxlbmd0aMoBBm9iamVjdNoBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGX6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKMwoNRnJ1aXRUeXBlRW51bRIiCiDCAQgSBkFQUExFCsIBCRIHQkFOQU5BCsoBBnN0cmluZwrdAgoZRnJ1aXRPbmVPZkVudW1NYXBwaW5nRGlzYxK/Agq8AhKBAQoJZnJ1aXRUeXBlEnQKNwoFQVBQTEUSLiMvY29tcG9uZW50cy9zY2hlbWFzL0FwcGxlT25lT2ZFbnVtTWFwcGluZ0Rpc2MKOQoGQkFOQU5BEi8jL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFPbmVPZkVudW1NYXBwaW5nRGlzY7oBCWZydWl0VHlwZcoBBm9iamVjdNoBMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZU9uZU9mRW51bU1hcHBpbmdEaXNj2gEzEjEKLyMvY29tcG9uZW50cy9zY2hlbWFzL0JhbmFuYU9uZU9mRW51bU1hcHBpbmdEaXNj+gE1CjMKCWZydWl0VHlwZRImEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0ZydWl0VHlwZUVudW0KSgoZQXBwbGVPbmVPZkVudW1NYXBwaW5nRGlzYxItCiu6AQVzZWVkc8oBBm9iamVjdPoBFwoVCgVzZWVkcxIMCgrKAQdpbnRlZ2VyCk0KGkJhbmFuYU9uZU9mRW51bU1hcHBpbmdEaXNjEi8KLboBBmxlbmd0aMoBBm9iamVjdPoBGAoWCgZsZW5ndGgSDAoKygEHaW50ZWdlcgqIAQoURnJ1aXRHcmFuZHBhcmVudERpc2MScApuEgsKCWZydWl0VHlwZdoBLRIrCikjL2NvbXBvbmVudHMvc2NoZW1hcy9BcHBsZUdyYW5kcGFyZW50RGlzY9oBLhIsCiojL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmFHcmFuZHBhcmVudERpc2MKOgoGUGFyZW50EjAKLsoBBm9iamVjdNIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGUKZwoUQXBwbGVHcmFuZHBhcmVudERpc2MSTwpNugEFc2VlZHPKAQZvYmplY3TSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGFyZW50+gEXChUKBXNlZWRzEgwKCsoBB2ludGVnZXIKagoVQmFuYW5hR3JhbmRwYXJlbnREaXNjElEKT7oBBmxlbmd0aMoBBm9iamVjdNIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnT6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIKZQofQ29tcG9zZWREaXNjTWlzc2luZ05vUHJvcGVydGllcxJCCkASCwoJZnJ1aXRUeXBl2gEwEi4KLCMvY29tcG9uZW50cy9zY2hlbWFzL0Rpc2NNaXNzaW5nTm9Qcm9wZXJ0aWVzCiYKF0Rpc2NNaXNzaW5nTm9Qcm9wZXJ0aWVzEgsKCcoBBm9iamVjdAppCiFDb21wb3NlZERpc2NNaXNzaW5nRnJvbVByb3BlcnRpZXMSRApCEgsKCWZydWl0VHlwZdoBMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjTWlzc2luZ0Zyb21Qcm9wZXJ0aWVzCkMKGURpc2NNaXNzaW5nRnJvbVByb3BlcnRpZXMSJgokygEGb2JqZWN0+gEYChYKBmxlbmd0aBIMCgrKAQdpbnRlZ2VyCmUKH0NvbXBvc2VkRGlzY09wdGlvbmFsVHlwZUNvcnJlY3QSQgpAEgsKCWZydWl0VHlwZdoBMBIuCiwjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjT3B0aW9uYWxUeXBlQ29ycmVjdApDChdEaXNjT3B0aW9uYWxUeXBlQ29ycmVjdBIoCibKAQZvYmplY3T6ARoKGAoJZnJ1aXRUeXBlEgsKCcoBBnN0cmluZwppCiFDb21wb3NlZERpc2NPcHRpb25hbFR5cGVJbmNvcnJlY3QSRApCEgsKCWZydWl0VHlwZdoBMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjT3B0aW9uYWxUeXBlSW5jb3JyZWN0CkYKGURpc2NPcHRpb25hbFR5cGVJbmNvcnJlY3QSKQonygEGb2JqZWN0+gEbChkKCWZydWl0VHlwZRIMCgrKAQdpbnRlZ2VyCp8BCiRDb21wb3NlZERpc2NPcHRpb25hbFR5cGVJbmNvbnNpc3RlbnQSdwp1EgsKCWZydWl0VHlwZdoBMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjT3B0aW9uYWxUeXBlSW5jb3JyZWN02gEwEi4KLCMvY29tcG9uZW50cy9zY2hlbWFzL0Rpc2NPcHRpb25hbFR5cGVDb3JyZWN0ClkKGUNvbXBvc2VkRGlzY1R5cGVJbmNvcnJlY3QSPAo6EgsKCWZydWl0VHlwZdoBKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjVHlwZUluY29ycmVjdApKChFEaXNjVHlwZUluY29ycmVjdBI1CjO6AQlmcnVpdFR5cGXKAQZvYmplY3T6ARsKGQoJZnJ1aXRUeXBlEgwKCsoBB2ludGVnZXIKgQEKHENvbXBvc2VkRGlzY1R5cGVJbmNvbnNpc3RlbnQSYQpfEgsKCWZydWl0VHlwZdoBKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjVHlwZUluY29ycmVjdNoBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdFR5cGUKiwEKIENvbXBvc2VkRGlzY1JlcXVpcmVkSW5jb25zaXN0ZW50EmcKZRILCglmcnVpdFR5cGXaATASLgosIy9jb21wb25lbnRzL3NjaGVtYXMvRGlzY09wdGlvbmFsVHlwZUNvcnJlY3TaASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRnJ1aXRUeXBl')),
);

/// From: 3_0/issue_5381.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_5381 = (
  model: surface.Model.fromBuffer(base64Decode('CgxCeVJlZk9yVmFsdWUSKwoLQWRkcmVzc2FibGUqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcSTQoKRXh0ZW5zaWJsZSoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEmcKBkVudGl0eSoOCgRocmVmEgZzdHJpbmcqDAoCaWQSBnN0cmluZyoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEpMBCglFbnRpdHlSZWYqDgoEbmFtZRIGc3RyaW5nKhcKDUByZWZlcnJlZFR5cGUSBnN0cmluZyoOCgRocmVmEgZzdHJpbmcqDAoCaWQSBnN0cmluZyoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEowBCgNGb28qEgoIZm9vUHJvcEESBnN0cmluZyoSCghmb29Qcm9wQhIGc3RyaW5nKg4KBGhyZWYSBnN0cmluZyoMCgJpZBIGc3RyaW5nKhkKD0BzY2hlbWFMb2NhdGlvbhIGc3RyaW5nKhMKCUBiYXNlVHlwZRIGc3RyaW5nKg8KBUB0eXBlEgZzdHJpbmcSpwEKBkZvb1JlZioVCgtmb29yZWZQcm9wQRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoXCg1AcmVmZXJyZWRUeXBlEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxK1AgoNRm9vUmVmT3JWYWx1ZSoSCghmb29Qcm9wQRIGc3RyaW5nKhIKCGZvb1Byb3BCEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZyoVCgtmb29yZWZQcm9wQRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoXCg1AcmVmZXJyZWRUeXBlEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxIiCgYyMDFGb28qGAoFdmFsdWUSDUZvb1JlZk9yVmFsdWUYAxInCgsyMDBGb29BcnJheSoYCgV2YWx1ZRINRm9vUmVmT3JWYWx1ZRgCEi4KA0ZvbyonCh5hcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgSA0ZvbxgDElkKE0dldEFsbEZvb3NSZXNwb25zZXMaMUdldEFsbEZvb3NSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldEFsbEZvb3MqDxILMjAwRm9vQXJyYXkYAxJfChNDcmVhdGVGb29QYXJhbWV0ZXJzGjFDcmVhdGVGb29QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQ3JlYXRlRm9vKhUKDHJlcXVlc3RfYm9keRIDRm9vGAMSUQoSQ3JlYXRlRm9vUmVzcG9uc2VzGi9DcmVhdGVGb29SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIENyZWF0ZUZvbyoKEgYyMDFGb28YAxo4CgpnZXRBbGxGb29zEgQvZm9vGgNHRVQqCkdldEFsbEZvb3NSE0dldEFsbEZvb3NSZXNwb25zZXMaSwoJY3JlYXRlRm9vEgQvZm9vGgRQT1NUKglDcmVhdGVGb29KE0NyZWF0ZUZvb1BhcmFtZXRlcnNSEkNyZWF0ZUZvb1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJHCgxCeVJlZk9yVmFsdWUSMFRoaXMgdGVzdHMgZm9yIGEgb25lT2YgaW50ZXJmYWNlIHJlcHJlc2VudGF0aW9uCjIFMC4wLjEaFwoVaHR0cDovL2xvY2FsaG9zdDo4MDgwIs4BCssBCgQvZm9vEsIBIlAKA0ZvbxIMR0VUIGFsbCBGb29zKgpnZXRBbGxGb29zQi8SLQoDMjAwEiYSJAoiIy9jb21wb25lbnRzL3Jlc3BvbnNlcy8yMDBGb29BcnJheTJuCgNGb28SDENyZWF0ZSBhIEZvbyoJY3JlYXRlRm9vOiISIAoeIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvRm9vQioSKAoDMjAxEiESHwodIy9jb21wb25lbnRzL3Jlc3BvbnNlcy8yMDFGb28q0AwK/gkKYgoGRW50aXR5ElgKVsoBBm9iamVjdNIBJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRyZXNzYWJsZdIBIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9FeHRlbnNpYmxlCsICCglFbnRpdHlSZWYStAIKsQLKAQZvYmplY3TSASQSIgogIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkcmVzc2FibGXSASMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvRXh0ZW5zaWJsZfoBmgEKMQoEbmFtZRIpCifKAQZzdHJpbmeSAhtOYW1lIG9mIHRoZSByZWxhdGVkIGVudGl0eS4KZQoNQHJlZmVycmVkVHlwZRJUClLKAQZzdHJpbmeSAkZUaGUgYWN0dWFsIHR5cGUgb2YgdGhlIHRhcmdldCBpbnN0YW5jZSB3aGVuIG5lZWRlZCBmb3IgZGlzYW1iaWd1YXRpb24ukgI6RW50aXR5IHJlZmVyZW5jZSBzY2hlbWEgdG8gYmUgdXNlIGZvciBhbGwgZW50aXR5UmVmIGNsYXNzLgqYAQoLQWRkcmVzc2FibGUSiAEKhQHKAQZvYmplY3T6AVIKKQoEaHJlZhIhCh/KAQZzdHJpbmeSAhNIeXBlcmxpbmsgcmVmZXJlbmNlCiUKAmlkEh8KHcoBBnN0cmluZ5ICEXVuaXF1ZSBpZGVudGlmaWVykgIkQmFzZSBzY2hlbWEgZm9yIGFkZHJlc3NhYmxlIGVudGl0aWVzCrwCCgpFeHRlbnNpYmxlEq0CCqoCugEFQHR5cGXKAQZvYmplY3T6AZUCCnEKD0BzY2hlbWFMb2NhdGlvbhJeClzKAQZzdHJpbmeSAlBBIFVSSSB0byBhIEpTT04tU2NoZW1hIGZpbGUgdGhhdCBkZWZpbmVzIGFkZGl0aW9uYWwgYXR0cmlidXRlcyBhbmQgcmVsYXRpb25zaGlwcwpKCglAYmFzZVR5cGUSPQo7ygEGc3RyaW5nkgIvV2hlbiBzdWItY2xhc3NpbmcsIHRoaXMgZGVmaW5lcyB0aGUgc3VwZXItY2xhc3MKVAoFQHR5cGUSSwpJygEGc3RyaW5nkgI9V2hlbiBzdWItY2xhc3NpbmcsIHRoaXMgZGVmaW5lcyB0aGUgc3ViLWNsYXNzIEV4dGVuc2libGUgbmFtZQqyAQoNRm9vUmVmT3JWYWx1ZRKgAQqdARJRCgVAdHlwZRJICh8KA0ZvbxIYIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vCiUKBkZvb1JlZhIbIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vUmVmygEGb2JqZWN02gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0Zvb9oBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb29SZWYKaQoDRm9vEmIKYMoBBm9iamVjdNIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9FbnRpdHn6ATIKFwoIZm9vUHJvcEESCwoJygEGc3RyaW5nChcKCGZvb1Byb3BCEgsKCcoBBnN0cmluZwpZCgZGb29SZWYSTwpNygEGb2JqZWN00gEiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0VudGl0eVJlZvoBHAoaCgtmb29yZWZQcm9wQRILCgnKAQZzdHJpbmcS5AEKFAoDMjA0Eg0KCwoHRGVsZXRlZBoAClMKBjIwMUZvbxJJCkcKBUVycm9yGj4KPAoQYXBwbGljYXRpb24vanNvbhIoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vUmVmT3JWYWx1ZQp3CgsyMDBGb29BcnJheRJoCmYKB1N1Y2Nlc3MaWwpZCh5hcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgSNwo1CjPKAQVhcnJhefIBKAomEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0Zvb1JlZk9yVmFsdWUqZgpkCgNGb28SXQpbChVUaGUgRm9vIHRvIGJlIGNyZWF0ZWQSQgpACh5hcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0ZvbzoFCgNGb28=')),
);

/// From: 3_0/issue7356.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue7356 = (
  model: surface.Model.fromBuffer(base64Decode('CghNeSB0aXRsZRIlChRBcnJheVdpdGhWYWxpZGF0aW9ucxABIgtpbnRlcmZhY2V7fQ==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIhCghNeSB0aXRsZRIOQVBJIHVuZGVyIHRlc3QyBTEuMC43Gh0KG2h0dHBzOi8vbG9jYWxob3N0Ojk5OTkvcm9vdCIAKjAKLgosChRBcnJheVdpdGhWYWxpZGF0aW9ucxIUChKYAQHKAQVhcnJhefIBBAoCCgA=')),
);

/// From: 3_0/form-multipart-binary-array.yaml
final OpenApiProto<v3.Document> fixtures_3_0_form_multipart_binary_array = (
  model: surface.Model.fromBuffer(base64Decode('ChJNdWx0aXBhcnRGaWxlIHRlc3QSRwoUTXVsdGlwYXJ0TWl4ZWRTdGF0dXMqLwoFdmFsdWUSBnN0cmluZ1IHQUxMT1dFRFILSU5fUFJPR1JFU1NSCFJFSkVDVEVEEkkKLG11bHRpcGFydEFycmF5UmVxdWVzdEJvZHltdWx0aXBhcnQvZm9ybS1kYXRhKhkKBWZpbGVzEgZzdHJpbmcYAiIGYmluYXJ5EmIKGW11bHRpcGFydEFycmF5UmVxdWVzdEJvZHkqRQoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRIsbXVsdGlwYXJ0QXJyYXlSZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEYAxKEAQoYTXVsdGlwYXJ0QXJyYXlQYXJhbWV0ZXJzGjtNdWx0aXBhcnRBcnJheVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBNdWx0aXBhcnRBcnJheSorCgxyZXF1ZXN0X2JvZHkSGW11bHRpcGFydEFycmF5UmVxdWVzdEJvZHkYAxJHCi1tdWx0aXBhcnRTaW5nbGVSZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEqFgoEZmlsZRIGc3RyaW5nIgZiaW5hcnkSZAoabXVsdGlwYXJ0U2luZ2xlUmVxdWVzdEJvZHkqRgoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRItbXVsdGlwYXJ0U2luZ2xlUmVxdWVzdEJvZHltdWx0aXBhcnQvZm9ybS1kYXRhGAMSiAEKGU11bHRpcGFydFNpbmdsZVBhcmFtZXRlcnMaPU11bHRpcGFydFNpbmdsZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBNdWx0aXBhcnRTaW5nbGUqLAoMcmVxdWVzdF9ib2R5EhptdWx0aXBhcnRTaW5nbGVSZXF1ZXN0Qm9keRgDEhgKBm1hcmtlcioOCgRuYW1lEgZzdHJpbmcSowEKLG11bHRpcGFydE1peGVkUmVxdWVzdEJvZHltdWx0aXBhcnQvZm9ybS1kYXRhKiAKBnN0YXR1cxIUTXVsdGlwYXJ0TWl4ZWRTdGF0dXMYAyoSCgZtYXJrZXISBm1hcmtlchgDKhYKBGZpbGUSBnN0cmluZyIGYmluYXJ5KiUKC3N0YXR1c0FycmF5EhRNdWx0aXBhcnRNaXhlZFN0YXR1cxgCEmIKGW11bHRpcGFydE1peGVkUmVxdWVzdEJvZHkqRQoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRIsbXVsdGlwYXJ0TWl4ZWRSZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEYAxKEAQoYTXVsdGlwYXJ0TWl4ZWRQYXJhbWV0ZXJzGjtNdWx0aXBhcnRNaXhlZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBNdWx0aXBhcnRNaXhlZCorCgxyZXF1ZXN0X2JvZHkSGW11bHRpcGFydE1peGVkUmVxdWVzdEJvZHkYAxpsCg5tdWx0aXBhcnRBcnJheRIQL211bHRpcGFydC1hcnJheRoEUE9TVCIYTXVsdGlwYXJ0RmlsZSBhcnJheSB0ZXN0Kg5NdWx0aXBhcnRBcnJheUoYTXVsdGlwYXJ0QXJyYXlQYXJhbWV0ZXJzGnEKD211bHRpcGFydFNpbmdsZRIRL211bHRpcGFydC1zaW5nbGUaBFBPU1QiGVNpbmdsZSBNdWx0aXBhcnRGaWxlIHRlc3QqD011bHRpcGFydFNpbmdsZUoZTXVsdGlwYXJ0U2luZ2xlUGFyYW1ldGVycxpsCg5tdWx0aXBhcnRNaXhlZBIQL211bHRpcGFydC1taXhlZBoEUE9TVCIYTWl4ZWQgTXVsdGlwYXJ0RmlsZSB0ZXN0Kg5NdWx0aXBhcnRNaXhlZEoYTXVsdGlwYXJ0TWl4ZWRQYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIbChJNdWx0aXBhcnRGaWxlIHRlc3QyBTEuMC4wItUGCtoBChAvbXVsdGlwYXJ0LWFycmF5EsUBMsIBCgltdWx0aXBhcnQaGE11bHRpcGFydEZpbGUgYXJyYXkgdGVzdCoObXVsdGlwYXJ0QXJyYXk6aApmEmQKYgoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRJLCkkKR8oBBm9iamVjdPoBOwo5CgVmaWxlcxIwCi7KAQVhcnJhefIBFgoUChLKAQZzdHJpbmeaAgZiaW5hcnmSAgpNYW55IGZpbGVzQiESHwoDMjA0EhgKFgoUU3VjY2Vzc2Z1bCBvcGVyYXRpb24KywEKES9tdWx0aXBhcnQtc2luZ2xlErUBMrIBCgltdWx0aXBhcnQaGVNpbmdsZSBNdWx0aXBhcnRGaWxlIHRlc3QqD211bHRpcGFydFNpbmdsZTpWClQSUgpQChNtdWx0aXBhcnQvZm9ybS1kYXRhEjkKNwo1ygEGb2JqZWN0+gEpCicKBGZpbGUSHwodygEGc3RyaW5nkgIIT25lIGZpbGWaAgZiaW5hcnlCIRIfCgMyMDQSGAoWChRTdWNjZXNzZnVsIG9wZXJhdGlvbgqnAwoQL211bHRpcGFydC1taXhlZBKSAzKPAwoJbXVsdGlwYXJ0GhhNaXhlZCBNdWx0aXBhcnRGaWxlIHRlc3QqDm11bHRpcGFydE1peGVkOrQCCrECEq4CCqsCChNtdWx0aXBhcnQvZm9ybS1kYXRhEpMCCpACCo0CugEGc3RhdHVzugEEZmlsZcoBBm9iamVjdPoB8AEKNwoGc3RhdHVzEi0SKwopIy9jb21wb25lbnRzL3NjaGVtYXMvTXVsdGlwYXJ0TWl4ZWRTdGF0dXMKQQoGbWFya2VyEjcKNcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZ5ICEWFkZGl0aW9uYWwgb2JqZWN0CiUKBGZpbGUSHQobygEGc3RyaW5nkgIGYSBmaWxlmgIGYmluYXJ5CksKC3N0YXR1c0FycmF5EjwKOsoBBWFycmF58gEvCi0SKwopIy9jb21wb25lbnRzL3NjaGVtYXMvTXVsdGlwYXJ0TWl4ZWRTdGF0dXNCIRIfCgMyMDQSGAoWChRTdWNjZXNzZnVsIG9wZXJhdGlvbip7CnkKdwoUTXVsdGlwYXJ0TWl4ZWRTdGF0dXMSXwpdOgsSCVJFSkVDVEVECsIBChIIQUxMT1dFRArCAQ4SDElOX1BST0dSRVNTCsIBCxIJUkVKRUNURUQKygEGc3RyaW5nkgIYYWRkaXRpb25hbCBmaWVsZCBhcyBFbnVt')),
);

/// From: 3_0/ping-array-default.yaml
final OpenApiProto<v3.Document> fixtures_3_0_ping_array_default = (
  model: surface.Model.fromBuffer(base64Decode('CglwaW5nIHRlc3QSNQoPQW5BcnJheU9mU3RyaW5nKiIKFmFycmF5V2l0aEFEZWZhdWx0VmFsdWUSBnN0cmluZxgCEmoKEFBpbmdHZXRSZXNwb25zZXMaK1BpbmdHZXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBpbmdHZXQqKQoUMjAxIGFwcGxpY2F0aW9uL2pzb24SD0FuQXJyYXlPZlN0cmluZxgDGjAKB3BpbmdHZXQSBS9waW5nGgNHRVQqB1BpbmdHZXRSEFBpbmdHZXRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglwaW5nIHRlc3QyAzEuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwMDAvImkKZwoFL3BpbmcSXiJcKgdwaW5nR2V0QlESTwoDMjAxEkgKRgoCT0saQAo+ChBhcHBsaWNhdGlvbi9qc29uEioKKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9BbkFycmF5T2ZTdHJpbmcqXgpcCloKD0FuQXJyYXlPZlN0cmluZxJHCkXKAQZvYmplY3T6ATkKNwoWYXJyYXlXaXRoQURlZmF1bHRWYWx1ZRIdChvKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmeKAgA=')),
);

/// From: 3_0/issue_7651.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7651 = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/issue_14432.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_14432 = (
  model: surface.Model.fromBuffer(base64Decode('CgtEZW1vIG1vZGVscxKGAQoNQ29tcGxleE9iamVjdCoMCgJpZBIGc3RyaW5nKh0KC3Byb2JhYmlsaXR5EgZudW1iZXIiBmRvdWJsZSoXCgVkYXRlcxIGc3RyaW5nGAIiBGRhdGUqLwoKc3ltYm9sVHlwZRIGc3RyaW5nUgdTWU1CT0wxUgdTWU1CT0wyUgdTWU1CT0wzEigKDENvbXBsZXhBcnJheSoYCgV2YWx1ZRINQ29tcGxleE9iamVjdBgC')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxISCgtEZW1vIG1vZGVsczIDMS4wIgAqlQIKkgIKyAEKDUNvbXBsZXhPYmplY3QStgEKswHKAQZvYmplY3T6AaYBChEKAmlkEgsKCcoBBnN0cmluZwojCgtwcm9iYWJpbGl0eRIUChLKAQZudW1iZXKaAgZkb3VibGUKKgoFZGF0ZXMSIQofygEFYXJyYXnyARQKEgoQygEGc3RyaW5nmgIEZGF0ZQpACgpzeW1ib2xUeXBlEjIKMMIBChIIU1lNQk9MMQrCAQoSCFNZTUJPTDIKwgEKEghTWU1CT0wzCsoBBnN0cmluZwpFCgxDb21wbGV4QXJyYXkSNQozygEFYXJyYXnyASgKJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9Db21wbGV4T2JqZWN0')),
);

/// From: 3_0/conflictingParameter.yaml
final OpenApiProto<v3.Document> fixtures_3_0_conflicting_parameter = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEqwBCiRjcmVhdGVSZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEqFAoCaWQSB2ludGVnZXIiBWludDMyKhgKBnBhdGhpZBIHaW50ZWdlciIFaW50MzIqGwoJaGVhZGVySWQyEgdpbnRlZ2VyIgVpbnQzMiobCgljb29raWVJZDISB2ludGVnZXIiBWludDMyKhoKCHF1ZXJ5SWQyEgdpbnRlZ2VyIgVpbnQzMhJSChFjcmVhdGVSZXF1ZXN0Qm9keSo9ChNtdWx0aXBhcnQvZm9ybS1kYXRhEiRjcmVhdGVSZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEYAxLCAQoQQ3JlYXRlUGFyYW1ldGVycxorQ3JlYXRlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZSoWCgJpZBIHaW50ZWdlciIFaW50MzIoBCoWCgJpZBIHaW50ZWdlciIFaW50MzIoASoUCgJpZBIHaW50ZWdlciIFaW50MzIqFgoCaWQSB2ludGVnZXIiBWludDMyKAMqIwoMcmVxdWVzdF9ib2R5EhFjcmVhdGVSZXF1ZXN0Qm9keRgDGjMKBmNyZWF0ZRIJL3BldC97aWR9GgRQT1NUKgZDcmVhdGVKEENyZWF0ZVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIZChBPcGVuQVBJIFBldHN0b3JlMgUxLjAuMCKuAwqrAwoJL3BldC97aWR9Ep0DMpoDKgZjcmVhdGUyJAoiCgJpZBIEcGF0aCABUhQKEsoBB2ludGVnZXKaAgVpbnQzMjIkCiIKAmlkEgZoZWFkZXJSFAoSygEHaW50ZWdlcpoCBWludDMyMiQKIgoCaWQSBmNvb2tpZVIUChLKAQdpbnRlZ2VymgIFaW50MzIyIwohCgJpZBIFcXVlcnlSFAoSygEHaW50ZWdlcpoCBWludDMyOtgBCtUBEtIBCs8BChNtdWx0aXBhcnQvZm9ybS1kYXRhErcBCrQBCrEBygEGb2JqZWN0+gGkAQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50MzIKHgoGcGF0aGlkEhQKEsoBB2ludGVnZXKaAgVpbnQzMgohCgloZWFkZXJJZDISFAoSygEHaW50ZWdlcpoCBWludDMyCiEKCWNvb2tpZUlkMhIUChLKAQdpbnRlZ2VymgIFaW50MzIKIAoIcXVlcnlJZDISFAoSygEHaW50ZWdlcpoCBWludDMyQh4SHAoDNDAwEhUKEwoRSW52YWxpZCBwZXQgdmFsdWU=')),
);

/// From: 3_0/13942_schema_enum_names.yaml
final OpenApiProto<v3.Document> fixtures_3_0_13942_schema_enum_names = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0EjMKClN0cmluZ0VudW0qJQoFdmFsdWUSBnN0cmluZ1IJJyMzNjdCOUMnUgknI0ZGQTVBNCc=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIWCgRUZXN0Mg4xLjAuMC1TTkFQU0hPVCIAKjsKOQo3CgpTdHJpbmdFbnVtEikKJ8IBDBIKJyMzNjdCOUMnCsIBDBIKJyNGRkE1QTQnCsoBBnN0cmluZw==')),
);

/// From: 3_0/removeAnyOfOneOfAndKeepPropertiesOnly_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_remove_any_of_one_of_and_keep_properties_only_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEoABCgZQZXJzb24qDAoCaWQSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhIKCG5pY2tOYW1lEgZzdHJpbmcqFQoLc3BlY2lhbE5hbWUSBnN0cmluZyoUCgpoaWRkZW5OYW1lEgZzdHJpbmcSTwoOTGlzdFBhcmFtZXRlcnMaJ0xpc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gTGlzdCoUCghwZXJzb25JZBIGc3RyaW5nKAQSWAoNTGlzdFJlc3BvbnNlcxolTGlzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTGlzdCogChQyMDAgYXBwbGljYXRpb24vanNvbhIGUGVyc29uGAMaTAoEbGlzdBIaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0aA0dFVCoETGlzdEoOTGlzdFBhcmFtZXRlcnNSDUxpc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqKAgqHAgqEAgoGUGVyc29uEvkBCvYBygEGb2JqZWN04gEQCg66AQtzcGVjaWFsTmFtZeIBDwoNugEKaGlkZGVuTmFtZfoBlgEKEQoCaWQSCwoJygEGc3RyaW5nChcKCGxhc3ROYW1lEgsKCcoBBnN0cmluZwoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5nChcKCG5pY2tOYW1lEgsKCcoBBnN0cmluZwoaCgtzcGVjaWFsTmFtZRILCgnKAQZzdHJpbmcKGQoKaGlkZGVuTmFtZRILCgnKAQZzdHJpbmeSAitwZXJzb24gdXNpbmcgYW55T2Ygd2l0aCByZXF1aXJlZCBwcm9wZXJ0aWVz')),
);

/// From: 3_0/schema-unalias-test.yml
final OpenApiProto<v3.Document> fixtures_3_0_schema_unalias_test = (
  model: surface.Model.fromBuffer(base64Decode('ChFBcGkgRG9jdW1lbnRhdGlvbhI7Chl1cGRhdGVQZXRXaXRoRm9ybV9yZXF1ZXN0Kh4KCXZpc2l0RGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUSYAocdXBkYXRlUGV0V2l0aEZvcm1SZXF1ZXN0Qm9keSpACiFhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQSGXVwZGF0ZVBldFdpdGhGb3JtX3JlcXVlc3QYAxKoAQobVXBkYXRlUGV0V2l0aEZvcm1QYXJhbWV0ZXJzGkFVcGRhdGVQZXRXaXRoRm9ybVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBVcGRhdGVQZXRXaXRoRm9ybSoWCgRkYXRlEgZzdHJpbmciBGRhdGUoBCouCgxyZXF1ZXN0X2JvZHkSHHVwZGF0ZVBldFdpdGhGb3JtUmVxdWVzdEJvZHkYAxpwChF1cGRhdGVQZXRXaXRoRm9ybRIOL3RoaW5neS97ZGF0ZX0aBFBPU1QiFXVwZGF0ZSB3aXRoIGZvcm0gZGF0YSoRVXBkYXRlUGV0V2l0aEZvcm1KG1VwZGF0ZVBldFdpdGhGb3JtUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIzChFBcGkgRG9jdW1lbnRhdGlvbhIZVGVzdCBzY2hlbWEgdW5hbGlhcyB0eXBlczIDMS4wGgMKAS8ilwIKlAIKDi90aGluZ3kve2RhdGV9EoECMv4BGhV1cGRhdGUgd2l0aCBmb3JtIGRhdGEqEXVwZGF0ZVBldFdpdGhGb3JtMlUKUwoEZGF0ZRIEcGF0aBoVQSBkYXRlIHBhdGggcGFyYW1ldGVyIAE6BnNpbXBsZVIkCiI6DRILMjAyMS0wMS0wMQrKAQZzdHJpbmeKAgCaAgRkYXRlOl8KXRJbClkKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBI0CjISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvdXBkYXRlUGV0V2l0aEZvcm1fcmVxdWVzdEIaEhgKAzQwNRIRCg8KDUludmFsaWQgaW5wdXQqdwp1CnMKGXVwZGF0ZVBldFdpdGhGb3JtX3JlcXVlc3QSVgpUygEGb2JqZWN0+gFICkYKCXZpc2l0RGF0ZRI5CjfKAQZzdHJpbmeKAgCSAhxVcGRhdGVkIGxhc3QgdmlzaXQgdGltZXN0YW1wmgIJZGF0ZS10aW1l')),
);

/// From: 3_0/parameter-test-spec.yaml
final OpenApiProto<v3.Document> fixtures_3_0_parameter_test_spec = (
  model: surface.Model.fromBuffer(base64Decode('Cg9UZXN0IHBhcmFtZXRlcnMSxQQKGkZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzGj9GaW5kUGV0c0J5U3RhdHVzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEZpbmRQZXRzQnlTdGF0dXMqGQoNcXVlcnlfZGVmYXVsdBIGc3RyaW5nKAMqJwoScXVlcnlfZGVmYXVsdF9lbnVtEgZzdHJpbmcoA1IBQVIBQlIBQyokChFxdWVyeV9kZWZhdWx0X2ludBIGbnVtYmVyIgVpbnQzMigDKhoKDmhlYWRlcl9kZWZhdWx0EgZzdHJpbmcoASooChNoZWFkZXJfZGVmYXVsdF9lbnVtEgZzdHJpbmcoAVIBQVIBQlIBQyolChJoZWFkZXJfZGVmYXVsdF9pbnQSBm51bWJlciIFaW50MzIoASoYCgxwYXRoX2RlZmF1bHQSBnN0cmluZygEKhgKDmNvb2tpZV9kZWZhdWx0EgZzdHJpbmcqJgoTY29va2llX2RlZmF1bHRfZW51bRIGc3RyaW5nUgFBUgFCUgFDKiMKEmNvb2tpZV9kZWZhdWx0X2ludBIGbnVtYmVyIgVpbnQzMioaCg5xdWVyeV9udWxsYWJsZRIGc3RyaW5nKAMqGwoPaGVhZGVyX251bGxhYmxlEgZzdHJpbmcoASoZCg1wYXRoX251bGxhYmxlEgZzdHJpbmcoBCoZCg9jb29raWVfbnVsbGFibGUSBnN0cmluZyofChMkcXVlcnktJGRvbGxhci1zaWduEgZzdHJpbmcoAxq7AQoQZmluZFBldHNCeVN0YXR1cxIvL3Rlc3QvcGFyYW1ldGVycy97cGF0aF9kZWZhdWx0fS97cGF0aF9udWxsYWJsZX0aA0dFVCJDTXVsdGlwbGUgc3RhdHVzIHZhbHVlcyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncyoQRmluZFBldHNCeVN0YXR1c0oaRmluZFBldHNCeVN0YXR1c1BhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJpCg9UZXN0IHBhcmFtZXRlcnMSD3Rlc3QgcGFyYW1ldGVycyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wItgKCtUKCi8vdGVzdC9wYXJhbWV0ZXJzL3twYXRoX2RlZmF1bHR9L3twYXRoX251bGxhYmxlfRKhCiKeCgoHZGVmYXVsdBIURmluZHMgUGV0cyBieSBzdGF0dXMaQ011bHRpcGxlIHN0YXR1cyB2YWx1ZXMgY2FuIGJlIHByb3ZpZGVkIHdpdGggY29tbWEgc2VwYXJhdGVkIHN0cmluZ3MqEGZpbmRQZXRzQnlTdGF0dXMySgpICg1xdWVyeV9kZWZhdWx0EgVxdWVyeRoNcXVlcnkgZGVmYXVsdCgBOgRmb3JtUhkKF8oBBnN0cmluZ4oCCxoJYXZhaWxhYmxlMlkKVwoScXVlcnlfZGVmYXVsdF9lbnVtEgVxdWVyeRoScXVlcnkgZGVmYXVsdCBlbnVtUiYKJMIBBBICQQrCAQQSAkIKwgEEEgJDCsoBBnN0cmluZ4oCAxoBQjJQCk4KEXF1ZXJ5X2RlZmF1bHRfaW50EgVxdWVyeRoRcXVlcnkgZGVmYXVsdCBpbnRSHwodygEGbnVtYmVyigIJCQAAAAAAAAhAmgIFaW50MzIyRQpDCg5oZWFkZXJfZGVmYXVsdBIGaGVhZGVyGg5oZWFkZXIgZGVmYXVsdFIZChfKAQZzdHJpbmeKAgsaCWF2YWlsYWJsZTJcCloKE2hlYWRlcl9kZWZhdWx0X2VudW0SBmhlYWRlchoTaGVhZGVyIGRlZmF1bHQgZW51bVImCiTCAQQSAkEKwgEEEgJCCsIBBBICQwrKAQZzdHJpbmeKAgMaAUIyUwpRChJoZWFkZXJfZGVmYXVsdF9pbnQSBmhlYWRlchoSaGVhZGVyIGRlZmF1bHQgaW50Uh8KHcoBBm51bWJlcooCCQkAAAAAAAAIQJoCBWludDMyMjMKMQoMcGF0aF9kZWZhdWx0EgRwYXRoGgxwYXRoIGRlZmF1bHQgAVILCgnKAQZzdHJpbmcyRQpDCg5jb29raWVfZGVmYXVsdBIGY29va2llGg5jb29raWUgZGVmYXVsdFIZChfKAQZzdHJpbmeKAgsaCWF2YWlsYWJsZTJcCloKE2Nvb2tpZV9kZWZhdWx0X2VudW0SBmNvb2tpZRoTY29va2llIGRlZmF1bHQgZW51bVImCiTCAQQSAkEKwgEEEgJCCsIBBBICQwrKAQZzdHJpbmeKAgMaAUIyUwpRChJjb29raWVfZGVmYXVsdF9pbnQSBmNvb2tpZRoSY29va2llIGRlZmF1bHQgaW50Uh8KHcoBBm51bWJlcooCCQkAAAAAAAAIQJoCBWludDMyMkAKPgoOcXVlcnlfbnVsbGFibGUSBXF1ZXJ5Gg5xdWVyeSBudWxsYWJsZSgBOgRmb3JtUg0KCwgBygEGc3RyaW5nMjsKOQoPaGVhZGVyX251bGxhYmxlEgZoZWFkZXIaD2hlYWRlciBudWxsYWJsZVINCgsIAcoBBnN0cmluZzI1CjMKDXBhdGhfbnVsbGFibGUSBHBhdGgaDXBhdGhfbnVsbGFibGUgAVILCgnKAQZzdHJpbmcyOwo5Cg9jb29raWVfbnVsbGFibGUSBmNvb2tpZRoPY29va2llX251bGxhYmxlUg0KCwgBygEGc3RyaW5nMk0KSwoTJHF1ZXJ5LSRkb2xsYXItc2lnbhIFcXVlcnkaIHF1ZXJ5IHBhcmFtZXRlciB3aXRoIGRvbGxhciBzaWduUgsKCcoBBnN0cmluZ0JCEh8KAzIwMBIYChYKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uEh8KAzQwMBIYChYKFEludmFsaWQgc3RhdHVzIHZhbHVl')),
);

/// From: 3_0/issue677.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue677 = (
  model: surface.Model.fromBuffer(base64Decode('CghNeSB0aXRsZRIrCgtSZXF1ZXN0Qm9keSocChBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcYAhJzChdQT1NUX2lzc3VlNjc3UGFyYW1ldGVycxo5UE9TVF9pc3N1ZTY3N1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX2lzc3VlNjc3Kh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxo5EgkvaXNzdWU2NzcaBFBPU1QqDVBPU1RfaXNzdWU2NzdKF1BPU1RfaXNzdWU2NzdQYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIhCghNeSB0aXRsZRIOQVBJIHVuZGVyIHRlc3QyBTEuMC43Gh0KG2h0dHBzOi8vbG9jYWxob3N0Ojk5OTkvcm9vdCJaClgKCS9pc3N1ZTY3NxJLMkk6Ngo0EjIKMAoQYXBwbGljYXRpb24vanNvbhIcChoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZ0IPEg0KAzIwMRIGCgQKAk9LKgA=')),
);

/// From: 3_0/issue7506.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue7506 = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEl8KKWRlc2NyaXB0aW9uUmVxdWVzdEJvZHltdWx0aXBhcnQvZm9ybS1kYXRhKhcKBXN1cGVyEgZzdHJpbmciBmJpbmFyeSoZCgdwYWNrYWdlEgZzdHJpbmciBmJpbmFyeRJcChZkZXNjcmlwdGlvblJlcXVlc3RCb2R5KkIKE211bHRpcGFydC9mb3JtLWRhdGESKWRlc2NyaXB0aW9uUmVxdWVzdEJvZHltdWx0aXBhcnQvZm9ybS1kYXRhGAMSeAoVRGVzY3JpcHRpb25QYXJhbWV0ZXJzGjVEZXNjcmlwdGlvblBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBEZXNjcmlwdGlvbiooCgxyZXF1ZXN0X2JvZHkSFmRlc2NyaXB0aW9uUmVxdWVzdEJvZHkYAxpFCgtkZXNjcmlwdGlvbhIML2V4YW1wbGUvYXBpGgRQT1NUKgtEZXNjcmlwdGlvbkoVRGVzY3JpcHRpb25QYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIZCgdFeGFtcGxlEgdFeGFtcGxlMgUxLjAuMCKzAQqwAQoML2V4YW1wbGUvYXBpEp8BMpwBEgdzdW1tYXJ5KgtkZXNjcmlwdGlvbjptCmsSaQpnChNtdWx0aXBhcnQvZm9ybS1kYXRhElAKTgpMygEGb2JqZWN0+gFACh0KBXN1cGVyEhQKEsoBBnN0cmluZ5oCBmJpbmFyeQofCgdwYWNrYWdlEhQKEsoBBnN0cmluZ5oCBmJpbmFyeUIVEhMKAzIwMBIMCgoKCHJlc3BvbnNl')),
);

/// From: 3_0/allOf_extension_parent.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_extension_parent = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEkMKBlBlcnNvbioQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nElcKBUFkdWx0KhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqEwoIY2hpbGRyZW4SBUNoaWxkGAISWQoFQ2hpbGQqFQoDYWdlEgdpbnRlZ2VyIgVpbnQzMioQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nEjoKDUFub3RoZXJQYXJlbnQqEwoIaXNQYXJlbnQSB2Jvb2xlYW4qFAoKbXVtX29yX2RhZBIGc3RyaW5nEnUKDUFub3RoZXJQZXJzb24qEAoGJF90eXBlEgZzdHJpbmcqEgoIbGFzdE5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyoTCghpc1BhcmVudBIHYm9vbGVhbioUCgptdW1fb3JfZGFkEgZzdHJpbmcSiwEKDEFub3RoZXJDaGlsZCoVCgNhZ2USB2ludGVnZXIiBWludDMyKhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqEwoIaXNQYXJlbnQSB2Jvb2xlYW4qFAoKbXVtX29yX2RhZBIGc3RyaW5nEmsKE2FsbE9mV2l0aFByb3BlcnRpZXMqEwoIaXNQYXJlbnQSB2Jvb2xlYW4qFAoKbXVtX29yX2RhZBIGc3RyaW5nKhMKCGlzUGFyZW50Egdib29sZWFuKhQKCm11bV9vcl9kYWQSBnN0cmluZxJAChNhbGxPZldpdGhTaW5nbGVJdGVtKhMKCGlzUGFyZW50Egdib29sZWFuKhQKCm11bV9vcl9kYWQSBnN0cmluZxJPCg5MaXN0UGFyYW1ldGVycxonTGlzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBMaXN0KhQKCHBlcnNvbklkEgZzdHJpbmcoBBJYCg1MaXN0UmVzcG9uc2VzGiVMaXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbir1CQryCQrBAQoGUGVyc29uErYBCrMBygEGb2JqZWN0+gFKChUKBiRfdHlwZRILCgnKAQZzdHJpbmcKFwoIbGFzdE5hbWUSCwoJygEGc3RyaW5nChgKCWZpcnN0TmFtZRILCgnKAQZzdHJpbmeSAkBwZXJzb24gdXNpbmcgeC1wYXJlbnQgKGFic3RyYWN0KSB0byBpbmRpY2F0ZSBpdCdzIGEgcGFyZW50IGNsYXNzogIXCgh4LXBhcmVudBILEglhYnN0cmFjdAoKmgEKBUFkdWx0EpABCo0B0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbtIBSQpHygEGb2JqZWN0+gE7CjkKCGNoaWxkcmVuEi0KK8oBBWFycmF58gEgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGSSAhxBIHJlcHJlc2VudGF0aW9uIG9mIGFuIGFkdWx0CnkKBUNoaWxkEnAKbtIBKwopygEGb2JqZWN0+gEdChsKA2FnZRIUChLKAQdpbnRlZ2VymgIFaW50MzLSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGVyc29ukgIbQSByZXByZXNlbnRhdGlvbiBvZiBhIGNoaWxkCqwBCgxBbm90aGVyQ2hpbGQSmwEKmAHSASsKKcoBBm9iamVjdPoBHQobCgNhZ2USFAoSygEHaW50ZWdlcpoCBWludDMy0gEmEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0Fub3RoZXJQZXJzb26SAj5hbm90aGVyIGNoaWxkIGNsYXNzIHRoYXQgZG9lcyBOT1QgZXh0ZW5kL2luaGVyaXQgQW5vdGhlclBlcnNvbgrEAQoNQW5vdGhlclBlcnNvbhKyAQqvAcoBBm9iamVjdNIBTwpN+gFKChUKBiRfdHlwZRILCgnKAQZzdHJpbmcKFwoIbGFzdE5hbWUSCwoJygEGc3RyaW5nChgKCWZpcnN0TmFtZRILCgnKAQZzdHJpbmfSASYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvQW5vdGhlclBhcmVudJICKHBlcnNvbiBvYmplY3Qgd2l0aG91dCB4LXBhcmVudCBleHRlbnNpb24KfwoNQW5vdGhlclBhcmVudBJuCmzKAQZvYmplY3T6ATUKGAoIaXNQYXJlbnQSDAoKygEHYm9vbGVhbgoZCgptdW1fb3JfZGFkEgsKCcoBBnN0cmluZ5ICKHBhcmVudCBvYmplY3Qgd2l0aG91dCB4LXBhcmVudCBleHRlbnNpb24KuwEKE2FsbE9mV2l0aFByb3BlcnRpZXMSowEKoAG6AQhpc1BhcmVudMoBBm9iamVjdNIBJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9Bbm90aGVyUGFyZW50+gE1ChgKCGlzUGFyZW50EgwKCsoBB2Jvb2xlYW4KGQoKbXVtX29yX2RhZBILCgnKAQZzdHJpbmeSAihwYXJlbnQgb2JqZWN0IHdpdGhvdXQgeC1wYXJlbnQgZXh0ZW5zaW9uCl8KE2FsbE9mV2l0aFNpbmdsZUl0ZW0SSApGCAHSASYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvQW5vdGhlclBhcmVudJICGGFsbE9mIHdpdGggYSBzaW5nbGUgaXRlbQ==')),
);

/// From: 3_0/oneOf_reuseRef.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_reuse_ref = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEi0KBUFwcGxlKhIKCGN1bHRpdmFyEgZzdHJpbmcqEAoGb3JpZ2luEgZzdHJpbmcSHAoGQmFuYW5hKhIKCGxlbmd0aENtEgZudW1iZXISZwoFRnJ1aXQqEgoIY3VsdGl2YXISBnN0cmluZyoQCgZvcmlnaW4SBnN0cmluZyoSCghjdWx0aXZhchIGc3RyaW5nKhAKBm9yaWdpbhIGc3RyaW5nKhIKCGxlbmd0aENtEgZudW1iZXISZgoSR2V0X2ZydWl0UmVzcG9uc2VzGi9HZXRfZnJ1aXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldF9mcnVpdCofChQyMDAgYXBwbGljYXRpb24vanNvbhIFRnJ1aXQYAxo5CglnZXRfZnJ1aXQSCC9leGFtcGxlGgNHRVQqCUdldF9mcnVpdFISR2V0X2ZydWl0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJkCmIKCC9leGFtcGxlElYiVCoJZ2V0X2ZydWl0QkcSRQoDMjAwEj4KPAoCT0saNgo0ChBhcHBsaWNhdGlvbi9qc29uEiAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9GcnVpdCqgAwqdAwppCgVBcHBsZRJgCl4IAcoBBm9iamVjdPoBUAonCghjdWx0aXZhchIbChmKAQ1eW2EtekEtWlxzXSokygEGc3RyaW5nCiUKBm9yaWdpbhIbChmKAQ0vXltBLVpcc10qJC9pygEGc3RyaW5nCjEKBkJhbmFuYRInCiXKAQZvYmplY3T6ARkKFwoIbGVuZ3RoQ20SCwoJygEGbnVtYmVyCvwBCgVGcnVpdBLyAQrvARKIAQoJZnJ1aXRUeXBlEnsKKQoLZ3JlZW5fYXBwbGUSGiMvY29tcG9uZW50cy9zY2hlbWFzL0FwcGxlCiUKBmJhbmFuYRIbIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5hCicKCXJlZF9hcHBsZRIaIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGXaAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGXaAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGXaAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5h')),
);

/// From: 3_0/container-type-import.yaml
final OpenApiProto<v3.Document> fixtures_3_0_container_type_import = (
  model: surface.Model.fromBuffer(base64Decode('CgtFeGFtcGxlIEFQSRJDChRNb2RlbFdpdGhTZXRQcm9wZXJ0eSoMCgJpZBIGc3RyaW5nKh0KDHNldF9wcm9wZXJ0eRILU2ltcGxlTW9kZWwYAhJHChZNb2RlbFdpdGhBcnJheVByb3BlcnR5KgwKAmlkEgZzdHJpbmcqHwoOYXJyYXlfcHJvcGVydHkSC1NpbXBsZU1vZGVsGAISQQoMbWFwX3Byb3BlcnR5KjEKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIWbWFwW3N0cmluZ11TaW1wbGVNb2RlbBgBEkQKFE1vZGVsV2l0aE1hcFByb3BlcnR5KgwKAmlkEgZzdHJpbmcqHgoMbWFwX3Byb3BlcnR5EgxtYXBfcHJvcGVydHkYAxIzCgtTaW1wbGVNb2RlbCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEmgKDUdFVF9SZXNwb25zZXMaJUdFVF9SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF8qMAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFk1vZGVsV2l0aEFycmF5UHJvcGVydHkYAhodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIUCgtFeGFtcGxlIEFQSTIFMy4wLjAi0AEKzQEKAS8SxwEixAESC0VtcHR5IFJvdXRlQrQBEnMKAzIwMBJsCmoKDUdvb2QgUmVxdWVzdC4aWQpXChBhcHBsaWNhdGlvbi9qc29uEkMKQQo/oAEBygEFYXJyYXnyATEKLxItCisjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbFdpdGhBcnJheVByb3BlcnR5EhcKAzQwMBIQCg4KDEJhZCBSZXF1ZXN0LhIkCgM0MDMSHQobChlGb3JiaWRkZW4uIEFjY2VzcyBkZW5pZWQuKvADCu0DCoEBChRNb2RlbFdpdGhTZXRQcm9wZXJ0eRJpCmfKAQZvYmplY3T6AVsKEQoCaWQSCwoJygEGc3RyaW5nCkYKDHNldF9wcm9wZXJ0eRI2CjSgAQHKAQVhcnJhefIBJgokEiIKICMvY29tcG9uZW50cy9zY2hlbWFzL1NpbXBsZU1vZGVsCoIBChZNb2RlbFdpdGhBcnJheVByb3BlcnR5EmgKZsoBBm9iamVjdPoBWgoRCgJpZBILCgnKAQZzdHJpbmcKRQoOYXJyYXlfcHJvcGVydHkSMwoxygEFYXJyYXnyASYKJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9TaW1wbGVNb2RlbAp2ChRNb2RlbFdpdGhNYXBQcm9wZXJ0eRJeClzKAQZvYmplY3T6AVAKEQoCaWQSCwoJygEGc3RyaW5nCjsKDG1hcF9wcm9wZXJ0eRIrCimCAiYKJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9TaW1wbGVNb2RlbApqCgtTaW1wbGVNb2RlbBJbClk6ExIRbmFtZTogUHVtYQppZDogMQq6AQRuYW1lygEGb2JqZWN0+gExChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoTCgRuYW1lEgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/pingSomeObj.yaml
final OpenApiProto<v3.Document> fixtures_3_0_ping_some_obj = (
  model: surface.Model.fromBuffer(base64Decode('ChBwaW5nIHNvbWUgb2JqZWN0EncKB1NvbWVPYmoqIwoGJF90eXBlEgZzdHJpbmdSEVNvbWVPYmpJZGVudGlmaWVyKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqEQoGYWN0aXZlEgdib29sZWFuKg4KBHR5cGUSBnN0cmluZxI0ChNwb3N0UGluZ1JlcXVlc3RCb2R5Kh0KEGFwcGxpY2F0aW9uL2pzb24SB1NvbWVPYmoYAxJsChJQb3N0UGluZ1BhcmFtZXRlcnMaL1Bvc3RQaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3RQaW5nKiUKDHJlcXVlc3RfYm9keRITcG9zdFBpbmdSZXF1ZXN0Qm9keRgDEmUKEVBvc3RQaW5nUmVzcG9uc2VzGi1Qb3N0UGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFBpbmcqIQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB1NvbWVPYmoYAxpICghwb3N0UGluZxIFL3BpbmcaBFBPU1QqCFBvc3RQaW5nShJQb3N0UGluZ1BhcmFtZXRlcnNSEVBvc3RQaW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXChBwaW5nIHNvbWUgb2JqZWN0MgMxLjAaGAoWaHR0cDovL2xvY2FsaG9zdDo4MDgyLyKpAQqmAQoFL3BpbmcSnAEymQEKBHBpbmcqCHBvc3RQaW5nOjwKOhI4CjYKEGFwcGxpY2F0aW9uL2pzb24SIgogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVPYmpCSRJHCgMyMDASQAo+CgJPSxo4CjYKEGFwcGxpY2F0aW9uL2pzb24SIgogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVPYmoqxAEKwQEKvgEKB1NvbWVPYmoSsgEKrwHKAQZvYmplY3T6AaIBCkIKBiRfdHlwZRI4CjbCARQSElNvbWVPYmpJZGVudGlmaWVyCsoBBnN0cmluZ4oCExoRU29tZU9iaklkZW50aWZpZXIKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0ChMKBG5hbWUSCwoJygEGc3RyaW5nChYKBmFjdGl2ZRIMCgrKAQdib29sZWFuChMKBHR5cGUSCwoJygEGc3RyaW5n')),
);

/// From: 3_0/type-alias.yaml
final OpenApiProto<v3.Document> fixtures_3_0_type_alias = (
  model: surface.Model.fromBuffer(base64Decode('Ci9BUEkgdXNpbmcgYSB0eXBlQWxpYXMgbWFwcGVkIHdpdGggaW1wb3J0TWFwcGluZxImCgpQYXJlbnRUeXBlKhgKCXR5cGVBbGlhcxIJVHlwZUFsaWFzGAMSHAoJVHlwZUFsaWFzKg8KBXZhbHVlEgZzdHJpbmcSegoXR0VUX3R5cGUtYWxpYXNSZXNwb25zZXMaOUdFVF90eXBlLWFsaWFzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfdHlwZS1hbGlhcyokChQyMDAgYXBwbGljYXRpb24vanNvbhIKUGFyZW50VHlwZRgDGjsSCy90eXBlLWFsaWFzGgNHRVQqDkdFVF90eXBlLWFsaWFzUhdHRVRfdHlwZS1hbGlhc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJ7Ci9BUEkgdXNpbmcgYSB0eXBlQWxpYXMgbWFwcGVkIHdpdGggaW1wb3J0TWFwcGluZxJBU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9PcGVuQVBJVG9vbHMvb3BlbmFwaS1nZW5lcmF0b3IvaXNzdWVzLzM1ODkyBTEuMC4wImEKXwoLL3R5cGUtYWxpYXMSUCJOQkwSSgoDMjAwEkMKQQoCT0saOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9QYXJlbnRUeXBlKncKdQpZCgpQYXJlbnRUeXBlEksKSUoKUGFyZW50VHlwZcoBBm9iamVjdPoBMQovCgl0eXBlQWxpYXMSIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9UeXBlQWxpYXMKGAoJVHlwZUFsaWFzEgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_8906.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_8906 = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/response-tests.yaml
final OpenApiProto<v3.Document> fixtures_3_0_response_tests = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlErUBCgVPcmRlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqFwoFcGV0SWQSB2ludGVnZXIiBWludDY0KhoKCHF1YW50aXR5EgdpbnRlZ2VyIgVpbnQzMiodCghzaGlwRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqLQoGc3RhdHVzEgZzdHJpbmdSBnBsYWNlZFIIYXBwcm92ZWRSCWRlbGl2ZXJlZCoTCghjb21wbGV0ZRIHYm9vbGVhbhIwCghDYXRlZ29yeSoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEq0BCgRVc2VyKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoSCgh1c2VybmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqDwoFZW1haWwSBnN0cmluZyoSCghwYXNzd29yZBIGc3RyaW5nKg8KBXBob25lEgZzdHJpbmcqHAoKdXNlclN0YXR1cxIHaW50ZWdlciIFaW50MzISKwoDVGFnKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSlQEKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqDQoEdGFncxIDVGFnGAIqKgoGc3RhdHVzEgZzdHJpbmdSCWF2YWlsYWJsZVIHcGVuZGluZ1IEc29sZBJICgtBcGlSZXNwb25zZSoWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioOCgR0eXBlEgZzdHJpbmcqEQoHbWVzc2FnZRIGc3RyaW5nEicKCVVzZXJBcnJheSoaChBhcHBsaWNhdGlvbi9qc29uEgRVc2VyGAISOgoDUGV0KhkKEGFwcGxpY2F0aW9uL2pzb24SA1BldBgDKhgKD2FwcGxpY2F0aW9uL3htbBIDUGV0GAMSXwoTVXBkYXRlUGV0UGFyYW1ldGVycxoxVXBkYXRlUGV0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwZGF0ZVBldCoVCgxyZXF1ZXN0X2JvZHkSA1BldBgDEqkBChJVcGRhdGVQZXRSZXNwb25zZXMaL1VwZGF0ZVBldFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVXBkYXRlUGV0KhwKEzIwMCBhcHBsaWNhdGlvbi94bWwSA1BldBgDKh0KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAyolChQ0MDAgYXBwbGljYXRpb24vanNvbhILQXBpUmVzcG9uc2UYAxJWChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0KhUKDHJlcXVlc3RfYm9keRIDUGV0GAMSeQoPQWRkUGV0UmVzcG9uc2VzGilBZGRQZXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEFkZFBldCocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMSjQEKGkZpbmRQZXRzQnlTdGF0dXNQYXJhbWV0ZXJzGj9GaW5kUGV0c0J5U3RhdHVzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEZpbmRQZXRzQnlTdGF0dXMqLgoGc3RhdHVzEgZzdHJpbmcYAigDUglhdmFpbGFibGVSB3BlbmRpbmdSBHNvbGQSlwEKGUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMaPUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEZpbmRQZXRzQnlTdGF0dXMqHAoTMjAwIGFwcGxpY2F0aW9uL3htbBIDUGV0GAIqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgCEmsKGEZpbmRQZXRzQnlUYWdzUGFyYW1ldGVycxo7RmluZFBldHNCeVRhZ3NQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRmluZFBldHNCeVRhZ3MqEgoEdGFncxIGc3RyaW5nGAIoAxKRAQoXRmluZFBldHNCeVRhZ3NSZXNwb25zZXMaOUZpbmRQZXRzQnlUYWdzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBGaW5kUGV0c0J5VGFncyocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAiodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAISZgoUR2V0UGV0QnlJZFBhcmFtZXRlcnMaM0dldFBldEJ5SWRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0UGV0QnlJZCoZCgVwZXRJZBIHaW50ZWdlciIFaW50NjQoBBKzAQoTR2V0UGV0QnlJZFJlc3BvbnNlcxoxR2V0UGV0QnlJZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0UGV0QnlJZCocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMqLAobNTAwIGFwcGxpY2F0aW9uL2FwcGxpY2F0aW9uEgtBcGlSZXNwb25zZRgDEmEKPXVwZGF0ZVBldFdpdGhGb3JtUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQqDgoEbmFtZRIGc3RyaW5nKhAKBnN0YXR1cxIGc3RyaW5nEoQBChx1cGRhdGVQZXRXaXRoRm9ybVJlcXVlc3RCb2R5KmQKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBI9dXBkYXRlUGV0V2l0aEZvcm1SZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBgDEqsBChtVcGRhdGVQZXRXaXRoRm9ybVBhcmFtZXRlcnMaQVVwZGF0ZVBldFdpdGhGb3JtUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFVwZGF0ZVBldFdpdGhGb3JtKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEKi4KDHJlcXVlc3RfYm9keRIcdXBkYXRlUGV0V2l0aEZvcm1SZXF1ZXN0Qm9keRgDEngKE0RlbGV0ZVBldFBhcmFtZXRlcnMaMURlbGV0ZVBldFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBEZWxldGVQZXQqEwoHYXBpX2tleRIGc3RyaW5nKAEqGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAQSYAoodXBsb2FkRmlsZVJlcXVlc3RCb2R5bXVsdGlwYXJ0L2Zvcm0tZGF0YSocChJhZGRpdGlvbmFsTWV0YWRhdGESBnN0cmluZyoWCgRmaWxlEgZzdHJpbmciBmJpbmFyeRJaChV1cGxvYWRGaWxlUmVxdWVzdEJvZHkqQQoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRIodXBsb2FkRmlsZVJlcXVlc3RCb2R5bXVsdGlwYXJ0L2Zvcm0tZGF0YRgDEo8BChRVcGxvYWRGaWxlUGFyYW1ldGVycxozVXBsb2FkRmlsZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBVcGxvYWRGaWxlKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEKicKDHJlcXVlc3RfYm9keRIVdXBsb2FkRmlsZVJlcXVlc3RCb2R5GAMSbwoTVXBsb2FkRmlsZVJlc3BvbnNlcxoxVXBsb2FkRmlsZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVXBsb2FkRmlsZSolChQyMDAgYXBwbGljYXRpb24vanNvbhILQXBpUmVzcG9uc2UYAxJuChZHZXRPcmRlckJ5SWRQYXJhbWV0ZXJzGjdHZXRPcmRlckJ5SWRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0T3JkZXJCeUlkKhsKB29yZGVySWQSB2ludGVnZXIiBWludDY0KAQSjwEKFUdldE9yZGVyQnlJZFJlc3BvbnNlcxo1R2V0T3JkZXJCeUlkUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRPcmRlckJ5SWQqHgoTMjAwIGFwcGxpY2F0aW9uL3htbBIFT3JkZXIYAyofChQyMDAgYXBwbGljYXRpb24vanNvbhIFT3JkZXIYAxJjChVEZWxldGVPcmRlclBhcmFtZXRlcnMaNURlbGV0ZU9yZGVyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERlbGV0ZU9yZGVyKhMKB29yZGVySWQSBnN0cmluZygEEnQKE0xvZ2luVXNlclBhcmFtZXRlcnMaMUxvZ2luVXNlclBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBMb2dpblVzZXIqFAoIdXNlcm5hbWUSBnN0cmluZygDKhQKCHBhc3N3b3JkEgZzdHJpbmcoAxKEAQoSTG9naW5Vc2VyUmVzcG9uc2VzGi9Mb2dpblVzZXJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExvZ2luVXNlciodChMyMDAgYXBwbGljYXRpb24veG1sEgZzdHJpbmcqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxpKCgl1cGRhdGVQZXQSBC9wZXQaA1BVVCoJVXBkYXRlUGV0ShNVcGRhdGVQZXRQYXJhbWV0ZXJzUhJVcGRhdGVQZXRSZXNwb25zZXMaPwoGYWRkUGV0EgQvcGV0GgRQT1NUKgZBZGRQZXRKEEFkZFBldFBhcmFtZXRlcnNSD0FkZFBldFJlc3BvbnNlcxq4AQoQZmluZFBldHNCeVN0YXR1cxIRL3BldC9maW5kQnlTdGF0dXMaA0dFVCJDTXVsdGlwbGUgc3RhdHVzIHZhbHVlcyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncyoQRmluZFBldHNCeVN0YXR1c0oaRmluZFBldHNCeVN0YXR1c1BhcmFtZXRlcnNSGUZpbmRQZXRzQnlTdGF0dXNSZXNwb25zZXMayAEKDmZpbmRQZXRzQnlUYWdzEg8vcGV0L2ZpbmRCeVRhZ3MaA0dFVCJdTXVsdGlwbGUgdGFncyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncy4gVXNlIHRhZzEsIHRhZzIsIHRhZzMgZm9yIHRlc3RpbmcuKg5GaW5kUGV0c0J5VGFnc0oYRmluZFBldHNCeVRhZ3NQYXJhbWV0ZXJzUhdGaW5kUGV0c0J5VGFnc1Jlc3BvbnNlcxpsCgpnZXRQZXRCeUlkEgwvcGV0L3twZXRJZH0aA0dFVCIUUmV0dXJucyBhIHNpbmdsZSBwZXQqCkdldFBldEJ5SWRKFEdldFBldEJ5SWRQYXJhbWV0ZXJzUhNHZXRQZXRCeUlkUmVzcG9uc2VzGlcKEXVwZGF0ZVBldFdpdGhGb3JtEgwvcGV0L3twZXRJZH0aBFBPU1QqEVVwZGF0ZVBldFdpdGhGb3JtShtVcGRhdGVQZXRXaXRoRm9ybVBhcmFtZXRlcnMaQQoJZGVsZXRlUGV0EgwvcGV0L3twZXRJZH0aBkRFTEVURSoJRGVsZXRlUGV0ShNEZWxldGVQZXRQYXJhbWV0ZXJzGmMKCnVwbG9hZEZpbGUSGC9wZXQve3BldElkfS91cGxvYWRJbWFnZRoEUE9TVCoKVXBsb2FkRmlsZUoUVXBsb2FkRmlsZVBhcmFtZXRlcnNSE1VwbG9hZEZpbGVSZXNwb25zZXMaywEKDGdldE9yZGVyQnlJZBIWL3N0b3JlL29yZGVyL3tvcmRlcklkfRoDR0VUImFGb3IgdmFsaWQgcmVzcG9uc2UgdHJ5IGludGVnZXIgSURzIHdpdGggdmFsdWUgPD0gNSBvciA+IDEwLiBPdGhlciB2YWx1ZXMgd2lsbCBnZW5lcmF0ZSBleGNlcHRpb25zKgxHZXRPcmRlckJ5SWRKFkdldE9yZGVyQnlJZFBhcmFtZXRlcnNSFUdldE9yZGVyQnlJZFJlc3BvbnNlcxrEAQoLZGVsZXRlT3JkZXISFi9zdG9yZS9vcmRlci97b3JkZXJJZH0aBkRFTEVURSJxRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHZhbHVlIDwgMTAwMC4gQW55dGhpbmcgYWJvdmUgMTAwMCBvciBub25pbnRlZ2VycyB3aWxsIGdlbmVyYXRlIEFQSSBlcnJvcnMqC0RlbGV0ZU9yZGVyShVEZWxldGVPcmRlclBhcmFtZXRlcnMaUQoJbG9naW5Vc2VyEgsvdXNlci9sb2dpbhoDR0VUKglMb2dpblVzZXJKE0xvZ2luVXNlclBhcmFtZXRlcnNSEkxvZ2luVXNlclJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/setContainerToNullable_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_set_container_to_nullable_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEjwKDG1hcF9wcm9wZXJ0eSosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAEShwEKBlBlcnNvbioSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhoKDmFycmF5X3Byb3BlcnR5EgZzdHJpbmcYAioYCgxzZXRfcHJvcGVydHkSBnN0cmluZxgCKh4KDG1hcF9wcm9wZXJ0eRIMbWFwX3Byb3BlcnR5GAMSTwoOTGlzdFBhcmFtZXRlcnMaJ0xpc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gTGlzdCoUCghwZXJzb25JZBIGc3RyaW5nKAQSWAoNTGlzdFJlc3BvbnNlcxolTGlzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTGlzdCogChQyMDAgYXBwbGljYXRpb24vanNvbhIGUGVyc29uGAMSTAoNUHV0UGFyYW1ldGVycxolUHV0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFB1dCoUCghwZXJzb25JZBIGc3RyaW5nKAQSVQoMUHV0UmVzcG9uc2VzGiNQdXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFB1dCogChQyMDAgYXBwbGljYXRpb24vanNvbhIGUGVyc29uGAMSVQoQRGVsZXRlUGFyYW1ldGVycxorRGVsZXRlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIERlbGV0ZSoUCghwZXJzb25JZBIGc3RyaW5nKAQSXgoPRGVsZXRlUmVzcG9uc2VzGilEZWxldGVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIERlbGV0ZSogChQyMDAgYXBwbGljYXRpb24vanNvbhIGUGVyc29uGAMaTAoEbGlzdBIaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0aA0dFVCoETGlzdEoOTGlzdFBhcmFtZXRlcnNSDUxpc3RSZXNwb25zZXMaSAoDcHV0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDUFVUKgNQdXRKDVB1dFBhcmFtZXRlcnNSDFB1dFJlc3BvbnNlcxpXCgZkZWxldGUSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgZERUxFVEUqBkRlbGV0ZUoQRGVsZXRlUGFyYW1ldGVyc1IPRGVsZXRlUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSKhBAqeBAoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0S/wMipAEKBnBlcnNvbgoFYmFzaWMqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqcAQoGcGVyc29uKgNwdXQyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbjq2AQoGcGVyc29uKgZkZWxldGUyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbmoVCgp4LWludGVybmFsEgcSBXRydWUKKucBCuQBCuEBCgZQZXJzb24S1gEK0wHKAQZvYmplY3T6Ab0BChcKCGxhc3ROYW1lEgsKCcoBBnN0cmluZwoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5nCiwKDmFycmF5X3Byb3BlcnR5EhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZwotCgxzZXRfcHJvcGVydHkSHQoboAEBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCisKDG1hcF9wcm9wZXJ0eRIbChnKAQZvYmplY3SCAg0KCwoJygEGc3RyaW5nkgIGcGVyc29u')),
);

/// From: 3_0/arrayRefBody.yaml
final OpenApiProto<v3.Document> fixtures_3_0_array_ref_body = (
  model: surface.Model.fromBuffer(base64Decode('EkUKBUlucHV0KgwKAmlkEgZzdHJpbmcqFQoDYWdlEgdpbnRlZ2VyIgVpbnQzMioXCgJkdBIGc3RyaW5nIglkYXRlLXRpbWUSQQoiZ2V0RmlsdGVyZWRUcmFuc2FjdGlvbnNSZXF1ZXN0Qm9keSobChBhcHBsaWNhdGlvbi9qc29uEgVJbnB1dBgCEqgBCiFHZXRGaWx0ZXJlZFRyYW5zYWN0aW9uc1BhcmFtZXRlcnMaTUdldEZpbHRlcmVkVHJhbnNhY3Rpb25zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldEZpbHRlcmVkVHJhbnNhY3Rpb25zKjQKDHJlcXVlc3RfYm9keRIiZ2V0RmlsdGVyZWRUcmFuc2FjdGlvbnNSZXF1ZXN0Qm9keRgDGmYKF2dldEZpbHRlcmVkVHJhbnNhY3Rpb25zEgkvZXhhbXBsZXMaBFBPU1QqF0dldEZpbHRlcmVkVHJhbnNhY3Rpb25zSiFHZXRGaWx0ZXJlZFRyYW5zYWN0aW9uc1BhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIAItABCs0BCgkvZXhhbXBsZXMSvwEyvAEKCEV4YW1wbGVzEhpHZXQgYSBsaXN0IG9mIHRyYW5zYWN0aW9ucyoXZ2V0RmlsdGVyZWRUcmFuc2FjdGlvbnM6XwpdChRzdWJzY3JpcHRpb24gcGF5bG9hZBJFCkMKEGFwcGxpY2F0aW9uL2pzb24SLwotCivKAQVhcnJhefIBIAoeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0lucHV0QhoKGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbipqCmgKZgoFSW5wdXQSXQpbygEGb2JqZWN0+gFPChEKAmlkEgsKCcoBBnN0cmluZwobCgNhZ2USFAoSygEHaW50ZWdlcpoCBWludDMyCh0KAmR0EhcKFcoBBnN0cmluZ5oCCWRhdGUtdGltZQ==')),
);

/// From: 3_0/issue_8052_recursive_model.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_8052_recursive_model = (
  model: surface.Model.fromBuffer(base64Decode('ChpBUElUZXN0IEFQSSBkb2N1bWVudGF0aW9uLhJWCg9HZW9Kc29uR2VvbWV0cnkqIgoEdHlwZRIGc3RyaW5nUhJHZW9tZXRyeUNvbGxlY3Rpb24qHwoKZ2VvbWV0cmllcxIPR2VvSnNvbkdlb21ldHJ5GAISOAoFUG9pbnQqHwoLY29vcmRpbmF0ZXMSBm51bWJlchgCIgZkb3VibGUqDgoEdHlwZRIGc3RyaW5nEkUKEkdlb21ldHJ5Q29sbGVjdGlvbioOCgR0eXBlEgZzdHJpbmcqHwoKZ2VvbWV0cmllcxIPR2VvSnNvbkdlb21ldHJ5GAISQAoXcG9zdC1nZW9qc29uUmVxdWVzdEJvZHkqJQoQYXBwbGljYXRpb24vanNvbhIPR2VvSnNvbkdlb21ldHJ5GAMSfAoWUG9zdC1HZW9qc29uUGFyYW1ldGVycxo3UG9zdC1HZW9qc29uUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3QtR2VvanNvbiopCgxyZXF1ZXN0X2JvZHkSF3Bvc3QtZ2VvanNvblJlcXVlc3RCb2R5GAMSbgoVUG9zdC1HZW9qc29uUmVzcG9uc2VzGjVQb3N0LUdlb2pzb25SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBvc3QtR2VvanNvbioeChQyMDEgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGlsKDHBvc3QtZ2VvanNvbhIIL2dlb2pzb24aBFBPU1QqDFBvc3QtR2VvanNvbkoWUG9zdC1HZW9qc29uUGFyYW1ldGVyc1IVUG9zdC1HZW9qc29uUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJJChpBUElUZXN0IEFQSSBkb2N1bWVudGF0aW9uLhohaHR0cDovL2FwaS5hcGl0ZXN0LmNvbS9wYXJ0eS90b3MvMggwMS4wMS4wMBocChpodHRwczovL2FwaS5hcGl0ZXN0LmNvbS92MSLdAQraAQoIL2dlb2pzb24SzQEyygESFEFkZCBhIEdlb0pzb24gT2JqZWN0Kgxwb3N0LWdlb2pzb246RApCEkAKPgoQYXBwbGljYXRpb24vanNvbhIqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvR2VvSnNvbkdlb21ldHJ5Ql4SRAoDMjAxEj0KOwoHQ3JlYXRlZBowCi4KEGFwcGxpY2F0aW9uL2pzb24SGgoYChbKAQZzdHJpbmeSAgpHZW9Kc29uIElEEhYKAzQwMBIPCg0KC0JhZCBSZXF1ZXN0KqQGCqEGCvQBCg9HZW9Kc29uR2VvbWV0cnkS4AEK3QEyNxI1aHR0cDovL2dlb2pzb24ub3JnL2dlb2pzb24tc3BlYy5odG1sI2dlb21ldHJ5LW9iamVjdHNKD0dlb0pzb25HZW9tZXRyecoBBm9iamVjdPoBdAorCgR0eXBlEiMKIcIBFRITR2VvbWV0cnlDb2xsZWN0aW9uCsoBBnN0cmluZwpFCgpnZW9tZXRyaWVzEjcKNcoBBWFycmF58gEqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvR2VvSnNvbkdlb21ldHJ5kgIQR2VvSlNPTiBnZW9tZXRyeQqKAgoFUG9pbnQSgAIK/QEyKhIoaHR0cDovL2dlb2pzb24ub3JnL2dlb2pzb24tc3BlYy5odG1sI2lkMkoFUG9pbnS6AQR0eXBlygEGb2JqZWN0+gGjAQqBAQoLY29vcmRpbmF0ZXMScgpwMioSKGh0dHA6Ly9nZW9qc29uLm9yZy9nZW9qc29uLXNwZWMuaHRtbCNpZDJKB1BvaW50M0SQAQOYAQLKAQVhcnJhefIBFgoUChLKAQZudW1iZXKaAgZkb3VibGWSAhFQb2ludCBpbiAzRCBzcGFjZQodCgR0eXBlEhUKE8oBBnN0cmluZ4oCBxoFUG9pbnSSAhBHZW9KU09OIGdlb21ldHJ5CpoCChJHZW9tZXRyeUNvbGxlY3Rpb24SgwIKgAIyORI3aHR0cDovL2dlb2pzb24ub3JnL2dlb2pzb24tc3BlYy5odG1sI2dlb21ldHJ5Y29sbGVjdGlvbkoSR2VvbWV0cnlDb2xsZWN0aW9uugEEdHlwZboBCmdlb21ldHJpZXPKAQZvYmplY3T6AXMKKgoEdHlwZRIiCiDKAQZzdHJpbmeKAhQaEkdlb21ldHJ5Q29sbGVjdGlvbgpFCgpnZW9tZXRyaWVzEjcKNcoBBWFycmF58gEqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvR2VvSnNvbkdlb21ldHJ5kgIbR2VvSlNvbiBnZW9tZXRyeSBjb2xsZWN0aW9u')),
);

/// From: 3_0/issue_7372.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7372 = (
  model: surface.Model.fromBuffer(base64Decode('CgNmb28SLAoBQSonChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSDG1hcFtzdHJpbmddQhgBEhIKAUIQASILaW50ZXJmYWNle30=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIMCgNmb28yBTEuMC4wIgAqVApSCi8KAUESKgooygEGb2JqZWN0ggIcChoSGAoWIy9jb21wb25lbnRzL3NjaGVtYXMvQgofCgFCEhoKGMoBBWFycmF58gENCgsKCcoBBm9iamVjdA==')),
);

/// From: 3_0/issue12545.json
final OpenApiProto<v3.Document> fixtures_3_0_issue12545 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEhoKA0RvZyoTCgR0eXBlEgZzdHJpbmdSA2RvZxIaCgNDYXQqEwoEdHlwZRIGc3RyaW5nUgNjYXQSMAoEcGV0cyoTCgR0eXBlEgZzdHJpbmdSA2RvZyoTCgR0eXBlEgZzdHJpbmdSA2NhdBIbCglIb3VzZWhvbGQqDgoEcGV0cxIEcGV0cxgCElsKDUdFVF9SZXNwb25zZXMaJUdFVF9SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF8qIwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCUhvdXNlaG9sZBgDGjoSAS8aA0dFVCIbZ2V0IGFsbCBwZXRzIGluIGEgaG91c2Vob2xkKgRHRVRfUg1HRVRfUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIZChBPcGVuQVBJIFBldHN0b3JlMgUxLjAuMCKGAQqDAQoBLxJ+InwaG2dldCBhbGwgcGV0cyBpbiBhIGhvdXNlaG9sZEJdElsKAzIwMBJUClIKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGjoKOAoQYXBwbGljYXRpb24vanNvbhIkCiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvSG91c2Vob2xkKqACCp0CCpgBCglIb3VzZWhvbGQSigEKhwFKCUhvdXNlaG9sZLoBBHBldHPKAQZvYmplY3T6AWkKZwoEcGV0cxJfCl1KBHBldHPKAQVhcnJhefIBTApKCkhKCHBldEl0ZW1z2gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0RvZ9oBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9DYXQKPwoDRG9nEjgKNkoDRG9nugEEdHlwZcoBBm9iamVjdPoBHgocCgR0eXBlEhQKEsIBBhIEZG9nCsoBBnN0cmluZwo/CgNDYXQSOAo2SgNDYXS6AQR0eXBlygEGb2JqZWN0+gEeChwKBHR5cGUSFAoSwgEGEgRjYXQKygEGc3RyaW5n')),
);

/// From: 3_0/exploded-query-param-array.yaml
final OpenApiProto<v3.Document> fixtures_3_0_exploded_query_param_array = (
  model: surface.Model.fromBuffer(base64Decode('ChpFeHBsb2RlZCBxdWVyeSBwYXJhbSBhcnJheRImCg9Tb21lUmV0dXJuVmFsdWUqEwoJc29tZVZhbHVlEgZzdHJpbmcSIQoLUXVlcnlPYmplY3QqEgoGdmFsdWVzEgZzdHJpbmcYAhJxChZHZXRTb21lVmFsdWVQYXJhbWV0ZXJzGjdHZXRTb21lVmFsdWVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR2V0U29tZVZhbHVlKh4KC1F1ZXJ5T2JqZWN0EgtRdWVyeU9iamVjdBgDKAMSeQoVR2V0U29tZVZhbHVlUmVzcG9uc2VzGjVHZXRTb21lVmFsdWVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFNvbWVWYWx1ZSopChQyMDAgYXBwbGljYXRpb24vanNvbhIPU29tZVJldHVyblZhbHVlGAMaVgoMR2V0U29tZVZhbHVlEgQvYXBpGgNHRVQqDEdldFNvbWVWYWx1ZUoWR2V0U29tZVZhbHVlUGFyYW1ldGVyc1IVR2V0U29tZVZhbHVlUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxI6ChpFeHBsb2RlZCBxdWVyeSBwYXJhbSBhcnJheRIVRXhwbG9kZWQgcXVlcnkgcGFyYW1zMgUxLjAuMBoQCg5sb2NhbGhvc3Q6ODA4MCLqAQrnAQoEL2FwaRLeASLbASoMR2V0U29tZVZhbHVlMlQKUgoLUXVlcnlPYmplY3QSBXF1ZXJ5OgRmb3JtQAFSNAoyygEGb2JqZWN0+gEmCiQKBnZhbHVlcxIaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmdCdRJzCgMyMDASbApqChFTb21lIHJldHVybiB2YWx1ZRpVClMKEGFwcGxpY2F0aW9uL2pzb24SPwooEiYKJCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVSZXR1cm5WYWx1ZRITEhFzb21lVmFsdWU6IHZhbHVlCipLCkkKRwoPU29tZVJldHVyblZhbHVlEjQKMroBCXNvbWVWYWx1ZcoBBm9iamVjdPoBGgoYCglzb21lVmFsdWUSCwoJygEGc3RyaW5n')),
);

/// From: 3_0/form-duplicated-parameter.yaml
final OpenApiProto<v3.Document> fixtures_3_0_form_duplicated_parameter = (
  model: surface.Model.fromBuffer(base64Decode('Ch9Gb3JtRGF0YSBUZXN0IEFwaSBEb2N1bWVudGF0aW9uEiYKDkZvcm1QYXJhbWV0ZXJzKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NBJLCiBmb3JtLXBhcmFtLXBvY191cGRhdGVSZXF1ZXN0Qm9keSonChNtdWx0aXBhcnQvZm9ybS1kYXRhEg5Gb3JtUGFyYW1ldGVycxgDErgBCh9Gb3JtLVBhcmFtLVBvY191cGRhdGVQYXJhbWV0ZXJzGklGb3JtLVBhcmFtLVBvY191cGRhdGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRm9ybS1QYXJhbS1Qb2NfdXBkYXRlKhYKAmlkEgdpbnRlZ2VyIgVpbnQ2NCgEKjIKDHJlcXVlc3RfYm9keRIgZm9ybS1wYXJhbS1wb2NfdXBkYXRlUmVxdWVzdEJvZHkYAxpqChVmb3JtLXBhcmFtLXBvY191cGRhdGUSFC9mb3JtLXBhcmFtLXBvYy97aWR9GgNQVVQqFUZvcm0tUGFyYW0tUG9jX3VwZGF0ZUofRm9ybS1QYXJhbS1Qb2NfdXBkYXRlUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJvCh9Gb3JtRGF0YSBUZXN0IEFwaSBEb2N1bWVudGF0aW9uEkVNaW5pbWFsIE9wZW5BUEkgc3BlYyBmaWxlIHRvIHNob3djYXNlIGR1cGxpY2F0ZWQgcGFyYW1zIGZvciBmb3JtRGF0YS4yBTAuMC4xGg8KDS9iYWNrZW5kL3Jlc3Qi5QEK4gEKFC9mb3JtLXBhcmFtLXBvYy97aWR9EskBKsYBCg5mb3JtLXBhcmFtLXBvYxIKZnVsbFVwZGF0ZSoVZm9ybS1wYXJhbS1wb2NfdXBkYXRlMiQKIgoCaWQSBHBhdGggAVIUChLKAQdpbnRlZ2VymgIFaW50NjQ6RgpEEkIKQAoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRIpCicSJQojIy9jb21wb25lbnRzL3NjaGVtYXMvRm9ybVBhcmFtZXRlcnNCEBIOCgMyMDASBwoFCgNPSy5aEQoPCgtvQXV0aENvbmZpZxIAKn4KQAo+Cg5Gb3JtUGFyYW1ldGVycxIsCirKAQZvYmplY3T6AR4KHAoCaWQSFgoUGAHKAQdpbnRlZ2VymgIFaW50NjQ6Ogo4CgtvQXV0aENvbmZpZxIpCicKBm9hdXRoMjodChsKFy4uL2JhY2tlbmQvbG9naW4vb3BlbmlkIgA6SQoOZm9ybS1wYXJhbS1wb2MSN0ZpbGUgc3RvcmFnZSByZXNvdXJjZSBmb3IgRmlzY2FsaXphdGlvbiBGcmFuY2Ugc3RhbmRhcmQ=')),
);

/// From: 3_0/issue8352.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue8352 = (
  model: surface.Model.fromBuffer(base64Decode('Cil0ZXN0IGhhbmRsZSBvZiBmcmVlIGZvcm0gcXVlcnkgcGFyYW1ldGVycxIaCglmcmVlLWZvcm0QASILaW50ZXJmYWNle30SfAobR0VUX3NvbWVfZW5kcG9pbnRQYXJhbWV0ZXJzGkFHRVRfc29tZV9lbmRwb2ludFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfc29tZV9lbmRwb2ludCoaCglmcmVlLWZvcm0SCWZyZWUtZm9ybRgDKAMaRRIOL3NvbWUvZW5kcG9pbnQaA0dFVCoRR0VUX3NvbWVfZW5kcG9pbnRKG0dFVF9zb21lX2VuZHBvaW50UGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIyCil0ZXN0IGhhbmRsZSBvZiBmcmVlIGZvcm0gcXVlcnkgcGFyYW1ldGVyczIFMC4wLjEaEgoQaHR0cDovL2xvY2FsaG9zdCJSClAKDi9zb21lL2VuZHBvaW50Ej4iPDInCiUKCWZyZWUtZm9ybRIFcXVlcnk6BGZvcm1SCwoJygEGb2JqZWN0QhESDwoDMjAwEggKBgoEdGVzdA==')),
);

/// From: 3_0/property-deprecated.yaml
final OpenApiProto<v3.Document> fixtures_3_0_property_deprecated = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEjYKB1JlcXVlc3QqFgoMY3VzdG9tZXJDb2RlEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcSNwoIUmVzcG9uc2UqFgoMY3VzdG9tZXJDb2RlEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcSLAoLUmVxdWVzdEJvZHkqHQoQYXBwbGljYXRpb24vanNvbhIHUmVxdWVzdBgDEogBCh5QT1NUX2RlcHJlY2F0ZWQtdGVzdFBhcmFtZXRlcnMaR1BPU1RfZGVwcmVjYXRlZC10ZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBPU1RfZGVwcmVjYXRlZC10ZXN0Kh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxKKAQodUE9TVF9kZXByZWNhdGVkLXRlc3RSZXNwb25zZXMaRVBPU1RfZGVwcmVjYXRlZC10ZXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2RlcHJlY2F0ZWQtdGVzdCoiChQyMDAgYXBwbGljYXRpb24vanNvbhIIUmVzcG9uc2UYAxptEhAvZGVwcmVjYXRlZC10ZXN0GgRQT1NUKhRQT1NUX2RlcHJlY2F0ZWQtdGVzdEoeUE9TVF9kZXByZWNhdGVkLXRlc3RQYXJhbWV0ZXJzUh1QT1NUX2RlcHJlY2F0ZWQtdGVzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLgAQrdAQoQL2RlcHJlY2F0ZWQtdGVzdBLIATKRATo8CjoSOAo2ChBhcHBsaWNhdGlvbi9qc29uEiIKIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9SZXF1ZXN0QlESTwoDMjAwEkgKRgoJcmVzcG9uc2VzGjkKNwoQYXBwbGljYXRpb24vanNvbhIjCiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvUmVzcG9uc2VyMgobeC1zd2FnZ2VyLXJvdXRlci1jb250cm9sbGVyEhMSES9kZXByZWNhdGVkLXRlc3QKKtYBCtMBCmcKB1JlcXVlc3QSXApaygEGb2JqZWN0+gFOCiYKDGN1c3RvbWVyQ29kZRIWChQ6CRIHIjAwMDEiCsoBBnN0cmluZwokCglmaXJzdE5hbWUSFwoVOggSBmZpcnN0CkABygEGc3RyaW5nCmgKCFJlc3BvbnNlElwKWsoBBm9iamVjdPoBTgomCgxjdXN0b21lckNvZGUSFgoUOgkSByIwMDAxIgrKAQZzdHJpbmcKJAoJZmlyc3ROYW1lEhcKFToIEgZmaXJzdApAAcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_10056.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_10056 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3Jl')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJmChBPcGVuQVBJIFBldHN0b3JlEgtzYW1wbGUgc3BlYyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGg8KDS9yZWxhdGl2ZS91cmwiACoECgA6AA==')),
);

/// From: 3_0/issue4808.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue4808 = (
  model: surface.Model.fromBuffer(base64Decode('CiNJc3N1ZSAxMTI0MiAtIGV4cGxvZGVkIHF1ZXJ5IHBhcmFtcxImCg9Tb21lUmV0dXJuVmFsdWUqEwoJc29tZVZhbHVlEgZzdHJpbmcSYgoLUXVlcnlPYmplY3QqDwoFc2luY2USBnN0cmluZyoUCgpzaW5jZUJ1aWxkEgZzdHJpbmcqFAoJbWF4QnVpbGRzEgdpbnRlZ2VyKhYKC21heFdhaXRTZWNzEgdpbnRlZ2VyEnEKFkdldFNvbWVWYWx1ZVBhcmFtZXRlcnMaN0dldFNvbWVWYWx1ZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRTb21lVmFsdWUqHgoLUXVlcnlPYmplY3QSC1F1ZXJ5T2JqZWN0GAMoAxJ5ChVHZXRTb21lVmFsdWVSZXNwb25zZXMaNUdldFNvbWVWYWx1ZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0U29tZVZhbHVlKikKFDIwMCBhcHBsaWNhdGlvbi9qc29uEg9Tb21lUmV0dXJuVmFsdWUYAxpWCgxHZXRTb21lVmFsdWUSBC9hcGkaA0dFVCoMR2V0U29tZVZhbHVlShZHZXRTb21lVmFsdWVQYXJhbWV0ZXJzUhVHZXRTb21lVmFsdWVSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJDCiNJc3N1ZSAxMTI0MiAtIGV4cGxvZGVkIHF1ZXJ5IHBhcmFtcxIVRXhwbG9kZWQgcXVlcnkgcGFyYW1zMgUxLjAuMBoQCg5sb2NhbGhvc3Q6ODA4MCKvAgqsAgoEL2FwaRKjAiKgAioMR2V0U29tZVZhbHVlMpgBCpUBCgtRdWVyeU9iamVjdBIFcXVlcnk6BGZvcm1AAVJ3CnXKAQZvYmplY3T6AWkKFAoFc2luY2USCwoJygEGc3RyaW5nChkKCnNpbmNlQnVpbGQSCwoJygEGc3RyaW5nChkKCW1heEJ1aWxkcxIMCgrKAQdpbnRlZ2VyChsKC21heFdhaXRTZWNzEgwKCsoBB2ludGVnZXJCdRJzCgMyMDASbApqChFTb21lIHJldHVybiB2YWx1ZRpVClMKEGFwcGxpY2F0aW9uL2pzb24SPwooEiYKJCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVSZXR1cm5WYWx1ZRITEhFzb21lVmFsdWU6IHZhbHVlCipLCkkKRwoPU29tZVJldHVyblZhbHVlEjQKMroBCXNvbWVWYWx1ZcoBBm9iamVjdPoBGgoYCglzb21lVmFsdWUSCwoJygEGc3RyaW5n')),
);

/// From: 3_0/issue_17376.json
final OpenApiProto<v3.Document> fixtures_3_0_issue_17376 = (
  model: surface.Model.fromBuffer(base64Decode('CgZNeSBBUEkaPgoNVjFHZXRBbGxVc2VycxIGL3VzZXJzGgNHRVQiEVJldHJpZXZlIGEgdXNlcnMuKg1WMUdldEFsbFVzZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIPCgZNeSBBUEkyBTEuMC4wIoUBCoIBCgYvdXNlcnMSeCJ2CgVVc2VycxINR2V0IGFsbCB1c2VycxoRUmV0cmlldmUgYSB1c2Vycy4qDVYxR2V0QWxsVXNlcnNCIBIeCgMyMDASFwoVChNTdWNjZXNzZnVsIHJlc3BvbnNlWhoKGAoUT3VyIElkZW50aXR5IHNlcnZpY2USACqfATqcAQqZAQoUT3VyIElkZW50aXR5IHNlcnZpY2USgAEKfgoNb3BlbklkQ29ubmVjdBIoVG8gYXV0aGVudGljYXRlIHlvdXIgY2FsbHMgdG8gdGhlIEFQSS4uLkJDaHR0cHM6Ly9pZC1zb21ldGhpbmcuc29tZXdoZXJlLmNvbS8ud2VsbC1rbm93bi9vcGVuaWQtY29uZmlndXJhdGlvbjIaChgKFE91ciBJZGVudGl0eSBzZXJ2aWNlEgA=')),
);

/// From: 3_0/two-responses.yaml
final OpenApiProto<v3.Document> fixtures_3_0_two_responses = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0EiYKFDIwMCBhcHBsaWNhdGlvbi9qc29uKg4KBHRlc3QSBnN0cmluZxImChQ0MjIgYXBwbGljYXRpb24vanNvbioOCgR0ZXN0EgZzdHJpbmcSogEKEUdFVF90ZXN0UmVzcG9uc2VzGi1HRVRfdGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX3Rlc3QqLgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFDIwMCBhcHBsaWNhdGlvbi9qc29uGAMqLgoUNDIyIGFwcGxpY2F0aW9uL2pzb24SFDQyMiBhcHBsaWNhdGlvbi9qc29uGAMaKRIFL3Rlc3QaA0dFVCoIR0VUX3Rlc3RSEUdFVF90ZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBINCgRUZXN0MgUxLjAuMBoOCgxodHRwOi8vdGVzdC8ixQEKwgEKBS90ZXN0ErgBIrUBEgRUZXN0QqwBEk8KAzIwMBJICkYKB1N1Y2Nlc3MaOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIwohygEGb2JqZWN0+gEVChMKBHRlc3QSCwoJygEGc3RyaW5nElkKAzQyMhJSClAKEVZhbGlkYXRpb24gZmFpbGVkGjsKOQoQYXBwbGljYXRpb24vanNvbhIlCiMKIcoBBm9iamVjdPoBFQoTCgR0ZXN0EgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_12196.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_12196 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3Jl')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBL2AQoQT3BlbkFQSSBQZXRzdG9yZRKaAVRoaXMgc3BlYyBpcyBtYWlubHkgZm9yIHRlc3RpbmcgUGV0c3RvcmUgc2VydmVyIGFuZCBjb250YWlucyBmYWtlIGVuZHBvaW50cywgbW9kZWxzLiBQbGVhc2UgZG8gbm90IHVzZSB0aGlzIGZvciBhbnkgb3RoZXIgcHVycG9zZS4gU3BlY2lhbCBjaGFyYWN0ZXJzOiAiIFwqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMCIAOiEKA3BldBIaRXZlcnl0aGluZyBhYm91dCB5b3VyIFBldHM6IgoFc3RvcmUSGUFjY2VzcyB0byBQZXRzdG9yZSBvcmRlcnM6HQoEdXNlchIVT3BlcmF0aW9ucyBhYm91dCB1c2VySiAKFXgtd2lsbC1jYXVzZS10aGUtZmFpbBIHEgV0cnVlCg==')),
);

/// From: 3_0/allOf-nullable.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_nullable = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEhcKBW93bmVyKg4KBG5hbWUSBnN0cmluZxIYCgRjbHViKhAKBW93bmVyEgVvd25lchgDEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElYKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBGNsdWIYAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK4AQq1AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SlgEikwEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCRhJECgMyMDASPQo7CgJPSxo1CjMKEGFwcGxpY2F0aW9uL2pzb24SHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL2NsdWIqaQpnCj0KBGNsdWISNQoz+gEwCi4KBW93bmVyEiUKIwgB0gEeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL293bmVyCiYKBW93bmVyEh0KG/oBGAoWCgRuYW1lEg4KDHj/AcoBBnN0cmluZw==')),
);

/// From: 3_0/allOf-readonly.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_readonly = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEhcKBW93bmVyKg4KBG5hbWUSBnN0cmluZxIYCgRjbHViKhAKBW93bmVyEgVvd25lchgDEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElYKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBGNsdWIYAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK4AQq1AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SlgEikwEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCRhJECgMyMDASPQo7CgJPSxo1CjMKEGFwcGxpY2F0aW9uL2pzb24SHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL2NsdWIqaQpnCj0KBGNsdWISNQoz+gEwCi4KBW93bmVyEiUKIxgB0gEeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL293bmVyCiYKBW93bmVyEh0KG/oBGAoWCgRuYW1lEg4KDHj/AcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_7791.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7791 = (
  model: surface.Model.fromBuffer(base64Decode('Cg5DdXN0b20gbWV0aG9kcxJOCi91bmRlbGV0ZU9wZXJhdGlvblJlcXVlc3RCb2R5bXVsdGlwYXJ0L2Zvcm0tZGF0YSobCglzb21lX2ZpbGUSBnN0cmluZyIGYmluYXJ5EmgKHHVuZGVsZXRlT3BlcmF0aW9uUmVxdWVzdEJvZHkqSAoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRIvdW5kZWxldGVPcGVyYXRpb25SZXF1ZXN0Qm9keW11bHRpcGFydC9mb3JtLWRhdGEYAxKmAQobVW5kZWxldGVPcGVyYXRpb25QYXJhbWV0ZXJzGkFVbmRlbGV0ZU9wZXJhdGlvblBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBVbmRlbGV0ZU9wZXJhdGlvbioUCghldmVudF9pZBIGbnVtYmVyKAQqLgoMcmVxdWVzdF9ib2R5Ehx1bmRlbGV0ZU9wZXJhdGlvblJlcXVlc3RCb2R5GAMaZgoRdW5kZWxldGVPcGVyYXRpb24SGy9ldmVudHMve2V2ZW50X2lkfTp1bmRlbGV0ZRoEUE9TVCoRVW5kZWxldGVPcGVyYXRpb25KG1VuZGVsZXRlT3BlcmF0aW9uUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRI1Cg5DdXN0b20gbWV0aG9kcxIcR29vZ2xlIGN1c3RvbSBtZXRob2RzIHN5bnRheDIFMC4wLjEi5wEK5AEKGy9ldmVudHMve2V2ZW50X2lkfTp1bmRlbGV0ZRLEATLBASoRdW5kZWxldGVPcGVyYXRpb24yKwopCghldmVudF9pZBIEcGF0aBoIRXZlbnQgSWQgAVILCgnKAQZudW1iZXI6aQpnEmUKYwoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRJMCkoKSMoBBm9iamVjdPoBPAo6Cglzb21lX2ZpbGUSLQorygEGc3RyaW5nkgIWYW5vdGhlciBmaWxlIHRvIHVwbG9hZJoCBmJpbmFyeUIUEhIKAzIwMBILCgkKB3N1Y2Nlc3M=')),
);

/// From: 3_0/property_name_collision.yaml
final OpenApiProto<v3.Document> fixtures_3_0_property_name_collision = (
  model: surface.Model.fromBuffer(base64Decode('Chdwcm9wZXJ0eSBuYW1lIGNvbGxpc2lvbhJJChVQcm9wZXJ0eU5hbWVDb2xsaXNpb24qDwoFX3R5cGUSBnN0cmluZyoOCgR0eXBlEgZzdHJpbmcqDwoFdHlwZV8SBnN0cmluZxoOEgEvGgNHRVQqBEdFVF8=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIgChdwcm9wZXJ0eSBuYW1lIGNvbGxpc2lvbjIFMS4wLjAiHAoaCgEvEhUiE0IREg8KAzIwMBIICgYKBHRlc3QqbApqCmgKFVByb3BlcnR5TmFtZUNvbGxpc2lvbhJPCk3KAQZvYmplY3T6AUEKFAoFX3R5cGUSCwoJygEGc3RyaW5nChMKBHR5cGUSCwoJygEGc3RyaW5nChQKBXR5cGVfEgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/allOfDuplicatedProperties.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_duplicated_properties = (
  model: surface.Model.fromBuffer(base64Decode('CgdUZXN0QXBpElUKBk1vZGVsQSoNCgNmb28SBnN0cmluZyodChNkdXBsaWNhdGVkX29wdGlvbmFsEgZzdHJpbmcqHQoTZHVwbGljYXRlZF9yZXF1aXJlZBIGc3RyaW5nElcKBk1vZGVsQioNCgNiYXISBnN0cmluZyoeChNkdXBsaWNhdGVkX29wdGlvbmFsEgdpbnRlZ2VyKh4KE2R1cGxpY2F0ZWRfcmVxdWlyZWQSB2ludGVnZXISswEKBk1vZGVsQyoNCgNmb28SBnN0cmluZyodChNkdXBsaWNhdGVkX29wdGlvbmFsEgZzdHJpbmcqHQoTZHVwbGljYXRlZF9yZXF1aXJlZBIGc3RyaW5nKg0KA2JhchIGc3RyaW5nKh4KE2R1cGxpY2F0ZWRfb3B0aW9uYWwSB2ludGVnZXIqHgoTZHVwbGljYXRlZF9yZXF1aXJlZBIHaW50ZWdlcioNCgNiYXoSBnN0cmluZxJhChBUZXN0QXBpUmVzcG9uc2VzGitUZXN0QXBpUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBUZXN0QXBpKiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZNb2RlbEMYAxowCgd0ZXN0QXBpEgUvdGVzdBoDR0VUKgdUZXN0QXBpUhBUZXN0QXBpUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIQCgdUZXN0QXBpMgUxLjAuMCJmCmQKBS90ZXN0ElsiWRIEVGVzdCoHdGVzdEFwaUJIEkYKAzIwMBI/Cj0KAk9rGjcKNQoQYXBwbGljYXRpb24vanNvbhIhCh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvTW9kZWxDKoQDCoEDCoEBCgZNb2RlbEESdwp1ugETZHVwbGljYXRlZF9yZXF1aXJlZPoBXAoSCgNmb28SCwoJygEGc3RyaW5nCiIKE2R1cGxpY2F0ZWRfb3B0aW9uYWwSCwoJygEGc3RyaW5nCiIKE2R1cGxpY2F0ZWRfcmVxdWlyZWQSCwoJygEGc3RyaW5nCoMBCgZNb2RlbEISeQp3ugETZHVwbGljYXRlZF9yZXF1aXJlZPoBXgoSCgNiYXISCwoJygEGc3RyaW5nCiMKE2R1cGxpY2F0ZWRfb3B0aW9uYWwSDAoKygEHaW50ZWdlcgojChNkdXBsaWNhdGVkX3JlcXVpcmVkEgwKCsoBB2ludGVnZXIKdQoGTW9kZWxDEmsKadIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9Nb2RlbEHSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvTW9kZWxC0gEiCiDKAQZvYmplY3T6ARQKEgoDYmF6EgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_1517.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_1517 = (
  model: surface.Model.fromBuffer(base64Decode('Ci5UZXN0IFJlZ2V4IGdlbmVyYXRpb24gZm9yIHBhcmFtZXRlciB2YWxpZGF0aW9uEtEDChJHRVRfcGluZ1BhcmFtZXRlcnMaL0dFVF9waW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF9waW5nKiYKGnBhdHRlcm5fbm9fZm9yd2FyZF9zbGFzaGVzEgZzdHJpbmcoASofChNwYXR0ZXJuX3R3b19zbGFzaGVzEgZzdHJpbmcoASopCh1wYXR0ZXJuX2RvbnRfZXNjYXBlX2JhY2tzbGFzaBIGc3RyaW5nKAEqNQopcGF0dGVybl9kb250X2VzY2FwZV9lc2NhcGVkX2ZvcndhcmRfc2xhc2gSBnN0cmluZygBKjIKJnBhdHRlcm5fZXNjYXBlX3VuZXNjYXBlZF9mb3J3YXJkX3NsYXNoEgZzdHJpbmcoASoiChZwYXR0ZXJuX3dpdGhfbW9kaWZpZXJzEgZzdHJpbmcoASowCiRwYXR0ZXJuX3dpdGhfYmFja3NsYXNoX2FmdGVyX2JyYWNrZXQSBnN0cmluZygBKioKHmFsdGVybmF0aW9uX3dpdGhfZm9yd2FyZF9zbGFzaBIGc3RyaW5nKAEqKQodcGF0dGVuX3N0YXJ0c19lbmRzX3dpdGhfc2xhc2gSBnN0cmluZygBEk4KEUdFVF9waW5nUmVzcG9uc2VzGi1HRVRfcGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX3BpbmcqChIGT0tfMjAwGAMaZhIFL3BpbmcaA0dFVCInUmV0dXJucyB0aGUgY29udGVudCBvZiBhIHBheW1lbnQgb2JqZWN0KghHRVRfcGluZ0oSR0VUX3BpbmdQYXJhbWV0ZXJzUhFHRVRfcGluZ1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRI3Ci5UZXN0IFJlZ2V4IGdlbmVyYXRpb24gZm9yIHBhcmFtZXRlciB2YWxpZGF0aW9uMgUxLjAuMCK2BgqzBgoFL3BpbmcSqQYipgYSF0dldCBQYXltZW50IEluZm9ybWF0aW9uGidSZXR1cm5zIHRoZSBjb250ZW50IG9mIGEgcGF5bWVudCBvYmplY3QyPwo9ChpwYXR0ZXJuX25vX2ZvcndhcmRfc2xhc2hlcxIGaGVhZGVyUhcKFYoBCV5wYXR0ZXJuJMoBBnN0cmluZzI6CjgKE3BhdHRlcm5fdHdvX3NsYXNoZXMSBmhlYWRlclIZCheKAQsvXnBhdHRlcm4kL8oBBnN0cmluZzJHCkUKHXBhdHRlcm5fZG9udF9lc2NhcGVfYmFja3NsYXNoEgZoZWFkZXJSHAoaigEOXnBhdHRlcm5cZHszfSTKAQZzdHJpbmcyVQpTCilwYXR0ZXJuX2RvbnRfZXNjYXBlX2VzY2FwZWRfZm9yd2FyZF9zbGFzaBIGaGVhZGVyUh4KHIoBEF5wYXR0ZXJuXC9cZHszfSTKAQZzdHJpbmcyUQpPCiZwYXR0ZXJuX2VzY2FwZV91bmVzY2FwZWRfZm9yd2FyZF9zbGFzaBIGaGVhZGVyUh0KG4oBD15wYXR0ZXJuL1xkezN9JMoBBnN0cmluZzJDCkEKFnBhdHRlcm5fd2l0aF9tb2RpZmllcnMSBmhlYWRlclIfCh2KAREvXnBhdHRlcm5cZHszfSQvacoBBnN0cmluZzJTClEKJHBhdHRlcm5fd2l0aF9iYWNrc2xhc2hfYWZ0ZXJfYnJhY2tldBIGaGVhZGVyUiEKH4oBEy9eW1xwYXR0ZXJuXGR7M30kL2nKAQZzdHJpbmcyQwpBCh5hbHRlcm5hdGlvbl93aXRoX2ZvcndhcmRfc2xhc2gSBmhlYWRlclIXChWKAQkvYXgkfC9ieCTKAQZzdHJpbmcyZwplCh1wYXR0ZW5fc3RhcnRzX2VuZHNfd2l0aF9zbGFzaBIGaGVhZGVyUjwKOooBBi9yb290L8oBBnN0cmluZ5ICJVNob3VsZCBtYXRjaCBvbmx5IC9yb290LyBidXQgbm90IHJvb3RCKhIoCgMyMDASIRIfCh0jL2NvbXBvbmVudHMvcmVzcG9uc2VzL09LXzIwMCoWEhIKEAoGT0tfMjAwEgYKBAoCT0syAA==')),
);

/// From: 3_0/issue7262.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue7262 = (
  model: surface.Model.fromBuffer(base64Decode('ChlhbGxPZiBkaXNjcmltaW5hdG9yIGlzc3VlEj8KDFVzZXJUaW1lQmFzZSoPCgUkdHlwZRIGc3RyaW5nKg8KBXN0YXJ0EgZzdHJpbmcqDQoDZW5kEgZzdHJpbmcSPAoJVXNlclNsZWVwKg8KBSR0eXBlEgZzdHJpbmcqDwoFc3RhcnQSBnN0cmluZyoNCgNlbmQSBnN0cmluZxIuCgtSZXF1ZXN0Qm9keSofChBhcHBsaWNhdGlvbi9qc29uEglVc2VyU2xlZXAYAxJtChVQQVRDSF9zbGVlcFBhcmFtZXRlcnMaNVBBVENIX3NsZWVwUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBBVENIX3NsZWVwKh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxozEgYvc2xlZXAaBVBBVENIKgtQQVRDSF9zbGVlcEoVUEFUQ0hfc2xlZXBQYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIiChlhbGxPZiBkaXNjcmltaW5hdG9yIGlzc3VlMgUxLjAuMCJkCmIKBi9zbGVlcBJYUlY6Pgo8EjoKOAoQYXBwbGljYXRpb24vanNvbhIkCiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvVXNlclNsZWVwQhQSEgoDMjAwEgsKCQoHVXBkYXRlZCrJAQrGAQpKCglVc2VyU2xlZXASPQo70gElEiMKISMvY29tcG9uZW50cy9zY2hlbWFzL1VzZXJUaW1lQmFzZdIBEAoOygEGb2JqZWN0ggICEAEKeAoMVXNlclRpbWVCYXNlEmgKZhIHCgUkdHlwZboBBSR0eXBlygEGb2JqZWN0+gFEChQKBSR0eXBlEgsKCcoBBnN0cmluZwoWCgVzdGFydBINCgsIAcoBBnN0cmluZwoUCgNlbmQSDQoLCAHKAQZzdHJpbmeCAgIQAQ==')),
);

/// From: 3_0/setPrimitiveTypesToNullable_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_set_primitive_types_to_nullable_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEmgKBlBlcnNvbioSCghsYXN0TmFtZRIGc3RyaW5nKhgKDWZpcnN0X2ludGVnZXISB2ludGVnZXIqFgoMZmlyc3RfbnVtYmVyEgZudW1iZXIqGAoNZmlyc3RfYm9vbGVhbhIHYm9vbGVhbhJPCg5MaXN0UGFyYW1ldGVycxonTGlzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBMaXN0KhQKCHBlcnNvbklkEgZzdHJpbmcoBBJYCg1MaXN0UmVzcG9uc2VzGiVMaXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLJAQrGAQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SpwEipAEKBnBlcnNvbgoFYmFzaWMqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqdAQqaAQqXAQoGUGVyc29uEowBCokBygEGb2JqZWN0+gF0ChcKCGxhc3ROYW1lEgsKCcoBBnN0cmluZwodCg1maXJzdF9pbnRlZ2VyEgwKCsoBB2ludGVnZXIKGwoMZmlyc3RfbnVtYmVyEgsKCcoBBm51bWJlcgodCg1maXJzdF9ib29sZWFuEgwKCsoBB2Jvb2xlYW6SAgZwZXJzb24=')),
);

/// From: 3_0/scala_reserved_words.yaml
final OpenApiProto<v3.Document> fixtures_3_0_scala_reserved_words = (
  model: surface.Model.fromBuffer(base64Decode('ChBwaW5nIHNvbWUgb2JqZWN0EqUDCgdTb21lT2JqKiMKBiRfdHlwZRIGc3RyaW5nUhFTb21lT2JqSWRlbnRpZmllcioUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKg0KA3ZhbBIGc3RyaW5nKg0KA3ZhchIGc3RyaW5nKg8KBWNsYXNzEgZzdHJpbmcqDwoFdHJhaXQSBnN0cmluZyoQCgZvYmplY3QSBnN0cmluZyoNCgN0cnkSBnN0cmluZyoPCgVjYXRjaBIGc3RyaW5nKhEKB2ZpbmFsbHkSBnN0cmluZyoNCgNkZWYSBnN0cmluZyoNCgNmb3ISBnN0cmluZyoSCghpbXBsaWNpdBIGc3RyaW5nKg8KBW1hdGNoEgZzdHJpbmcqDgoEY2FzZRIGc3RyaW5nKhAKBmltcG9ydBIGc3RyaW5nKg4KBGxhenkSBnN0cmluZyoRCgdwcml2YXRlEgZzdHJpbmcqDgoEdHlwZRIGc3RyaW5nKhEKBmZvb2JhchIHYm9vbGVhbiofCgpjcmVhdGVkX2F0EgZzdHJpbmciCWRhdGUtdGltZRI0ChNwb3N0UGluZ1JlcXVlc3RCb2R5Kh0KEGFwcGxpY2F0aW9uL2pzb24SB1NvbWVPYmoYAxJsChJQb3N0UGluZ1BhcmFtZXRlcnMaL1Bvc3RQaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3RQaW5nKiUKDHJlcXVlc3RfYm9keRITcG9zdFBpbmdSZXF1ZXN0Qm9keRgDEmUKEVBvc3RQaW5nUmVzcG9uc2VzGi1Qb3N0UGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdFBpbmcqIQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB1NvbWVPYmoYAxpICghwb3N0UGluZxIFL3BpbmcaBFBPU1QqCFBvc3RQaW5nShJQb3N0UGluZ1BhcmFtZXRlcnNSEVBvc3RQaW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXChBwaW5nIHNvbWUgb2JqZWN0MgMxLjAaGAoWaHR0cDovL2xvY2FsaG9zdDo4MDgyLyKpAQqmAQoFL3BpbmcSnAEymQEKBHBpbmcqCHBvc3RQaW5nOjwKOhI4CjYKEGFwcGxpY2F0aW9uL2pzb24SIgogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVPYmpCSRJHCgMyMDASQAo+CgJPSxo4CjYKEGFwcGxpY2F0aW9uL2pzb24SIgogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1NvbWVPYmoqggUK/wQK/AQKB1NvbWVPYmoS8AQK7QS6AQJpZLoBA3RyeboBBWNhdGNougEHZmluYWxseboBBGxhenm6AQZmb29iYXK6AQpjcmVhdGVkX2F0ygEGb2JqZWN0+gGmBApCCgYkX3R5cGUSOAo2wgEUEhJTb21lT2JqSWRlbnRpZmllcgrKAQZzdHJpbmeKAhMaEVNvbWVPYmpJZGVudGlmaWVyChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoTCgRuYW1lEgsKCcoBBnN0cmluZwoSCgN2YWwSCwoJygEGc3RyaW5nChIKA3ZhchILCgnKAQZzdHJpbmcKFAoFY2xhc3MSCwoJygEGc3RyaW5nChQKBXRyYWl0EgsKCcoBBnN0cmluZwoVCgZvYmplY3QSCwoJygEGc3RyaW5nChIKA3RyeRILCgnKAQZzdHJpbmcKFAoFY2F0Y2gSCwoJygEGc3RyaW5nChYKB2ZpbmFsbHkSCwoJygEGc3RyaW5nChIKA2RlZhILCgnKAQZzdHJpbmcKEgoDZm9yEgsKCcoBBnN0cmluZwoXCghpbXBsaWNpdBILCgnKAQZzdHJpbmcKFAoFbWF0Y2gSCwoJygEGc3RyaW5nChMKBGNhc2USCwoJygEGc3RyaW5nChUKBmltcG9ydBILCgnKAQZzdHJpbmcKEwoEbGF6eRILCgnKAQZzdHJpbmcKFgoHcHJpdmF0ZRILCgnKAQZzdHJpbmcKEwoEdHlwZRILCgnKAQZzdHJpbmcKFgoGZm9vYmFyEgwKCsoBB2Jvb2xlYW4KJQoKY3JlYXRlZF9hdBIXChXKAQZzdHJpbmeaAglkYXRlLXRpbWU=')),
);

/// From: 3_0/issue13146_file_abstraction_response.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue13146_file_abstraction_response = (
  model: surface.Model.fromBuffer(base64Decode('Ch5SZXNwb25zZSBmaWxlIGFic3RyYWN0aW9uIHRlc3QSkAEKG1Jlc291cmNlSW5SZXNwb25zZVJlc3BvbnNlcxpBUmVzb3VyY2VJblJlc3BvbnNlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBSZXNvdXJjZUluUmVzcG9uc2UqLgocMjAwIGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbRIGc3RyaW5nIgZiaW5hcnkacAoScmVzb3VyY2VJblJlc3BvbnNlEgkvcmVzb3VyY2UaA0dFVCIZUmVzcG9uc2UgZmlsZSBhYnN0cmFjdGlvbioSUmVzb3VyY2VJblJlc3BvbnNlUhtSZXNvdXJjZUluUmVzcG9uc2VSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRInCh5SZXNwb25zZSBmaWxlIGFic3RyYWN0aW9uIHRlc3QyBTEuMC4wIqYBCqMBCgkvcmVzb3VyY2USlQEikgEKCHJlc291cmNlGhlSZXNwb25zZSBmaWxlIGFic3RyYWN0aW9uKhJyZXNvdXJjZUluUmVzcG9uc2VCVxJVCgMyMDASTgpMChRTdWNjZXNzZnVsIG9wZXJhdGlvbho0CjIKGGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbRIWChQKEsoBBnN0cmluZ5oCBmJpbmFyeQ==')),
);

/// From: 3_0/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_with_fake_endpoints_models_for_testing_with_http_signature = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/any_codable.yaml
final OpenApiProto<v3.Document> fixtures_3_0_any_codable = (
  model: surface.Model.fromBuffer(base64Decode('ChBTd2FnZ2VyIFBldHN0b3JlEh0KA1BldCoWCgx0ZXN0UHJvcGVydHkSBnN0cmluZxJhChFHRVRfcGV0c1Jlc3BvbnNlcxotR0VUX3BldHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9wZXRzKh0KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAxJhChVTaG93UGV0QnlJZFBhcmFtZXRlcnMaNVNob3dQZXRCeUlkUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFNob3dQZXRCeUlkKhEKBXBldElkEgZzdHJpbmcoBBIlChQyMDAgYXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRJ7ChRTaG93UGV0QnlJZFJlc3BvbnNlcxozU2hvd1BldEJ5SWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFNob3dQZXRCeUlkKi4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEhQyMDAgYXBwbGljYXRpb24vanNvbhgDGikSBS9wZXRzGgNHRVQqCEdFVF9wZXRzUhFHRVRfcGV0c1Jlc3BvbnNlcxpbCgtzaG93UGV0QnlJZBINL3BldHMve3BldElkfRoDR0VUKgtTaG93UGV0QnlJZEoVU2hvd1BldEJ5SWRQYXJhbWV0ZXJzUhRTaG93UGV0QnlJZFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIZChBTd2FnZ2VyIFBldHN0b3JlMgUxLjAuMCLXAgp6CgUvcGV0cxJxIm8KBHBldHNCZxJlCgMyMDASXgpcCiRFeHBlY3RlZCByZXNwb25zZSB0byBhIHZhbGlkIHJlcXVlc3QaNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQK2AEKDS9wZXRzL3twZXRJZH0SxgEiwwEKBHBldHMSF0luZm8gZm9yIGEgc3BlY2lmaWMgcGV0KgtzaG93UGV0QnlJZDI9CjsKBXBldElkEgRwYXRoGh1UaGUgaWQgb2YgdGhlIHBldCB0byByZXRyaWV2ZSABUgsKCcoBBnN0cmluZ0JWElQKAzIwMBJNCksKJEV4cGVjdGVkIHJlc3BvbnNlIHRvIGEgdmFsaWQgcmVxdWVzdBojCiEKEGFwcGxpY2F0aW9uL2pzb24SDQoLCgnKAQZvYmplY3QqRQpDCkEKA1BldBI6Cji6AQx0ZXN0UHJvcGVydHnKAQZvYmplY3T6AR0KGwoMdGVzdFByb3BlcnR5EgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_7532.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7532 = (
  model: surface.Model.fromBuffer(base64Decode('ChFUZXN0IHN3YWdnZXIgZmlsZRI4CgphZGRpdGlvbmFsKioKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIPbWFwW3N0cmluZ11UcmVlGAESkgEKBFRyZWUqDQoCaWQSB2ludGVnZXIqDgoEbmFtZRIGc3RyaW5nKhUKC2Rlc2NyaXB0aW9uEgZzdHJpbmcqEgoIY2hpbGRyZW4SBFRyZWUYAioQCgZwYXJlbnQSBFRyZWUYAyoSCgZmb3Jlc3QSBkZvcmVzdBgDKhoKCmFkZGl0aW9uYWwSCmFkZGl0aW9uYWwYAxIZCgZGb3Jlc3QqDwoFdHJlZXMSBFRyZWUYAxIzChVjcmVhdGVUcmVlUmVxdWVzdEJvZHkqGgoQYXBwbGljYXRpb24vanNvbhIEVHJlZRgDEnQKFENyZWF0ZVRyZWVQYXJhbWV0ZXJzGjNDcmVhdGVUcmVlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZVRyZWUqJwoMcmVxdWVzdF9ib2R5EhVjcmVhdGVUcmVlUmVxdWVzdEJvZHkYAxJbChNDcmVhdGVUcmVlUmVzcG9uc2VzGjFDcmVhdGVUcmVlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBDcmVhdGVUcmVlKhEKBzIwMCAqLyoSBFRyZWUYAxpYCgpjcmVhdGVUcmVlEgUvdHJlZRoEUE9TVCIGQ3JlYXRlKgpDcmVhdGVUcmVlShRDcmVhdGVUcmVlUGFyYW1ldGVyc1ITQ3JlYXRlVHJlZVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIaChFUZXN0IHN3YWdnZXIgZmlsZTIFMS4wLjAi6QEK5gEKBS90cmVlEtwBMtkBCgRUZXN0GgZDcmVhdGUqCmNyZWF0ZVRyZWU6TwpNChJUaGUgdHJlZSB0byBjcmVhdGUSNQozChBhcHBsaWNhdGlvbi9qc29uEh8KHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9UcmVlGAFCbBJSCgMyMDASSwpJCh1TdWNjZXNzZnVsbHkgY3JlYXRlZCB0aGUgdHJlZRooCiYKAyovKhIfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVHJlZRIWCgM0MDASDwoNCgtCYWQgcmVxdWVzdCqIAwqFAwrAAgoEVHJlZRK3Agq0AroBAmlkugEEbmFtZboBCGNoaWxkcmVuygEGb2JqZWN0+gGQAgoSCgJpZBIMCgrKAQdpbnRlZ2VyChMKBG5hbWUSCwoJygEGc3RyaW5nChoKC2Rlc2NyaXB0aW9uEgsKCcoBBnN0cmluZwo4CghjaGlsZHJlbhIsCirKAQVhcnJhefIBHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL1RyZWUKJwoGcGFyZW50Eh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVHJlZQopCgZmb3Jlc3QSHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb3Jlc3QKOwoKYWRkaXRpb25hbBItCivKAQZvYmplY3SCAh8KHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9UcmVlCkAKBkZvcmVzdBI2CjTKAQZvYmplY3T6ASgKJgoFdHJlZXMSHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9UcmVl')),
);

/// From: 3_0/addUnsignedToIntegerWithInvalidMaxValue_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_add_unsigned_to_integer_with_invalid_max_value_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEqABCgZQZXJzb24qEgoHaW50ZWdlchIHaW50ZWdlcioXCgVpbnQzMhIHaW50ZWdlciIFaW50MzIqFwoFaW50NjQSB2ludGVnZXIiBWludDY0KhYKC2ludGVnZXJfbWF4EgdpbnRlZ2VyKhsKCWludDMyX21heBIHaW50ZWdlciIFaW50MzIqGwoJaW50NjRfbWF4EgdpbnRlZ2VyIgVpbnQ2NBJPCg5MaXN0UGFyYW1ldGVycxonTGlzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBMaXN0KhQKCHBlcnNvbklkEgZzdHJpbmcoBBJYCg1MaXN0UmVzcG9uc2VzGiVMaXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxJVChBEZWxldGVQYXJhbWV0ZXJzGitEZWxldGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRGVsZXRlKhQKCHBlcnNvbklkEgZzdHJpbmcoBBJeCg9EZWxldGVSZXNwb25zZXMaKURlbGV0ZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgRGVsZXRlKiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcxpXCgZkZWxldGUSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgZERUxFVEUqBkRlbGV0ZUoQRGVsZXRlUGFyYW1ldGVyc1IPRGVsZXRlUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLrAgroAgoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SyQIipAEKBnBlcnNvbgoFYmFzaWMqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbjqfAQoGcGVyc29uKgZkZWxldGUyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbir/AQr8AQr5AQoGUGVyc29uEu4BCusBygEGb2JqZWN0+gHVAQoXCgdpbnRlZ2VyEgwKCsoBB2ludGVnZXIKHQoFaW50MzISFAoSygEHaW50ZWdlcpoCBWludDMyCh0KBWludDY0EhQKEsoBB2ludGVnZXKaAgVpbnQ2NAokCgtpbnRlZ2VyX21heBIVChNZAADg////70HKAQdpbnRlZ2VyCioKCWludDMyX21heBIdChtZAADg////70HKAQdpbnRlZ2VymgIFaW50MzIKKgoJaW50NjRfbWF4Eh0KG1kAAAAAAADwQ8oBB2ludGVnZXKaAgVpbnQ2NJICBnBlcnNvbg==')),
);

/// From: 3_0/features/dynamic-servers.yaml
final OpenApiProto<v3.Document> fixtures_3_0_features_dynamic_servers = (
  model: surface.Model.fromBuffer(base64Decode('CiZPcGVuQVBJIEV4dGVuc2lvbiB3aXRoIGR5bmFtaWMgc2VydmVycxIlChQyMDAgYXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRKBAQoWRGVmYXVsdFNlcnZlclJlc3BvbnNlcxo3RGVmYXVsdFNlcnZlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgRGVmYXVsdFNlcnZlciouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxJ+ChVDdXN0b21TZXJ2ZXJSZXNwb25zZXMaNUN1c3RvbVNlcnZlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQ3VzdG9tU2VydmVyKi4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEhQyMDAgYXBwbGljYXRpb24vanNvbhgDGlkKDWRlZmF1bHRTZXJ2ZXISCC9kZWZhdWx0GgNHRVQiElVzZSBkZWZhdWx0IHNlcnZlcioNRGVmYXVsdFNlcnZlclIWRGVmYXVsdFNlcnZlclJlc3BvbnNlcxpUCgxjdXN0b21TZXJ2ZXISBy9jdXN0b20aA0dFVCIRVXNlIGN1c3RvbSBzZXJ2ZXIqDEN1c3RvbVNlcnZlclIVQ3VzdG9tU2VydmVyUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKlAQomT3BlbkFQSSBFeHRlbnNpb24gd2l0aCBkeW5hbWljIHNlcnZlcnMSNFRoaXMgc3BlY2lmaWNhdGlvbiBzaG93cyBob3cgdG8gdXNlIGR5bmFtaWMgc2VydmVycy4qPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBqMAQokaHR0cDovL3tzZXJ2ZXJ9LnN3YWdnZXIuaW86e3BvcnR9L3YyEg9wZXRzdG9yZSBzZXJ2ZXIaUwo5CgZzZXJ2ZXISLwoIcGV0c3RvcmUKC3FhLXBldHN0b3JlCgxkZXYtcGV0c3RvcmUSCHBldHN0b3JlChYKBHBvcnQSDgoCODAKBDgwODASAjgwGlMKIGh0dHBzOi8vbG9jYWxob3N0OjgwODAve3ZlcnNpb259EhBUaGUgbG9jYWwgc2VydmVyGh0KGwoHdmVyc2lvbhIQCgJ2MQoCdjIKAnYzEgJ2MSL8BAqWAQoIL2RlZmF1bHQSiQEihgEKBXVzYWdlEhJVc2UgZGVmYXVsdCBzZXJ2ZXIaElVzZSBkZWZhdWx0IHNlcnZlcioNZGVmYXVsdFNlcnZlckJGEkQKAzIwMBI9CjsKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGiMKIQoQYXBwbGljYXRpb24vanNvbhINCgsKCcoBBm9iamVjdArgAwoHL2N1c3RvbRLUAyLRAwoFdXNhZ2USEVVzZSBjdXN0b20gc2VydmVyGhFVc2UgY3VzdG9tIHNlcnZlcioMY3VzdG9tU2VydmVyQkYSRAoDMjAwEj0KOwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGb2JqZWN0YpoBCiVodHRwczovL3tzZXJ2ZXJ9LnN3YWdnZXIuaW86e3BvcnR9L3YyGnEKVQoGc2VydmVyEksKD2N1c3RvbS1wZXRzdG9yZQoSY3VzdG9tLXFhLXBldHN0b3JlChNjdXN0b20tZGV2LXBldHN0b3JlEg9jdXN0b20tcGV0c3RvcmUKGAoEcG9ydBIQCgI4MAoEODA4MBIEODA4MGJaCiBodHRwczovL2xvY2FsaG9zdDo4MDgxL3t2ZXJzaW9ufRIXVGhlIGxvY2FsIGN1c3RvbSBzZXJ2ZXIaHQobCgd2ZXJzaW9uEhAKAnYxCgJ2MgoCdjMSAnYyYlMKImh0dHBzOi8vdGhpcmQuZXhhbXBsZS5jb20ve3ByZWZpeH0SF1RoZSBsb2NhbCBjdXN0b20gc2VydmVyGhQKEgoGcHJlZml4EggSBmN1c3RvbTomCgV1c2FnZRIdU2hvdyB1c2FnZSBvZiBkeW5hbWljIHNlcnZlcnM=')),
);

/// From: 3_0/features/generate-alias-as-model.yaml
final OpenApiProto<v3.Document> fixtures_3_0_features_generate_alias_as_model = (
  model: surface.Model.fromBuffer(base64Decode('CkFPcGVuQVBJIEV4dGVuc2lvbiBnZW5lcmF0aW5nIGFsaWFzZXMgdG8gbWFwcyBhbmQgYXJyYXlzIGFzIG1vZGVscxIgCgpBcnJheUFsaWFzKhIKBXZhbHVlEgdpbnRlZ2VyGAISOAoITWFwQWxpYXMqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEjAKDm1hcFJlcXVlc3RCb2R5Kh4KEGFwcGxpY2F0aW9uL2pzb24SCE1hcEFsaWFzGAMSWAoNTWFwUGFyYW1ldGVycxolTWFwUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIE1hcCogCgxyZXF1ZXN0X2JvZHkSDm1hcFJlcXVlc3RCb2R5GAMSJQoUMjAwIGFwcGxpY2F0aW9uL2pzb24QASILaW50ZXJmYWNle30SYwoMTWFwUmVzcG9uc2VzGiNNYXBSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIE1hcCouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxI0ChBhcnJheVJlcXVlc3RCb2R5KiAKEGFwcGxpY2F0aW9uL2pzb24SCkFycmF5QWxpYXMYAxJgCg9BcnJheVBhcmFtZXRlcnMaKUFycmF5UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEFycmF5KiIKDHJlcXVlc3RfYm9keRIQYXJyYXlSZXF1ZXN0Qm9keRgDEmkKDkFycmF5UmVzcG9uc2VzGidBcnJheVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQXJyYXkqLgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFDIwMCBhcHBsaWNhdGlvbi9qc29uGAMaRAoDbWFwEgQvbWFwGgNHRVQiEFVzZSBhbGlhcyB0byBtYXAqA01hcEoNTWFwUGFyYW1ldGVyc1IMTWFwUmVzcG9uc2VzGlAKBWFycmF5EgYvYXJyYXkaA0dFVCISVXNlIGFsaWFzIHRvIGFycmF5KgVBcnJheUoPQXJyYXlQYXJhbWV0ZXJzUg5BcnJheVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBLaAQpBT3BlbkFQSSBFeHRlbnNpb24gZ2VuZXJhdGluZyBhbGlhc2VzIHRvIG1hcHMgYW5kIGFycmF5cyBhcyBtb2RlbHMSTlRoaXMgc3BlY2lmaWNhdGlvbiBzaG93cyBob3cgdG8gZ2VuZXJhdGUgYWxpYXNlcyB0byBtYXBzIGFuZCBhcnJheXMgYXMgbW9kZWxzLio+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGjAKHWh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL3YyEg9wZXRzdG9yZSBzZXJ2ZXIilgMKwwEKBC9tYXASugEitwEKBXVzYWdlEhBVc2UgYWxpYXMgdG8gbWFwGhBVc2UgYWxpYXMgdG8gbWFwKgNtYXA6PQo7EjkKNwoQYXBwbGljYXRpb24vanNvbhIjCiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvTWFwQWxpYXNCRhJECgMyMDASPQo7ChRzdWNjZXNzZnVsIG9wZXJhdGlvbhojCiEKEGFwcGxpY2F0aW9uL2pzb24SDQoLCgnKAQZvYmplY3QKzQEKBi9hcnJheRLCASK/AQoFdXNhZ2USElVzZSBhbGlhcyB0byBhcnJheRoSVXNlIGFsaWFzIHRvIGFycmF5KgVhcnJheTo/Cj0SOwo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9BcnJheUFsaWFzQkYSRAoDMjAwEj0KOwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGb2JqZWN0KlYKVAopCgpBcnJheUFsaWFzEhsKGcoBBWFycmF58gEOCgwKCsoBB2ludGVnZXIKJwoITWFwQWxpYXMSGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZzo6CgV1c2FnZRIxU2hvdyB1c2FnZSBvZiB4LWdlbmVyYXRlLWFsaWFzLWFzLW1vZGVsIGV4dGVuc2lvbg==')),
);

/// From: 3_0/type_mapping_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_type_mapping_test = (
  model: surface.Model.fromBuffer(base64Decode('Ch9TYW1wbGUgQVBJIHRvIHRlc3QgdHlwZSBtYXBwaW5nEk8KBkFuaW1hbCoTCgljbGFzc05hbWUSBnN0cmluZyoPCgVjb2xvchIGc3RyaW5nKh8KDG1hcHBpbmdfdGVzdBIGc3RyaW5nIgdzcGVjaWFsEnsKFUdFVF9hbmltYWxzUGFyYW1ldGVycxo1R0VUX2FuaW1hbHNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX2FuaW1hbHMqKwoWcGFyYW1ldGVyX3R5cGVfbWFwcGluZxIGc3RyaW5nIgdzcGVjaWFsKAMSbQoUR0VUX2FuaW1hbHNSZXNwb25zZXMaM0dFVF9hbmltYWxzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfYW5pbWFscyogChQyMDAgYXBwbGljYXRpb24vanNvbhIGQW5pbWFsGAMadRIIL2FuaW1hbHMaA0dFVCIqT3B0aW9uYWwgZXh0ZW5kZWQgZGVzY3JpcHRpb24gaW4gTWFya2Rvd24uKgtHRVRfYW5pbWFsc0oVR0VUX2FuaW1hbHNQYXJhbWV0ZXJzUhRHRVRfYW5pbWFsc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJGCh9TYW1wbGUgQVBJIHRvIHRlc3QgdHlwZSBtYXBwaW5nEhxBUEkgZGVzY3JpcHRpb24gaW4gTWFya2Rvd24uMgUxLjAuMCLZAQrWAQoIL2FuaW1hbHMSyQEixgESFFJldHVybnMgYWxsIGFuaW1hbHMuGipPcHRpb25hbCBleHRlbmRlZCBkZXNjcmlwdGlvbiBpbiBNYXJrZG93bi4yOAo2ChZwYXJhbWV0ZXJfdHlwZV9tYXBwaW5nEgVxdWVyeVIVChPKAQZzdHJpbmeaAgdzcGVjaWFsQkgSRgoDMjAwEj8KPQoCT0saNwo1ChBhcHBsaWNhdGlvbi9qc29uEiEKHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9BbmltYWwqiQEKhgEKgwEKBkFuaW1hbBJ5Cne6AQljbGFzc05hbWXKAQZvYmplY3T6AV8KGAoJY2xhc3NOYW1lEgsKCcoBBnN0cmluZwocCgVjb2xvchITChHKAQZzdHJpbmeKAgUaA3JlZAolCgxtYXBwaW5nX3Rlc3QSFQoTygEGc3RyaW5nmgIHc3BlY2lhbA==')),
);

/// From: 3_0/property-title.yaml
final OpenApiProto<v3.Document> fixtures_3_0_property_title = (
  model: surface.Model.fromBuffer(base64Decode('ChNUaXRsZSBvbiBQcm9wZXJ0aWVzEkwKGU1vZGVsV2l0aFRpdGxlZFByb3BlcnRpZXMqGAoOc2ltcGxlUHJvcGVydHkSBnN0cmluZyoVCgtyZWZQcm9wZXJ0eRIGc3RyaW5nEhwKCVJlZk9iamVjdCoPCgV2YWx1ZRIGc3RyaW5nEl8KEEdFVF9mb29SZXNwb25zZXMaK0dFVF9mb29SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9mb28qHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBHRlc3QYAxomEgQvZm9vGgNHRVQqB0dFVF9mb29SEEdFVF9mb29SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIaChNUaXRsZSBvbiBQcm9wZXJ0aWVzMgMxLjAiVApSCgQvZm9vEkoiSEJGEkQKAzIwMBI9CjsKAm9rGjUKMwoQYXBwbGljYXRpb24vanNvbhIfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvdGVzdCrZAQrWAQq5AQoZTW9kZWxXaXRoVGl0bGVkUHJvcGVydGllcxKbAQqYAcoBBm9iamVjdPoBiwEKNAoOc2ltcGxlUHJvcGVydHkSIgogShVTaW1wbGUtUHJvcGVydHktVGl0bGXKAQZzdHJpbmcKUwoLcmVmUHJvcGVydHkSRApCShJSZWYtUHJvcGVydHktVGl0bGXKAQZzdHJpbmfSASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvUmVmT2JqZWN0ChgKCVJlZk9iamVjdBILCgnKAQZzdHJpbmc=')),
);

/// From: 3_0/schema-with-special-characters.yaml
final OpenApiProto<v3.Document> fixtures_3_0_schema_with_special_characters = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0Eh4KBlBhcmVudCoUCgpvYmplY3RUeXBlEgZzdHJpbmcSNAoLQ2hpbGRTY2hlbWEqFAoKb2JqZWN0VHlwZRIGc3RyaW5nKg8KBXByb3AxEgZzdHJpbmcSQgoZTXlTY2hlbWFOYW1lLl8tQ2hhcmFjdGVycyoUCgpvYmplY3RUeXBlEgZzdHJpbmcqDwoFcHJvcDISBnN0cmluZxI+CgtSZXF1ZXN0Qm9keSovChBhcHBsaWNhdGlvbi9qc29uEhlNeVNjaGVtYU5hbWUuXy1DaGFyYWN0ZXJzGAMSZwoTUE9TVF90ZXN0UGFyYW1ldGVycxoxUE9TVF90ZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBPU1RfdGVzdCodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMSegoSUE9TVF90ZXN0UmVzcG9uc2VzGi9QT1NUX3Rlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBPU1RfdGVzdCozChQyMDAgYXBwbGljYXRpb24vanNvbhIZTXlTY2hlbWFOYW1lLl8tQ2hhcmFjdGVycxgDGkESBS90ZXN0GgRQT1NUKglQT1NUX3Rlc3RKE1BPU1RfdGVzdFBhcmFtZXRlcnNSElBPU1RfdGVzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxITCgR0ZXN0EgR0ZXN0MgUxLjAuMCLHAQrEAQoFL3Rlc3QSugEytwE6TgpMEkoKSAoQYXBwbGljYXRpb24vanNvbhI0CjISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvTXlTY2hlbWFOYW1lLl8tQ2hhcmFjdGVyc0JlEmMKAzIwMBJcCloKDHRoZSByZXNwb25zZRpKCkgKEGFwcGxpY2F0aW9uL2pzb24SNAoyEjAKLiMvY29tcG9uZW50cy9zY2hlbWFzL015U2NoZW1hTmFtZS5fLUNoYXJhY3RlcnMqngQKmwQKOAoGUGFyZW50Ei4KLBIMCgpvYmplY3RUeXBl+gEbChkKCm9iamVjdFR5cGUSCwoJygEGc3RyaW5nCpABCgtDaGlsZFNjaGVtYRKAAQp+0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudNIBJAoiygEGb2JqZWN0+gEWChQKBXByb3AxEgsKCcoBBnN0cmluZ5ICMkEgc2NoZW1hIHRoYXQgZG9lcyBub3QgaGF2ZSBhbnkgc3BlY2lhbCBjaGFyYWN0ZXIuCssCChlNeVNjaGVtYU5hbWUuXy1DaGFyYWN0ZXJzEq0CCqoC0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BhcmVudNIBJAoiygEGb2JqZWN0+gEWChQKBXByb3AyEgsKCcoBBnN0cmluZ5IC3QFBIHNjaGVtYSBuYW1lIHRoYXQgaGFzIGxldHRlcnMsIG51bWJlcnMsIHB1bmN0dWF0aW9uIGFuZCBub24tQVNDSUkgY2hhcmFjdGVycy4gVGhlIHNhbml0aXphdGlvbiBydWxlcyBzaG91bGQgbWFrZSBpdCBwb3NzaWJsZSB0byBnZW5lcmF0ZSBhIGxhbmd1YWdlLXNwZWNpZmljIGNsYXNzbmFtZSB3aXRoIGFsbG93ZWQgY2hhcmFjdGVycyBpbiB0aGF0IHByb2dyYW1taW5nIGxhbmd1YWdlLg==')),
);

/// From: 3_0/issue_7533.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7533 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3Jl')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJmChBPcGVuQVBJIFBldHN0b3JlEgtzYW1wbGUgc3BlYyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGgMKAS8aIQofaHR0cDovL3RyYWlsaW5nc2hsYXNoLmlvOjgwL3YxLxohCh9odHRwOi8vbm90cmFpbGluZ3NsYXNoLmlvOjgwL3YyIgAqBAoAOgA=')),
);

/// From: 3_0/issue_15511.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_15511 = (
  model: surface.Model.fromBuffer(base64Decode('ChZBdXRoIFNlcnZlciBDbGllbnQgQVBJEnkKEkxvZ2luUmVzcG9uc2VNb2RlbCocCgpleHBpcmVzX2luEgdpbnRlZ2VyIgVpbnQzMioWCgxhY2Nlc3NfdG9rZW4SBnN0cmluZyoXCg1yZWZyZXNoX3Rva2VuEgZzdHJpbmcqFAoKdG9rZW5fdHlwZRIGc3RyaW5nEoABChlUb2tlblJlZnJlc2hSZXNwb25zZU1vZGVsKhwKCmV4cGlyZXNfaW4SB2ludGVnZXIiBWludDMyKhYKDGFjY2Vzc190b2tlbhIGc3RyaW5nKhcKDXJlZnJlc2hfdG9rZW4SBnN0cmluZyoUCgp0b2tlbl90eXBlEgZzdHJpbmcSkAEKEUxvZ2luUmVxdWVzdE1vZGVsKhMKCWNsaWVudF9pZBIGc3RyaW5nKi0KCmdyYW50X3R5cGUSBnN0cmluZ1INcmVmcmVzaF90b2tlblIIcGFzc3dvcmQqEgoIcGFzc3dvcmQSBnN0cmluZyoPCgVzY29wZRIGc3RyaW5nKhIKCHVzZXJuYW1lEgZzdHJpbmcSYgoYVG9rZW5SZWZyZXNoUmVxdWVzdE1vZGVsKi0KCmdyYW50X3R5cGUSBnN0cmluZ1INcmVmcmVzaF90b2tlblIIcGFzc3dvcmQqFwoNcmVmcmVzaF90b2tlbhIGc3RyaW5nEs8BChFBdXRoUmVzcG9uc2VFcnJvciobChFlcnJvcl9kZXNjcmlwdGlvbhIGc3RyaW5nKnsKBWVycm9yEgZzdHJpbmdSD2ludmFsaWRfcmVxdWVzdFIOaW52YWxpZF9jbGllbnRSDWludmFsaWRfZ3JhbnRSDWludmFsaWRfc2NvcGVSE3VuYXV0aG9yaXplZF9jbGllbnRSFnVuc3VwcG9ydGVkX2dyYW50X3R5cGUqIAoGZXJyb3JzEhRBdXRoRXJyb3JEZXNjcmlwdGlvbhgCEi0KFEF1dGhFcnJvckRlc2NyaXB0aW9uKhUKC2Rlc2NyaXB0aW9uEgZzdHJpbmcSggIKO1JlcXVlc3RCb2R5YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PXV0Zi04KhMKCWNsaWVudF9pZBIGc3RyaW5nKi0KCmdyYW50X3R5cGUSBnN0cmluZ1INcmVmcmVzaF90b2tlblIIcGFzc3dvcmQqEgoIcGFzc3dvcmQSBnN0cmluZyoPCgVzY29wZRIGc3RyaW5nKhIKCHVzZXJuYW1lEgZzdHJpbmcqLQoKZ3JhbnRfdHlwZRIGc3RyaW5nUg1yZWZyZXNoX3Rva2VuUghwYXNzd29yZCoXCg1yZWZyZXNoX3Rva2VuEgZzdHJpbmcSgAEKC1JlcXVlc3RCb2R5KnEKMGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD11dGYtOBI7UmVxdWVzdEJvZHlhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9dXRmLTgYAxKIAQoeUE9TVF9hc190b2tlbl9vYXV0aDJQYXJhbWV0ZXJzGkdQT1NUX2FzX3Rva2VuX29hdXRoMlBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX2FzX3Rva2VuX29hdXRoMiodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMS4AEKFDIwMCBhcHBsaWNhdGlvbi9qc29uKhwKCmV4cGlyZXNfaW4SB2ludGVnZXIiBWludDMyKhYKDGFjY2Vzc190b2tlbhIGc3RyaW5nKhcKDXJlZnJlc2hfdG9rZW4SBnN0cmluZyoUCgp0b2tlbl90eXBlEgZzdHJpbmcqHAoKZXhwaXJlc19pbhIHaW50ZWdlciIFaW50MzIqFgoMYWNjZXNzX3Rva2VuEgZzdHJpbmcqFwoNcmVmcmVzaF90b2tlbhIGc3RyaW5nKhQKCnRva2VuX3R5cGUSBnN0cmluZxK2AQodUE9TVF9hc190b2tlbl9vYXV0aDJSZXNwb25zZXMaRVBPU1RfYXNfdG9rZW5fb2F1dGgyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2FzX3Rva2VuX29hdXRoMiouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAyoeCgdkZWZhdWx0EhFBdXRoUmVzcG9uc2VFcnJvchgDGm0SEC9hcy90b2tlbi5vYXV0aDIaBFBPU1QqFFBPU1RfYXNfdG9rZW5fb2F1dGgySh5QT1NUX2FzX3Rva2VuX29hdXRoMlBhcmFtZXRlcnNSHVBPU1RfYXNfdG9rZW5fb2F1dGgyUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIqChZBdXRoIFNlcnZlciBDbGllbnQgQVBJEglmb29iYXJiYXoyBTEuMC4wIu4DCusDChAvYXMvdG9rZW4ub2F1dGgyEtYDMtMDCgRhdXRoEiRPYnRhaW5zIGEgbmV3IHRva2VuIGZyb20gQXV0aCBzZXJ2ZXI6pAEKoQESnAEKmQEKMGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD11dGYtOBJlCmMKYdoBKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9Mb2dpblJlcXVlc3RNb2RlbNoBMRIvCi0jL2NvbXBvbmVudHMvc2NoZW1hcy9Ub2tlblJlZnJlc2hSZXF1ZXN0TW9kZWwYAUL9AQpYClYKEEFuIGVycm9yIG9jY3VyZWQaQgpAChBhcHBsaWNhdGlvbi9qc29uEiwKKhIoCiYjL2NvbXBvbmVudHMvc2NoZW1hcy9BdXRoUmVzcG9uc2VFcnJvchKgAQoDMjAwEpgBCpUBChRTdWNjZXNzZnVsIG9wZXJhdGlvbhp9CnsKEGFwcGxpY2F0aW9uL2pzb24SZwplCmPaASsSKQonIy9jb21wb25lbnRzL3NjaGVtYXMvTG9naW5SZXNwb25zZU1vZGVs2gEyEjAKLiMvY29tcG9uZW50cy9zY2hlbWFzL1Rva2VuUmVmcmVzaFJlc3BvbnNlTW9kZWwqrA8KqQ8KzAEKEkxvZ2luUmVzcG9uc2VNb2RlbBK1AQqyAboBCmV4cGlyZXNfaW66AQxhY2Nlc3NfdG9rZW66AQ1yZWZyZXNoX3Rva2VuygEGb2JqZWN0+gF6CiIKCmV4cGlyZXNfaW4SFAoSygEHaW50ZWdlcpoCBWludDMyChsKDGFjY2Vzc190b2tlbhILCgnKAQZzdHJpbmcKHAoNcmVmcmVzaF90b2tlbhILCgnKAQZzdHJpbmcKGQoKdG9rZW5fdHlwZRILCgnKAQZzdHJpbmcKmwMKGVRva2VuUmVmcmVzaFJlc3BvbnNlTW9kZWwS/QIK+gK6AQpleHBpcmVzX2luugEMYWNjZXNzX3Rva2VuygEGb2JqZWN0+gF6CiIKCmV4cGlyZXNfaW4SFAoSygEHaW50ZWdlcpoCBWludDMyChsKDGFjY2Vzc190b2tlbhILCgnKAQZzdHJpbmcKHAoNcmVmcmVzaF90b2tlbhILCgnKAQZzdHJpbmcKGQoKdG9rZW5fdHlwZRILCgnKAQZzdHJpbmeSAtQBQmUgYXdhcmUsIHRoYXQgd2UgbWF5IGVpdGhlciByZWNlaXZlIGEgbmV3IHJlZnJlc2ggdG9rZW4gaW4gdGhlIHJlc3BvbnNlIG9yIG5vdC4gSW4gY2FzZSB3aGVyZSB3ZSBkbyBub3QgcmVjZWl2ZSBhIG5ldyByZWZyZXNoIHRva2VuIHdlIG11c3QgdXNlIHRoZSByZWZyZXNoIHRva2VuIGZyb20gdGhlIG9sZCB0b2tlbiBmb3Igc3Vic2VxdWVudCB0b2tlbiByZWZyZXNocy4K+wEKEUxvZ2luUmVxdWVzdE1vZGVsEuUBCuIBugEJY2xpZW50X2lkugEKZ3JhbnRfdHlwZboBCHBhc3N3b3JkugEFc2NvcGW6AQh1c2VybmFtZcoBBm9iamVjdPoBngEKGAoJY2xpZW50X2lkEgsKCcoBBnN0cmluZwo6CgpncmFudF90eXBlEiwKKsIBEBIOcmVmcmVzaF90b2tlbgrCAQsSCXBhc3N3b3JkCsoBBnN0cmluZwoXCghwYXNzd29yZBILCgnKAQZzdHJpbmcKFAoFc2NvcGUSCwoJygEGc3RyaW5nChcKCHVzZXJuYW1lEgsKCcoBBnN0cmluZwqjAQoYVG9rZW5SZWZyZXNoUmVxdWVzdE1vZGVsEoYBCoMBugEKZ3JhbnRfdHlwZboBDXJlZnJlc2hfdG9rZW7KAQZvYmplY3T6AVoKOgoKZ3JhbnRfdHlwZRIsCirCARASDnJlZnJlc2hfdG9rZW4KwgELEglwYXNzd29yZArKAQZzdHJpbmcKHAoNcmVmcmVzaF90b2tlbhILCgnKAQZzdHJpbmcK0QYKEUF1dGhSZXNwb25zZUVycm9yErsGCrgGugERZXJyb3JfZGVzY3JpcHRpb266AQVlcnJvcsoBBm9iamVjdPoBjwYKIAoRZXJyb3JfZGVzY3JpcHRpb24SCwoJygEGc3RyaW5nCqIFCgVlcnJvchKYBQqVBcIBEhIQaW52YWxpZF9yZXF1ZXN0CsIBERIPaW52YWxpZF9jbGllbnQKwgEQEg5pbnZhbGlkX2dyYW50CsIBEBIOaW52YWxpZF9zY29wZQrCARYSFHVuYXV0aG9yaXplZF9jbGllbnQKwgEZEhd1bnN1cHBvcnRlZF9ncmFudF90eXBlCsoBBnN0cmluZ6IC+QIKE3gtZW51bS1kZXNjcmlwdGlvbnMS4QIS3gItIFJlcXVlc3QgaXMgbWlzc2luZyBhIHBhcmFtZXRlciBvciBjb250YWlucyBhbiB1bnN1cHBvcnRlZCBwYXJhbWV0ZXIgb2YgcmVwZWF0cyBwYXJhbWV0ZXJzLgotIENsaWVudCBhdXRoZW50aWNhdGlvbiBmYWlscyBkdWUgdG8gYW4gaW52YWxpZCBjbGllbnQgaWQgb3Igc2VjcmV0LgotIEF1dGhvcml6YXRpb24gY29kZSBvciBwYXNzd29yZCBpcyBpbnZhbGlkIG9yIGV4cGlyZWQuCi0gSW52YWxpZCBzY29wZSBmb3IgdGhlIGdpdmVuIGFjY2VzcyB0b2tlbi4KLSBDbGllbnQgaXMgbm90IGF1dGhvcml6ZWQgZm9yIHJlcXVlc3RlZCBncmFudCB0eXBlLgotIEdpdmVuIGdyYW50IHR5cGUgaXMgdW5zdXBwb3J0ZWQuCqIChwEKD3gtZW51bS12YXJuYW1lcxJ0EnItIElOVkFMSURfUkVRVUVTVAotIElOVkFMSURfQ0xJRU5UCi0gSU5WQUxJRF9HUkFOVAotIElOVkFMSURfU0NPUEUKLSBVTkFVVEhPUklaRURfQ0xJRU5UCi0gVU5TVVBQT1JURURfR1JBTlRfVFlQRQoKRgoGZXJyb3JzEjwKOsoBBWFycmF58gEvCi0SKwopIy9jb21wb25lbnRzL3NjaGVtYXMvQXV0aEVycm9yRGVzY3JpcHRpb24KQgoUQXV0aEVycm9yRGVzY3JpcHRpb24SKgooygEGb2JqZWN0+gEcChoKC2Rlc2NyaXB0aW9uEgsKCcoBBnN0cmluZzpOCgRhdXRoEkZBdXRoIFNlcnZlciBDbGllbnQgQVBJcyBmb3Igb2J0YWluaW5nLCByZWZyZXNoaW5nIGFuZCByZXZva2luZyBhIHRva2Vu')),
);

/// From: 3_0/recursion.yaml
final OpenApiProto<v3.Document> fixtures_3_0_recursion = (
  model: surface.Model.fromBuffer(base64Decode('CgdPcGVuQVBJEhMKA0ZvbyoMCgNmb28SA0ZvbxgDEhMKA0JhcioMCgNiYXoSA0JhehgDEhMKA0JheioMCgNiYXISA0JhchgDEmEKEVBPU1RfZm9vUmVzcG9uc2VzGi1QT1NUX2Zvb1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUE9TVF9mb28qHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA0ZvbxgDGikSBC9mb28aBFBPU1QqCFBPU1RfZm9vUhFQT1NUX2Zvb1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIWCgdPcGVuQVBJEgRUZXN0MgUxLjAuMCJZClcKBC9mb28STzJNQksSSQoDMjAwEkIKQAoIUmVzcG9uc2UaNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb28qtwEKtAEKOgoDRm9vEjMKMcoBBm9iamVjdPoBJQojCgNmb28SHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb28KOgoDQmFyEjMKMcoBBm9iamVjdPoBJQojCgNiYXoSHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXoKOgoDQmF6EjMKMcoBBm9iamVjdPoBJQojCgNiYXISHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXI=')),
);

/// From: 3_0/issues_13069.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issues_13069 = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0Eh0KBFVVSUQqFQoFdmFsdWUSBnN0cmluZyIEdXVpZBJXChJHRVRfdGVzdFBhcmFtZXRlcnMaL0dFVF90ZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF90ZXN0KhAKBHV1aWQSBFVVSUQYAygDGioSBS90ZXN0GgNHRVQqCEdFVF90ZXN0ShJHRVRfdGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIWCgRUZXN0Mg4xLjAuMC1TTkFQU0hPVCJOCkwKBS90ZXN0EkMiQTIuCiwKBHV1aWQSBXF1ZXJ5Uh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVVVJREIPEg0KAzIwMBIGCgQKAk9LKmwKagpoCgRVVUlEEmAKXooBS1thLWZBLUYwLTldezh9LVthLWZBLUYwLTldezR9LVthLWZBLUYwLTldezR9LVthLWZBLUYwLTldezR9LVthLWZBLUYwLTldezEyfcoBBnN0cmluZ5oCBHV1aWQ=')),
);

/// From: 3_0/examples.yaml
final OpenApiProto<v3.Document> fixtures_3_0_examples = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEhkKB2FkZHJlc3MqDgoEY2l0eRIGc3RyaW5nEhwKBFVzZXIqFAoHYWRkcmVzcxIHYWRkcmVzcxgDEkAKCUR1bW15VXNlcioOCgRuYW1lEgZzdHJpbmcqEAoGbnVtYmVyEgZzdHJpbmcqEQoHYWRkcmVzcxIGc3RyaW5nEn0KHUV4YW1wbGUxR2V0U2luZ3VsYXJQYXJhbWV0ZXJzGkVFeGFtcGxlMUdldFNpbmd1bGFyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEV4YW1wbGUxR2V0U2luZ3VsYXIqFQoJcGFyYW1ldGVyEgZzdHJpbmcoAxJ3ChtFeGFtcGxlMUdldFBsdXJhbFBhcmFtZXRlcnMaQUV4YW1wbGUxR2V0UGx1cmFsUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEV4YW1wbGUxR2V0UGx1cmFsKhUKCXBhcmFtZXRlchIGc3RyaW5nKAMSfQodRXhhbXBsZTJHZXRTaW5ndWxhclBhcmFtZXRlcnMaRUV4YW1wbGUyR2V0U2luZ3VsYXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRXhhbXBsZTJHZXRTaW5ndWxhcioVCglwYXJhbWV0ZXISBnN0cmluZygDEn0KHUV4YW1wbGUzR2V0U2luZ3VsYXJQYXJhbWV0ZXJzGkVFeGFtcGxlM0dldFNpbmd1bGFyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEV4YW1wbGUzR2V0U2luZ3VsYXIqFQoJcGFyYW1ldGVyEgZzdHJpbmcoAxJ3ChtFeGFtcGxlM0dldFBsdXJhbFBhcmFtZXRlcnMaQUV4YW1wbGUzR2V0UGx1cmFsUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEV4YW1wbGUzR2V0UGx1cmFsKhUKCXBhcmFtZXRlchIGc3RyaW5nKAMSUgpAZXhhbXBsZTRQb3N0U2luZ3VsYXJSZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCoOCgRuYW1lEgZzdHJpbmcSigEKH2V4YW1wbGU0UG9zdFNpbmd1bGFyUmVxdWVzdEJvZHkqZwohYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkEkBleGFtcGxlNFBvc3RTaW5ndWxhclJlcXVlc3RCb2R5YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkGAMSnAEKHkV4YW1wbGU0UG9zdFNpbmd1bGFyUGFyYW1ldGVycxpHRXhhbXBsZTRQb3N0U2luZ3VsYXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRXhhbXBsZTRQb3N0U2luZ3VsYXIqMQoMcmVxdWVzdF9ib2R5Eh9leGFtcGxlNFBvc3RTaW5ndWxhclJlcXVlc3RCb2R5GAMSUAo+ZXhhbXBsZTRQb3N0UGx1cmFsUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQqDgoEbmFtZRIGc3RyaW5nEoYBCh1leGFtcGxlNFBvc3RQbHVyYWxSZXF1ZXN0Qm9keSplCiFhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQSPmV4YW1wbGU0UG9zdFBsdXJhbFJlcXVlc3RCb2R5YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkGAMSlAEKHEV4YW1wbGU0UG9zdFBsdXJhbFBhcmFtZXRlcnMaQ0V4YW1wbGU0UG9zdFBsdXJhbFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBFeGFtcGxlNFBvc3RQbHVyYWwqLwoMcmVxdWVzdF9ib2R5Eh1leGFtcGxlNFBvc3RQbHVyYWxSZXF1ZXN0Qm9keRgDEqICCjFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsUmVzcG9uc2VzGm1HZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcqHgoUMzAxIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZyoeChQ0MDQgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nKh4KFDUwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcaYgoTZXhhbXBsZTFHZXRTaW5ndWxhchISL2V4YW1wbGUxL3Npbmd1bGFyGgNHRVQqE0V4YW1wbGUxR2V0U2luZ3VsYXJKHUV4YW1wbGUxR2V0U2luZ3VsYXJQYXJhbWV0ZXJzGloKEWV4YW1wbGUxR2V0UGx1cmFsEhAvZXhhbXBsZTEvcGx1cmFsGgNHRVQqEUV4YW1wbGUxR2V0UGx1cmFsShtFeGFtcGxlMUdldFBsdXJhbFBhcmFtZXRlcnMaYgoTZXhhbXBsZTJHZXRTaW5ndWxhchISL2V4YW1wbGUyL3Npbmd1bGFyGgNHRVQqE0V4YW1wbGUyR2V0U2luZ3VsYXJKHUV4YW1wbGUyR2V0U2luZ3VsYXJQYXJhbWV0ZXJzGmIKE2V4YW1wbGUzR2V0U2luZ3VsYXISEi9leGFtcGxlMy9zaW5ndWxhchoDR0VUKhNFeGFtcGxlM0dldFNpbmd1bGFySh1FeGFtcGxlM0dldFNpbmd1bGFyUGFyYW1ldGVycxpaChFleGFtcGxlM0dldFBsdXJhbBIQL2V4YW1wbGUzL3BsdXJhbBoDR0VUKhFFeGFtcGxlM0dldFBsdXJhbEobRXhhbXBsZTNHZXRQbHVyYWxQYXJhbWV0ZXJzGmYKFGV4YW1wbGU0UG9zdFNpbmd1bGFyEhIvZXhhbXBsZTQvc2luZ3VsYXIaBFBPU1QqFEV4YW1wbGU0UG9zdFNpbmd1bGFySh5FeGFtcGxlNFBvc3RTaW5ndWxhclBhcmFtZXRlcnMaXgoSZXhhbXBsZTRQb3N0UGx1cmFsEhAvZXhhbXBsZTQvcGx1cmFsGgRQT1NUKhJFeGFtcGxlNFBvc3RQbHVyYWxKHEV4YW1wbGU0UG9zdFBsdXJhbFBhcmFtZXRlcnMaqgEKKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWwSHC9leGFtcGxlNS9tdWx0aXBsZV9yZXNwb25zZXMaA0dFVCooR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoT25lT2ZNb2RlbFIxR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoT25lT2ZNb2RlbFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJZChBPcGVuQVBJIFBldHN0b3JlKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaHwodaHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vdjIiuQ0KhgEKEi9leGFtcGxlMS9zaW5ndWxhchJwIm4qE2V4YW1wbGUxR2V0U2luZ3VsYXIyNAoyCglwYXJhbWV0ZXISBXF1ZXJ5UgsKCcoBBnN0cmluZ1oREg9leGFtcGxlMSB2YWx1ZQpCIRIfCgMyMDASGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbgqaAQoQL2V4YW1wbGUxL3BsdXJhbBKFASKCASoRZXhhbXBsZTFHZXRQbHVyYWwySgpICglwYXJhbWV0ZXISBXF1ZXJ5UgsKCcoBBnN0cmluZ2InCiUKCUFuRXhhbXBsZRIYChYaFBISQW4gZXhhbXBsZTEgdmFsdWUKQiESHwoDMjAwEhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24KhgEKEi9leGFtcGxlMi9zaW5ndWxhchJwIm4qE2V4YW1wbGUyR2V0U2luZ3VsYXIyNAoyCglwYXJhbWV0ZXISBXF1ZXJ5UgsKCcoBBnN0cmluZ1oREg9leGFtcGxlMiB2YWx1ZQpCIRIfCgMyMDASGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbgqyAQoSL2V4YW1wbGUzL3Npbmd1bGFyEpsBIpgBKhNleGFtcGxlM0dldFNpbmd1bGFyMl4KXAoJcGFyYW1ldGVyEgVxdWVyeVIoCiY6GxIZJ2V4YW1wbGUzOiBzY2hlbWEgdmFsdWUnCsoBBnN0cmluZ1oeEhwnZXhhbXBsZTM6IHBhcmFtZXRlciB2YWx1ZScKQiESHwoDMjAwEhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24K2QEKEC9leGFtcGxlMy9wbHVyYWwSxAEiwQEqEWV4YW1wbGUzR2V0UGx1cmFsMogBCoUBCglwYXJhbWV0ZXISBXF1ZXJ5UigKJjobEhknZXhhbXBsZTM6IHNjaGVtYSB2YWx1ZScKygEGc3RyaW5nWh4SHCdleGFtcGxlMzogcGFyYW1ldGVyIHZhbHVlJwpiJwolCglBbkV4YW1wbGUSGAoWGhQSEkFuIGV4YW1wbGUzIHZhbHVlCkIhEh8KAzIwMBIYChYKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uCrgBChIvZXhhbXBsZTQvc2luZ3VsYXISoQEyngEqFGV4YW1wbGU0UG9zdFNpbmd1bGFyOmMKYRJfCl0KIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBI4CiMKIcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZxIREg9leGFtcGxlNCB2YWx1ZQpCIRIfCgMyMDASGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbgrKAQoQL2V4YW1wbGU0L3BsdXJhbBK1ATKyASoSZXhhbXBsZTRQb3N0UGx1cmFsOnkKdxJ1CnMKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBJOCiMKIcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZxonCiUKCUFuRXhhbXBsZRIYChYaFBISQW4gZXhhbXBsZTQgdmFsdWUKQiESHwoDMjAwEhgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24K7gMKHC9leGFtcGxlNS9tdWx0aXBsZV9yZXNwb25zZXMSzQMiygMqKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWxCnQMSZgoDMjAwEl8KXQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aRQpDChBhcHBsaWNhdGlvbi9qc29uEi8KLQorOiASHmEgc3VjY2Vzc2Z1bCByZXNwb25zZSBleGFtcGxlCsoBBnN0cmluZxJiCgMzMDESWwpZChJwZXJtYW5lbnQgcmVkaXJlY3QaQwpBChBhcHBsaWNhdGlvbi9qc29uEi0KKwopOh4SHGEgcmVkaXJlY3QgcmVzcG9uc2UgZXhhbXBsZQrKAQZzdHJpbmcSWgoDNDA0ElMKUQoJbm90IGZvdW5kGkQKQgoQYXBwbGljYXRpb24vanNvbhIuCiwKKjofEh1hIG5vdCBmb3VuZCByZXNwb25zZSBleGFtcGxlCsoBBnN0cmluZxJzCgM1MDASbApqChVpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IaUQpPChBhcHBsaWNhdGlvbi9qc29uEjsKOQo3OiwSKmFuIGludGVybmFsIHNlcnZlciBlcnJvciByZXNwb25zZSBleGFtcGxlCsoBBnN0cmluZyriAQrfAQpICgRVc2VyEkAKPsoBBm9iamVjdPoBMgowCgdhZGRyZXNzEiUKIwgBygEGb2JqZWN0+gEVChMKBGNpdHkSCwoJygEGc3RyaW5nCpIBCglEdW1teVVzZXIShAEKgQHKAQZvYmplY3T6AXUKIgoEbmFtZRIaChiKAQwvXlthLXpcc10rJC/KAQZzdHJpbmcKJAoGbnVtYmVyEhoKGIoBDC9bMC05XXsxMH0vZ8oBBnN0cmluZwopCgdhZGRyZXNzEh4KHIoBEC9eW2EtejAtOVxzXSskL2nKAQZzdHJpbmc=')),
);

/// From: 3_0/simplifyAnyOfStringAndEnumString_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_simplify_any_of_string_and_enum_string_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEiMKCkVudW1TdHJpbmcqFQoFdmFsdWUSBnN0cmluZ1IBQVIBQhIzCglBbnlPZlRlc3QqDwoFdmFsdWUSBnN0cmluZyoVCgV2YWx1ZRIGc3RyaW5nUgFBUgFCEigKD1NpbmdsZUFueU9mVGVzdCoVCgV2YWx1ZRIGc3RyaW5nUgFBUgFCEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElsKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCUFueU9mVGVzdBgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK9AQq6AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmwEimAEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSxJJCgMyMDASQgpACgJPSxo6CjgKEGFwcGxpY2F0aW9uL2pzb24SJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0FueU9mVGVzdCrtAQrqAQppCglBbnlPZlRlc3QSXApa4gELCgnKAQZzdHJpbmfiASMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvRW51bVN0cmluZ5ICI3RvIHRlc3QgYW55T2YgKHN0cmluZywgZW51bSBzdHJpbmcpCicKCkVudW1TdHJpbmcSGQoXwgEEEgJBCsIBBBICQgrKAQZzdHJpbmcKVAoPU2luZ2xlQW55T2ZUZXN0EkEKP+IBGQoXwgEEEgJBCsIBBBICQgrKAQZzdHJpbmeSAiB0byB0ZXN0IGFueU9mIChlbnVtIHN0cmluZyBvbmx5KQ==')),
);

/// From: 3_0/issue796.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue796 = (
  model: surface.Model.fromBuffer(base64Decode('CglJc3N1ZSA3OTYSLQocTWFwVGVzdDFBZGRpdGlvbmFsUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRJOCghNYXBUZXN0MSpCChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSJ21hcFtzdHJpbmddTWFwVGVzdDFBZGRpdGlvbmFsUHJvcGVydGllcxgBEhkKCE1hcFRlc3QyEAEiC2ludGVyZmFjZXt9Ei0KHE1hcFRlc3QzQWRkaXRpb25hbFByb3BlcnRpZXMQASILaW50ZXJmYWNle30STgoITWFwVGVzdDMqQgoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEidtYXBbc3RyaW5nXU1hcFRlc3QzQWRkaXRpb25hbFByb3BlcnRpZXMYARIZCghPdGhlck9iahABIgtpbnRlcmZhY2V7fRJvCglNYXBPYmplY3QqFwoJbWFwX3Rlc3QxEghNYXBUZXN0MRgDKhcKCW1hcF90ZXN0MhIITWFwVGVzdDIYAyoXCgltYXBfdGVzdDMSCE1hcFRlc3QzGAMqFwoJb3RoZXJfb2JqEghPdGhlck9iahgDGhYSBS90ZXN0GgNHRVQqCEdFVF90ZXN0')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJSCglJc3N1ZSA3OTYqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBoaChhodHRwOi8vbG9jYWxob3N0OjEyMy9hcGkiNQozCgUvdGVzdBIqIigKBHRlc3RCIBIeCgMyMDESFwoVChNTdWNjZXNzZnVsIHJlc3BvbnNlKrgDCrUDCjQKCE1hcFRlc3QxEigKJsoBBm9iamVjdIICBAoCCgCSAhNUaGlzIHR5cGUgZXhhbXBsZSAxCjIKCE1hcFRlc3QyEiYKJMoBBm9iamVjdIICAhABkgITVGhpcyB0eXBlIGV4YW1wbGUgMgo9CghNYXBUZXN0MxIxCi/KAQZvYmplY3SCAg0KCwoJygEGb2JqZWN0kgITVGhpcyB0eXBlIGV4YW1wbGUgMwoyCghPdGhlck9iahImCiTKAQZvYmplY3SCAgIQAJICE1RoaXMgdHlwZSBleGFtcGxlIDQK1QEKCU1hcE9iamVjdBLHAQrEAfoBwAEKLgoJbWFwX3Rlc3QxEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvTWFwVGVzdDEKLgoJbWFwX3Rlc3QyEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvTWFwVGVzdDIKLgoJbWFwX3Rlc3QzEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvTWFwVGVzdDMKLgoJb3RoZXJfb2JqEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvT3RoZXJPYmo=')),
);

/// From: 3_0/allOf_composition_discriminator.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_composition_discriminator = (
  model: surface.Model.fromBuffer(base64Decode('CipPQUkgU3BlY2lmaWNhdGlvbiBleGFtcGxlIGZvciBQb2x5bW9ycGhpc20SGAoDUGV0KhEKB3BldFR5cGUSBnN0cmluZxIoCgNDYXQqEQoHcGV0VHlwZRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZxIcCgdSZXB0aWxlKhEKB3BldFR5cGUSBnN0cmluZxIoCgNEb2cqEQoHcGV0VHlwZRIGc3RyaW5nKg4KBGJhcmsSBnN0cmluZxIyCgZMaXphcmQqEQoHcGV0VHlwZRIGc3RyaW5nKhUKCmxvdmVzUm9ja3MSB2Jvb2xlYW4SLgoFU25ha2UqEQoHcGV0VHlwZRIGc3RyaW5nKhIKB2hhc0xlZ3MSB2Jvb2xlYW4SVQoGTXlQZXRzKhEKB3BldFR5cGUSBnN0cmluZyoOCgRuYW1lEgZzdHJpbmcqEQoHcGV0VHlwZRIGc3RyaW5nKhUKCmxvdmVzUm9ja3MSB2Jvb2xlYW4SWwoMTXlQZXRzTm9EaXNjKhEKB3BldFR5cGUSBnN0cmluZyoOCgRuYW1lEgZzdHJpbmcqEQoHcGV0VHlwZRIGc3RyaW5nKhUKCmxvdmVzUm9ja3MSB2Jvb2xlYW4SFgoBQSoRCgdwZXRUeXBlEgZzdHJpbmcSFgoBQioRCgdwZXRUeXBlEgZzdHJpbmcSFgoBQyoRCgdwZXRUeXBlEgZzdHJpbmcSXgoQR0VUX3BldFJlc3BvbnNlcxorR0VUX3BldFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX3BldCodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMSbgoUR0VUX3JlcHRpbGVSZXNwb25zZXMaM0dFVF9yZXB0aWxlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfcmVwdGlsZSohChQyMDAgYXBwbGljYXRpb24vanNvbhIHUmVwdGlsZRgDEmoKE0dFVF9teXBldHNSZXNwb25zZXMaMUdFVF9teXBldHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9teXBldHMqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBk15UGV0cxgDGiYSBC9wZXQaA0dFVCoHR0VUX3BldFIQR0VUX3BldFJlc3BvbnNlcxoyEggvcmVwdGlsZRoDR0VUKgtHRVRfcmVwdGlsZVIUR0VUX3JlcHRpbGVSZXNwb25zZXMaLxIHL215cGV0cxoDR0VUKgpHRVRfbXlwZXRzUhNHRVRfbXlwZXRzUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIzCipPQUkgU3BlY2lmaWNhdGlvbiBleGFtcGxlIGZvciBQb2x5bW9ycGhpc20yBTEuMC4wIo0CClMKBC9wZXQSSyJJQkcSRQoDMjAwEj4KPAoEZGVzYxo0CjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldApbCggvcmVwdGlsZRJPIk1CSxJJCgMyMDASQgpACgRkZXNjGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvUmVwdGlsZQpZCgcvbXlwZXRzEk4iTEJKEkgKAzIwMBJBCj8KBGRlc2MaNwo1ChBhcHBsaWNhdGlvbi9qc29uEiEKHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9NeVBldHMqqQYKpgYKQgoDUGV0EjsKORIJCgdwZXRUeXBlugEHcGV0VHlwZcoBBm9iamVjdPoBGAoWCgdwZXRUeXBlEgsKCcoBBnN0cmluZwpOCgNDYXQSRwpF0gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBIwohygEGb2JqZWN0+gEVChMKBG5hbWUSCwoJygEGc3RyaW5nCiwKB1JlcHRpbGUSIQof0gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldApOCgNEb2cSRwpF0gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBIwohygEGb2JqZWN0+gEVChMKBGJhcmsSCwoJygEGc3RyaW5nClwKBkxpemFyZBJSClDSASASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvUmVwdGlsZdIBKgooygEGb2JqZWN0+gEcChoKCmxvdmVzUm9ja3MSDAoKygEHYm9vbGVhbgpYCgVTbmFrZRJPCk3SASASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvUmVwdGlsZdIBJwolygEGb2JqZWN0+gEZChcKB2hhc0xlZ3MSDAoKygEHYm9vbGVhbgpYCgZNeVBldHMSTgpMEgkKB3BldFR5cGXaARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvQ2F02gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0xpemFyZApTCgxNeVBldHNOb0Rpc2MSQwpB2gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0NhdNoBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9MaXphcmQKXwoBQRJaClgSKAoHcGV0VHlwZRIdChsKAWISFiMvY29tcG9uZW50cy9zY2hlbWFzL0K6AQdwZXRUeXBlygEGb2JqZWN0+gEYChYKB3BldFR5cGUSCwoJygEGc3RyaW5nCiQKAUISHwod0gEaEhgKFiMvY29tcG9uZW50cy9zY2hlbWFzL0EKJAoBQxIfCh3SARoSGAoWIy9jb21wb25lbnRzL3NjaGVtYXMvQg==')),
);

/// From: 3_0/oneOf_nonPrimitive.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_non_primitive = (
  model: surface.Model.fromBuffer(base64Decode('ChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlEl8KB0V4YW1wbGUqFQoFdmFsdWUSBnN0cmluZyIEdXVpZCoaCgV2YWx1ZRIGc3RyaW5nIglkYXRlLXRpbWUqEAoFdmFsdWUSB2ludGVnZXIqDwoFdmFsdWUSBm51bWJlchJZCg1MaXN0UmVzcG9uc2VzGiVMaXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0KiEKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdFeGFtcGxlGAMaKgoEbGlzdBIIL2V4YW1wbGUaA0dFVCoETGlzdFINTGlzdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIpChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJhCl8KCC9leGFtcGxlElMiUSoEbGlzdEJJEkcKAzIwMBJACj4KAk9LGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZSpdClsKWQoHRXhhbXBsZRJOCkzaARIKEMoBBnN0cmluZ5oCBHV1aWTaARcKFcoBBnN0cmluZ5oCCWRhdGUtdGltZdoBDAoKygEHaW50ZWdlctoBCwoJygEGbnVtYmVy')),
);

/// From: 3_0/petstore-with-complex-headers.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_with_complex_headers = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/issue-17367.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_17367 = (
  model: surface.Model.fromBuffer(base64Decode('CgdGb28gQVBJEjcKHlJlcXVlc3RCb2R5bXVsdGlwYXJ0L2Zvcm0tZGF0YSoVCgNiYXISBnN0cmluZyIGYmluYXJ5EkYKC1JlcXVlc3RCb2R5KjcKE211bHRpcGFydC9mb3JtLWRhdGESHlJlcXVlc3RCb2R5bXVsdGlwYXJ0L2Zvcm0tZGF0YRgDEmQKElBPU1RfZm9vUGFyYW1ldGVycxovUE9TVF9mb29QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9mb28qHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDGioSBC9mb28aBFBPU1QqCFBPU1RfZm9vShJQT1NUX2Zvb1BhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIQCgdGb28gQVBJMgUxLjAuMBo2CiBodHRwOi8vMTI3LjAuMC4xOjgwODAve2Jhc2VQYXRofRoSChAKCGJhc2VQYXRoEgQSAnYxImkKZwoEL2ZvbxJfMl06SgpIEkYKRAoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRItCisKKcoBBm9iamVjdPoBHQobCgNiYXISFAoSygEGc3RyaW5nmgIGYmluYXJ5Qg8SDQoDMjAwEgYKBAoCT0s=')),
);

/// From: 3_0/nested_anyof.yaml
final OpenApiProto<v3.Document> fixtures_3_0_nested_anyof = (
  model: surface.Model.fromBuffer(base64Decode('CiFQcm9ibGVtIGV4YW1wbGUgd2l0aCBuZXN0ZWQgYW55T2YSGAoHTnVsbE9uZRABIgtpbnRlcmZhY2V7fRItCghTb21lRGF0YSoPCgV2YWx1ZRIGc3RyaW5nKhAKBXZhbHVlEgdpbnRlZ2Vy')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIqCiFQcm9ibGVtIGV4YW1wbGUgd2l0aCBuZXN0ZWQgYW55T2YyBTEuMC4wIgAqcApuChcKB051bGxPbmUSDAoKwgEHEgVudWxsCgpTCghTb21lRGF0YRJHCkXiAR8KHeIBCwoJygEGc3RyaW5n4gEMCgrKAQdpbnRlZ2Vy4gEgEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL051bGxPbmU=')),
);

/// From: 3_0/pingBearerAuth.yaml
final OpenApiProto<v3.Document> fixtures_3_0_ping_bearer_auth = (
  model: surface.Model.fromBuffer(base64Decode('CglwaW5nIHRlc3QaHgoHcGluZ0dldBIFL3BpbmcaA0dFVCoHUGluZ0dldA==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglwaW5nIHRlc3QyAzEuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwODAvIicKJQoFL3BpbmcSHCIaKgdwaW5nR2V0Qg8SDQoDMjAxEgYKBAoCT0sqKTonCiUKCmJlYXJlckF1dGgSFwoVCgRodHRwKgZiZWFyZXIyBXRva2VuMhAKDgoKYmVhcmVyQXV0aBIA')),
);

/// From: 3_0/enum.yaml
final OpenApiProto<v3.Document> fixtures_3_0_enum = (
  model: surface.Model.fromBuffer(base64Decode('CgpTYW1wbGUgQVBJEhYKBFBvbnkqDgoEdHlwZRIEVHlwZRgDEi8KBFR5cGUqJwoFdmFsdWUSBnN0cmluZ1IFRWFydGhSBlBlZ2FzaVIHVW5pY29ybhJoChNHRVRfcG9uaWVzUmVzcG9uc2VzGjFHRVRfcG9uaWVzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfcG9uaWVzKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgRQb255GAIaWxIHL3BvbmllcxoDR0VUIipPcHRpb25hbCBleHRlbmRlZCBkZXNjcmlwdGlvbiBpbiBNYXJrZG93bi4qCkdFVF9wb25pZXNSE0dFVF9wb25pZXNSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIxCgpTYW1wbGUgQVBJEhxBUEkgZGVzY3JpcHRpb24gaW4gTWFya2Rvd24uMgUxLjAuMCKrAQqoAQoHL3BvbmllcxKcASKZARIUUmV0dXJucyBhbGwgYW5pbWFscy4aKk9wdGlvbmFsIGV4dGVuZGVkIGRlc2NyaXB0aW9uIGluIE1hcmtkb3duLkJVElMKAzIwMBJMCkoKAk9LGkQKQgoQYXBwbGljYXRpb24vanNvbhIuCiwKKsoBBWFycmF58gEfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvUG9ueSp6CngKPQoEUG9ueRI1CjPKAQZvYmplY3T6AScKJQoEdHlwZRIdEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL1R5cGUKNwoEVHlwZRIvCi3CAQgSBkVhcnRoCsIBCRIHUGVnYXNpCsIBChIIVW5pY29ybgrKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_4876_format_email.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_4876_format_email = (
  model: surface.Model.fromBuffer(base64Decode('CgxFbWFpbEV4YW1wbGUSOQoPcGVyc29uV2l0aEVtYWlsKg4KBG5hbWUSBnN0cmluZyoWCgVlbWFpbBIGc3RyaW5nIgVlbWFpbBI0CgtSZXF1ZXN0Qm9keSolChBhcHBsaWNhdGlvbi9qc29uEg9wZXJzb25XaXRoRW1haWwYAxJqChRQVVRfcGVyc29uUGFyYW1ldGVycxozUFVUX3BlcnNvblBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQVVRfcGVyc29uKh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxowEgcvcGVyc29uGgNQVVQqClBVVF9wZXJzb25KFFBVVF9wZXJzb25QYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIcCgxFbWFpbEV4YW1wbGUqBQoDTUlUMgUxLjAuMBobChlodHRwOi8vYXBpLmV4YW1wbGUueHl6L3YxIm4KbAoHL3BlcnNvbhJhKl86RApCEkAKPgoQYXBwbGljYXRpb24vanNvbhIqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvcGVyc29uV2l0aEVtYWlsQhcSFQoDMjA0Eg4KDAoKTm8gQ29udGVudCpSClAKTgoPcGVyc29uV2l0aEVtYWlsEjsKOfoBNgoWCgRuYW1lEg4KDHj/AcoBBnN0cmluZwocCgVlbWFpbBITChHKAQZzdHJpbmeaAgVlbWFpbA==')),
);

/// From: 3_0/issue_16223.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_16223 = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0EnsKBFRlc3QqMwoLd2l0aERlZmF1bHQSImlzc3VlXzE2MjIzX2VudW1fd2l0aF9kZWZhdWx0LnlhbWwYAyo+ChB3aXRoRW1wdHlEZWZhdWx0Eihpc3N1ZV8xNjIyM19lbnVtX3dpdGhfZGVmYXVsdF9lbXB0eS55YW1sGAMSrwIKEkdFVF90ZXN0UGFyYW1ldGVycxovR0VUX3Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX3Rlc3QqPQoTZmlsZUVudW1XaXRoRGVmYXVsdBIiaXNzdWVfMTYyMjNfZW51bV93aXRoX2RlZmF1bHQueWFtbBgDKAMqSAoYZmlsZUVudW1XaXRoRGVmYXVsdEVtcHR5Eihpc3N1ZV8xNjIyM19lbnVtX3dpdGhfZGVmYXVsdF9lbXB0eS55YW1sGAMoAyosChVpbmxpbmVFbnVtV2l0aERlZmF1bHQSBnN0cmluZxgCKANSAUFSAUJSAUMqMQoaaW5saW5lRW51bVdpdGhEZWZhdWx0RW1wdHkSBnN0cmluZxgCKANSAUFSAUJSAUMaKhIFL3Rlc3QaA0dFVCoIR0VUX3Rlc3RKEkdFVF90ZXN0UGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIWCgRUZXN0Mg4xLjAuMC1TTkFQU0hPVCLxAgruAgoFL3Rlc3QS5AIi4QIySApGChNmaWxlRW51bVdpdGhEZWZhdWx0EgVxdWVyeVIoEiYKJC4vaXNzdWVfMTYyMjNfZW51bV93aXRoX2RlZmF1bHQueWFtbDJTClEKGGZpbGVFbnVtV2l0aERlZmF1bHRFbXB0eRIFcXVlcnlSLhIsCiouL2lzc3VlXzE2MjIzX2VudW1fd2l0aF9kZWZhdWx0X2VtcHR5LnlhbWwyVApSChVpbmxpbmVFbnVtV2l0aERlZmF1bHQSBXF1ZXJ5UjIKMMoBBWFycmF58gEiCiAKHsIBBBICQQrCAQQSAkIKwgEEEgJDCsoBBnN0cmluZ4oCADJZClcKGmlubGluZUVudW1XaXRoRGVmYXVsdEVtcHR5EgVxdWVyeVIyCjDKAQVhcnJhefIBIgogCh7CAQQSAkEKwgEEEgJCCsIBBBICQwrKAQZzdHJpbmeKAgBCDxINCgMyMDASBgoECgJPSyqbAQqYAQqVAQoEVGVzdBKMAQqJAcoBBm9iamVjdPoBfQo3Cgt3aXRoRGVmYXVsdBIoEiYKJC4vaXNzdWVfMTYyMjNfZW51bV93aXRoX2RlZmF1bHQueWFtbApCChB3aXRoRW1wdHlEZWZhdWx0Ei4SLAoqLi9pc3N1ZV8xNjIyM19lbnVtX3dpdGhfZGVmYXVsdF9lbXB0eS55YW1s')),
);

/// From: 3_0/issue4584.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue4584 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEm4KA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqKgoGc3RhdHVzEgZzdHJpbmdSCWF2YWlsYWJsZVIHcGVuZGluZ1IEc29sZBIuChFhZGRQZXRSZXF1ZXN0Qm9keSoZChBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAxJkChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0KiMKDHJlcXVlc3RfYm9keRIRYWRkUGV0UmVxdWVzdEJvZHkYAxJmChRHZXRQZXRCeUlkUGFyYW1ldGVycxozR2V0UGV0QnlJZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRQZXRCeUlkKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEEmcKE0dldFBldEJ5SWRSZXNwb25zZXMaMUdldFBldEJ5SWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFBldEJ5SWQqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgDGi4KBmFkZFBldBIEL3BldBoEUE9TVCoGQWRkUGV0ShBBZGRQZXRQYXJhbWV0ZXJzGmwKCmdldFBldEJ5SWQSDC9wZXQve3BldElkfRoDR0VUIhRSZXR1cm5zIGEgc2luZ2xlIHBldCoKR2V0UGV0QnlJZEoUR2V0UGV0QnlJZFBhcmFtZXRlcnNSE0dldFBldEJ5SWRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKXAQoQT3BlbkFQSSBQZXRzdG9yZRI8VXNlZCBmb3IgdmVyaWZpY2F0aW9uIG9mIEF1dGhvcml6YXRpb25TY29wZSByZXNvbHV0aW9uIGlzc3VlKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaHwodaHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vdjIi0AQK6AEKBC9wZXQS3wEy3AEKA3BldBIaQWRkIGEgbmV3IHBldCB0byB0aGUgc3RvcmUqBmFkZFBldDo4CjYSNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRCGhIYCgM0MDUSEQoPCg1JbnZhbGlkIGlucHV0WioKKAoNcGV0c3RvcmVfYXV0aBIXCgp3cml0ZTpwZXRzCglyZWFkOnBldHNaLwotChJwZXRzdG9yZV9iZXRhX2F1dGgSFwoKd3JpdGU6cGV0cwoJcmVhZDpwZXRzCuICCgwvcGV0L3twZXRJZH0S0QIizgIKA3BldBIORmluZCBwZXQgYnkgSUQaFFJldHVybnMgYSBzaW5nbGUgcGV0KgpnZXRQZXRCeUlkMjwKOgoFcGV0SWQSBHBhdGgaE0lEIG9mIHBldCB0byByZXR1cm4gAVIUChLKAQdpbnRlZ2VymgIFaW50NjRCkQESVQoDMjAwEk4KTAoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSHgoDNDAwEhcKFQoTSW52YWxpZCBJRCBzdXBwbGllZBIYCgM0MDQSEQoPCg1QZXQgbm90IGZvdW5kWh4KHAoNcGV0c3RvcmVfYXV0aBILCglyZWFkOnBldHNaIwohChJwZXRzdG9yZV9iZXRhX2F1dGgSCwoJcmVhZDpwZXRzKq4FCpMCCpACCgNQZXQSiAIKhQJKBWEgUGV0ugEEbmFtZboBCXBob3RvVXJsc8oBBm9iamVjdPoBvAEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0Ch4KBG5hbWUSFgoUOgkSB2RvZ2dpZQrKAQZzdHJpbmcKJwoJcGhvdG9VcmxzEhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZwpVCgZzdGF0dXMSSwpJwgEMEgphdmFpbGFibGUKwgEKEghwZW5kaW5nCsIBBxIFc29sZArKAQZzdHJpbmeSAhdwZXQgc3RhdHVzIGluIHRoZSBzdG9yZZICH0EgcGV0IGZvciBzYWxlIGluIHRoZSBwZXQgc3RvcmU6lQMKwAEKDXBldHN0b3JlX2F1dGgSrgEKqwEKBm9hdXRoMjqgASKdAQonaHR0cHM6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL29hdXRoMi9hdXRoEihodHRwczovL3BldHN0b3JlLnN3YWdnZXIuaW8vb2F1dGgyL3Rva2VuIkgKKQoKd3JpdGU6cGV0cxIbbW9kaWZ5IHBldHMgaW4geW91ciBhY2NvdW50ChsKCXJlYWQ6cGV0cxIOcmVhZCB5b3VyIHBldHMKzwEKEnBldHN0b3JlX2JldGFfYXV0aBK4AQq1AQoGb2F1dGgyOqoBIqcBCixodHRwczovL3BldHN0b3JlLmJldGEuc3dhZ2dlci5pby9vYXV0aDIvYXV0aBItaHR0cHM6Ly9wZXRzdG9yZS5iZXRhLnN3YWdnZXIuaW8vb2F1dGgyL3Rva2VuIkgKKQoKd3JpdGU6cGV0cxIbbW9kaWZ5IHBldHMgaW4geW91ciBhY2NvdW50ChsKCXJlYWQ6cGV0cxIOcmVhZCB5b3VyIHBldHM=')),
);

/// From: 3_0/unsigned-test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_unsigned_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEhMKA0ZvbyoMCgNiYXISA0JhchgDEu4DCgtmb3JtYXRfdGVzdCoSCgdpbnRlZ2VyEgdpbnRlZ2VyKhcKBWludDMyEgdpbnRlZ2VyIgVpbnQzMioiChB1bnNpZ25lZF9pbnRlZ2VyEgdpbnRlZ2VyIgVpbnQzMioXCgVpbnQ2NBIHaW50ZWdlciIFaW50NjQqHwoNdW5zaWduZWRfbG9uZxIHaW50ZWdlciIFaW50NjQqEAoGbnVtYmVyEgZudW1iZXIqFgoFZmxvYXQSBm51bWJlciIFZmxvYXQqGAoGZG91YmxlEgZudW1iZXIiBmRvdWJsZSoZCgdkZWNpbWFsEgZzdHJpbmciBm51bWJlcioQCgZzdHJpbmcSBnN0cmluZyoUCgRieXRlEgZzdHJpbmciBGJ5dGUqGAoGYmluYXJ5EgZzdHJpbmciBmJpbmFyeSoUCgRkYXRlEgZzdHJpbmciBGRhdGUqHQoIZGF0ZVRpbWUSBnN0cmluZyIJZGF0ZS10aW1lKhQKBHV1aWQSBnN0cmluZyIEdXVpZCocCghwYXNzd29yZBIGc3RyaW5nIghwYXNzd29yZCodChNwYXR0ZXJuX3dpdGhfZGlnaXRzEgZzdHJpbmcqKwohcGF0dGVybl93aXRoX2RpZ2l0c19hbmRfZGVsaW1pdGVyEgZzdHJpbmcSKwoYRGVmYXVsdCBhcHBsaWNhdGlvbi9qc29uKg8KBnN0cmluZxIDRm9vGAMSZgoQR0VUX2Zvb1Jlc3BvbnNlcxorR0VUX2Zvb1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX2ZvbyolCgdkZWZhdWx0EhhEZWZhdWx0IGFwcGxpY2F0aW9uL2pzb24YAxomEgQvZm9vGgNHRVQqB0dFVF9mb29SEEdFVF9mb29SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBL2AQoQT3BlbkFQSSBQZXRzdG9yZRKaAVRoaXMgc3BlYyBpcyBtYWlubHkgZm9yIHRlc3RpbmcgUGV0c3RvcmUgc2VydmVyIGFuZCBjb250YWlucyBmYWtlIGVuZHBvaW50cywgbW9kZWxzLiBQbGVhc2UgZG8gbm90IHVzZSB0aGlzIGZvciBhbnkgb3RoZXIgcHVycG9zZS4gU3BlY2lhbCBjaGFyYWN0ZXJzOiAiIFwqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBqMAQokaHR0cDovL3tzZXJ2ZXJ9LnN3YWdnZXIuaW86e3BvcnR9L3YyEg9wZXRzdG9yZSBzZXJ2ZXIaUwo5CgZzZXJ2ZXISLwoIcGV0c3RvcmUKC3FhLXBldHN0b3JlCgxkZXYtcGV0c3RvcmUSCHBldHN0b3JlChYKBHBvcnQSDgoCODAKBDgwODASAjgwGk8KIGh0dHBzOi8vbG9jYWxob3N0OjgwODAve3ZlcnNpb259EhBUaGUgbG9jYWwgc2VydmVyGhkKFwoHdmVyc2lvbhIMCgJ2MQoCdjISAnYyGkMKHWh0dHBzOi8vMTI3LjAuMC4xL25vX3ZhcmlhYmxlEiJUaGUgbG9jYWwgc2VydmVyIHdpdGhvdXQgdmFyaWFibGVzImwKagoEL2ZvbxJiImBCXgpcCloKCHJlc3BvbnNlGk4KTAoQYXBwbGljYXRpb24vanNvbhI4CjYKNMoBBm9iamVjdPoBKAomCgZzdHJpbmcSHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb28qmgwKqAkKOgoDRm9vEjMKMcoBBm9iamVjdPoBJQojCgNiYXISHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXIK6QgKC2Zvcm1hdF90ZXN0EtkICtYIugEGbnVtYmVyugEEYnl0ZboBBGRhdGW6AQhwYXNzd29yZMoBBm9iamVjdPoBpwgKMgoHaW50ZWdlchInCiVRAAAAAAAAAEBZAAAAAAAAWUBpAAAAAAAAJEDKAQdpbnRlZ2VyCi8KBWludDMyEiYKJFkAAAAAAABpQGkAAAAAAAA0QMoBB2ludGVnZXKaAgVpbnQzMgpSChB1bnNpZ25lZF9pbnRlZ2VyEj4KPFkAAAAAAABpQGkAAAAAAAA0QMoBB2ludGVnZXKaAgVpbnQzMqICFQoKeC11bnNpZ25lZBIHEgV0cnVlCgodCgVpbnQ2NBIUChLKAQdpbnRlZ2VymgIFaW50NjQKPQoNdW5zaWduZWRfbG9uZxIsCirKAQdpbnRlZ2VymgIFaW50NjSiAhUKCngtdW5zaWduZWQSBxIFdHJ1ZQoKMAoGbnVtYmVyEiYKJFEAAAAAAEBAQFmamZmZmfmAQGnNzMzMzAxAQMoBBm51bWJlcgouCgVmbG9hdBIlCiNZzczMzMzcjkBpZmZmZmYmS0DKAQZudW1iZXKaAgVmbG9hdAowCgZkb3VibGUSJgokWZqZmZmZ2V5AaTMzMzMz81BAygEGbnVtYmVymgIGZG91YmxlCh8KB2RlY2ltYWwSFAoSygEGc3RyaW5nmgIGbnVtYmVyCiAKBnN0cmluZxIWChSKAQgvW2Etel0vacoBBnN0cmluZwoaCgRieXRlEhIKEMoBBnN0cmluZ5oCBGJ5dGUKHgoGYmluYXJ5EhQKEsoBBnN0cmluZ5oCBmJpbmFyeQorCgRkYXRlEiMKIToPEg0iMjAyMC0wMi0wMiIKygEGc3RyaW5nmgIEZGF0ZQpDCghkYXRlVGltZRI3CjU6HhIcIjIwMDctMTItMDNUMTA6MTU6MzArMDE6MDAiCsoBBnN0cmluZ5oCCWRhdGUtdGltZQpDCgR1dWlkEjsKOTonEiU3MmY5ODA2OS0yMDZkLTRmMTItOWYxMi0zZDFlNTI1YThlODQKygEGc3RyaW5nmgIEdXVpZAonCghwYXNzd29yZBIbChl4QIABCsoBBnN0cmluZ5oCCHBhc3N3b3JkCmsKE3BhdHRlcm5fd2l0aF9kaWdpdHMSVApSigEIXlxkezEwfSTKAQZzdHJpbmeSAjtBIHN0cmluZyB0aGF0IGlzIGEgMTAgZGlnaXQgbnVtYmVyLiBDYW4gaGF2ZSBsZWFkaW5nIHplcm9zLgqtAQohcGF0dGVybl93aXRoX2RpZ2l0c19hbmRfZGVsaW1pdGVyEocBCoQBigESL15pbWFnZV9cZHsxLDN9JC9pygEGc3RyaW5nkgJjQSBzdHJpbmcgc3RhcnRpbmcgd2l0aCAnaW1hZ2VfJyAoY2FzZSBpbnNlbnNpdGl2ZSkgYW5kIG9uZSB0byB0aHJlZSBkaWdpdHMgZm9sbG93aW5nIGkuZS4gSW1hZ2VfMDEuOuwCCpgBCg1wZXRzdG9yZV9hdXRoEoYBCoMBCgZvYXV0aDI6eQp3CitodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby9hcGkvb2F1dGgvZGlhbG9nIkgKKQoKd3JpdGU6cGV0cxIbbW9kaWZ5IHBldHMgaW4geW91ciBhY2NvdW50ChsKCXJlYWQ6cGV0cxIOcmVhZCB5b3VyIHBldHMKJgoHYXBpX2tleRIbChkKBmFwaUtleRoHYXBpX2tleSIGaGVhZGVyCjEKDWFwaV9rZXlfcXVlcnkSIAoeCgZhcGlLZXkaDWFwaV9rZXlfcXVlcnkiBXF1ZXJ5CiIKD2h0dHBfYmFzaWNfdGVzdBIPCg0KBGh0dHAqBWJhc2ljCiQKC2JlYXJlcl90ZXN0EhUKEwoEaHR0cCoGYmVhcmVyMgNKV1QKKgoTaHR0cF9zaWduYXR1cmVfdGVzdBITChEKBGh0dHAqCXNpZ25hdHVyZTohCgNwZXQSGkV2ZXJ5dGhpbmcgYWJvdXQgeW91ciBQZXRzOiIKBXN0b3JlEhlBY2Nlc3MgdG8gUGV0c3RvcmUgb3JkZXJzOh0KBHVzZXISFU9wZXJhdGlvbnMgYWJvdXQgdXNlcg==')),
);

/// From: 3_0/enum-and-inner-enum-uri.yaml
final OpenApiProto<v3.Document> fixtures_3_0_enum_and_inner_enum_uri = (
  model: surface.Model.fromBuffer(base64Decode('CgtFeGFtcGxlIEFQSRJsCghNZXRhZGF0YSpgCgV2YWx1ZRIGc3RyaW5nIgN1cmlSJGh0dHBzOi8vZXhhbXBsZS5jb20vdjEvbWV0YWRhdGEuanNvblIkaHR0cHM6Ly9leGFtcGxlLmNvbS92Mi9tZXRhZGF0YS5qc29uEo8BChhEZWZhdWx0IGFwcGxpY2F0aW9uL2pzb24qWwoEZGF0YRIGc3RyaW5nIgN1cmlSImh0dHBzOi8vZXhhbXBsZS5jb20vdjEvc2NoZW1hLmpzb25SImh0dHBzOi8vZXhhbXBsZS5jb20vdjIvc2NoZW1hLmpzb24qFgoIbWV0YWRhdGESCE1ldGFkYXRhGAMSewoXR0VUX3YxX3NjaGVtYXNSZXNwb25zZXMaOUdFVF92MV9zY2hlbWFzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfdjFfc2NoZW1hcyolCgdkZWZhdWx0EhhEZWZhdWx0IGFwcGxpY2F0aW9uL2pzb24YAxo7EgsvdjEvc2NoZW1hcxoDR0VUKg5HRVRfdjFfc2NoZW1hc1IXR0VUX3YxX3NjaGVtYXNSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIRCgtFeGFtcGxlIEFQSTICdjEaIwoQaHR0cDovL2xvY2FsaG9zdBIPR2xvYmFsIEVuZHBvaW50IrkCCrYCCgsvdjEvc2NoZW1hcxKmAiKjAhIVR2V0IGEgbGlzdCBvZiBzY2hlbWFzQokCCoYCCoMCCg9MaXN0IG9mIHNjaGVtYXMa7wEK7AEKEGFwcGxpY2F0aW9uL2pzb24S1wEK1AEK0QHKAQZvYmplY3T6AcQBCpIBCgRkYXRhEokBCoYBwgElEiNodHRwczovL2V4YW1wbGUuY29tL3YxL3NjaGVtYS5qc29uCsIBJRIjaHR0cHM6Ly9leGFtcGxlLmNvbS92Mi9zY2hlbWEuanNvbgrKAQZzdHJpbmeKAiQaImh0dHBzOi8vZXhhbXBsZS5jb20vdjEvc2NoZW1hLmpzb26aAgN1cmkKLQoIbWV0YWRhdGESIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9NZXRhZGF0YSp1CnMKcQoITWV0YWRhdGESZQpjwgEnEiVodHRwczovL2V4YW1wbGUuY29tL3YxL21ldGFkYXRhLmpzb24KwgEnEiVodHRwczovL2V4YW1wbGUuY29tL3YyL21ldGFkYXRhLmpzb24KygEGc3RyaW5nmgIDdXJp')),
);

/// From: 3_0/issue_10725.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_10725 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjYKGU9iamVjdENvbnRhaW5pbmdCeXRlQXJyYXkqGQoJYnl0ZUFycmF5EgZzdHJpbmciBGJ5dGUSLwoLUmVxdWVzdEJvZHkqIAoQYXBwbGljYXRpb24vanNvbhIGc3RyaW5nIgRieXRlEoIBChxQT1NUX1R4UnhCeXRlQXJyYXlQYXJhbWV0ZXJzGkNQT1NUX1R4UnhCeXRlQXJyYXlQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9UeFJ4Qnl0ZUFycmF5Kh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxKGAQobUE9TVF9UeFJ4Qnl0ZUFycmF5UmVzcG9uc2VzGkFQT1NUX1R4UnhCeXRlQXJyYXlSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBPU1RfVHhSeEJ5dGVBcnJheSokChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nIgRieXRlEsUBCitHRVRfUnhSZWZPYmplY3RDb250YWluaW5nQnl0ZUFycmF5UmVzcG9uc2VzGmFHRVRfUnhSZWZPYmplY3RDb250YWluaW5nQnl0ZUFycmF5UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfUnhSZWZPYmplY3RDb250YWluaW5nQnl0ZUFycmF5KjMKFDIwMCBhcHBsaWNhdGlvbi9qc29uEhlPYmplY3RDb250YWluaW5nQnl0ZUFycmF5GAMaZRIOL1R4UnhCeXRlQXJyYXkaBFBPU1QqElBPU1RfVHhSeEJ5dGVBcnJheUocUE9TVF9UeFJ4Qnl0ZUFycmF5UGFyYW1ldGVyc1IbUE9TVF9UeFJ4Qnl0ZUFycmF5UmVzcG9uc2VzGncSHy9SeFJlZk9iamVjdENvbnRhaW5pbmdCeXRlQXJyYXkaA0dFVCoiR0VUX1J4UmVmT2JqZWN0Q29udGFpbmluZ0J5dGVBcnJheVIrR0VUX1J4UmVmT2JqZWN0Q29udGFpbmluZ0J5dGVBcnJheVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJ7ChBPcGVuQVBJIFBldHN0b3JlEiBieXRlQXJyYXkgc2NoZW1hIGlzWCB0eXBlIGNoZWNrcyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGiIKIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvOjgwL3YyIqMCCo8BCg4vVHhSeEJ5dGVBcnJheRJ9Mns6MAouEioKKAoQYXBwbGljYXRpb24vanNvbhIUChIKEMoBBnN0cmluZ5oCBGJ5dGUYAUJHEkUKAzIwMBI+CjwKDkNvbXBvc2VkT2JqZWN0GioKKAoQYXBwbGljYXRpb24vanNvbhIUChIKEMoBBnN0cmluZ5oCBGJ5dGUKjgEKHy9SeFJlZk9iamVjdENvbnRhaW5pbmdCeXRlQXJyYXkSayJpQmcSZQoDMjAwEl4KXAoOQ29tcG9zZWROdW1iZXIaSgpIChBhcHBsaWNhdGlvbi9qc29uEjQKMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9PYmplY3RDb250YWluaW5nQnl0ZUFycmF5KlAKTgpMChlPYmplY3RDb250YWluaW5nQnl0ZUFycmF5Ei8KLcoBBm9iamVjdPoBIQofCglieXRlQXJyYXkSEgoQygEGc3RyaW5nmgIEYnl0ZQ==')),
);

/// From: 3_0/issue_9848.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_9848 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEiAKC3VuaXF1ZUFycmF5KhEKBWFycmF5EgZzdHJpbmcYAhIjCg5ub25VbmlxdWVBcnJheSoRCgVhcnJheRIGc3RyaW5nGAISfgoYR0VUX3VuaXF1ZVR5cGVzUmVzcG9uc2VzGjtHRVRfdW5pcXVlVHlwZXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF91bmlxdWVUeXBlcyolChQyMDAgYXBwbGljYXRpb24vanNvbhILdW5pcXVlQXJyYXkYAxKKAQobR0VUX25vblVuaXF1ZVR5cGVzUmVzcG9uc2VzGkFHRVRfbm9uVW5pcXVlVHlwZXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9ub25VbmlxdWVUeXBlcyooChQyMDAgYXBwbGljYXRpb24vanNvbhIObm9uVW5pcXVlQXJyYXkYAxo+EgwvdW5pcXVlVHlwZXMaA0dFVCoPR0VUX3VuaXF1ZVR5cGVzUhhHRVRfdW5pcXVlVHlwZXNSZXNwb25zZXMaRxIPL25vblVuaXF1ZVR5cGVzGgNHRVQqEkdFVF9ub25VbmlxdWVUeXBlc1IbR0VUX25vblVuaXF1ZVR5cGVzUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJmChBPcGVuQVBJIFBldHN0b3JlEgtzYW1wbGUgc3BlYyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGiIKIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvOjgwL3YyIuQBCmsKDC91bmlxdWVUeXBlcxJbIllCVxJVCgMyMDASTgpMCgx1bmlxdWUgYXJyYXkaPAo6ChBhcHBsaWNhdGlvbi9qc29uEiYKJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy91bmlxdWVBcnJheQp1Cg8vbm9uVW5pcXVlVHlwZXMSYiJgQl4SXAoDMjAwElUKUwoQbm9uLXVuaXF1ZSBhcnJheRo/Cj0KEGFwcGxpY2F0aW9uL2pzb24SKQonEiUKIyMvY29tcG9uZW50cy9zY2hlbWFzL25vblVuaXF1ZUFycmF5KpEBCo4BCkUKC3VuaXF1ZUFycmF5EjYKNMoBBm9iamVjdPoBKAomCgVhcnJheRIdChugAQHKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKRQoObm9uVW5pcXVlQXJyYXkSMwoxygEGb2JqZWN0+gElCiMKBWFycmF5EhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZzpMCgNpc1gSRWFuIGFwaSB0aGF0IGVuc3VyZXMgdGhhdCBpc1ggcHJvcGVydGllcyBhcmUgcHJlc2VudCBvbiBTY2hlbWEgY2xhc3Nlcw==')),
);

/// From: 3_0/issue15859.json
final OpenApiProto<v3.Document> fixtures_3_0_issue15859 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEhgKBkFuaW1hbCoOCgRuYW1lEgZzdHJpbmcSJQoDRG9nKg4KBG5hbWUSBnN0cmluZyoOCgR0eXBlEgZzdHJpbmcSJQoDQ2F0Kg4KBG5hbWUSBnN0cmluZyoOCgR0eXBlEgZzdHJpbmcSRQoDUGV0Kg4KBG5hbWUSBnN0cmluZyoOCgR0eXBlEgZzdHJpbmcqDgoEbmFtZRIGc3RyaW5nKg4KBHR5cGUSBnN0cmluZxJVCg1HRVRfUmVzcG9uc2VzGiVHRVRfUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfKh0KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAxo6EgEvGgNHRVQiG2dldCBhbGwgcGV0cyBpbiBhIGhvdXNlaG9sZCoER0VUX1INR0VUX1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIZChBPcGVuQVBJIFBldHN0b3JlMgUxLjAuMCJ/Cn0KAS8SeCJ2GhtnZXQgYWxsIHBldHMgaW4gYSBob3VzZWhvbGRCVxJVCgMyMDASTgpMChRzdWNjZXNzZnVsIG9wZXJhdGlvbho0CjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldCrIAgrFAgpPCgNQZXQSSApGEgYKBHR5cGXaARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvRG9n2gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0NhdAo0CgZBbmltYWwSKgoougEEdHlwZcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZwpdCgNEb2cSVgpUugEEdHlwZdIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9BbmltYWzSASgKJkoDRG9nygEGb2JqZWN0+gEVChMKBHR5cGUSCwoJygEGc3RyaW5nCl0KA0NhdBJWClS6AQR0eXBl0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0FuaW1hbNIBKAomSgNDYXTKAQZvYmplY3T6ARUKEwoEdHlwZRILCgnKAQZzdHJpbmc=')),
);

/// From: 3_0/deepobject-array-with-pattern.yaml
final OpenApiProto<v3.Document> fixtures_3_0_deepobject_array_with_pattern = (
  model: surface.Model.fromBuffer(base64Decode('CiJkZWVwb2JqZWN0LWFycmF5LXdpdGgtcGF0dGVybi10ZXN0EhgKB09wdGlvbnMqDQoBYRIGc3RyaW5nGAISUQoOVGVzdFBhcmFtZXRlcnMaJ1Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVGVzdCoWCgdvcHRpb25zEgdPcHRpb25zGAMoAxJQCg1UZXN0UmVzcG9uc2VzGiVUZXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBUZXN0KhgKDjIwMCB0ZXh0L3BsYWluEgZzdHJpbmcaNwoEdGVzdBIFL3Rlc3QaA0dFVCoEVGVzdEoOVGVzdFBhcmFtZXRlcnNSDVRlc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIrCiJkZWVwb2JqZWN0LWFycmF5LXdpdGgtcGF0dGVybi10ZXN0MgUxLjAuMCKIAQqFAQoFL3Rlc3QSfCJ6KgR0ZXN0MkIKQAoHb3B0aW9ucxIFcXVlcnk6CmRlZXBPYmplY3RAAVIgEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL09wdGlvbnNCLhIsCgMyMDASJQojCgJPSxodChsKCnRleHQvcGxhaW4SDQoLCgnKAQZzdHJpbmcqSQpHCkUKB09wdGlvbnMSOgo4ygEGb2JqZWN0+gEsCioKAWESJQojygEFYXJyYXnyARgKFgoUigEIXltBLVpdLirKAQZzdHJpbmc=')),
);

/// From: 3_0/3248-regression-dates.yaml
final OpenApiProto<v3.Document> fixtures_3_0_3248_regression_dates = (
  model: surface.Model.fromBuffer(base64Decode('CgRpbmZvEngKGUdFVF9leGFtcGxlX2FwaVBhcmFtZXRlcnMaPUdFVF9leGFtcGxlX2FwaVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfZXhhbXBsZV9hcGkqHAoFc3RhcnQSBnN0cmluZyIJZGF0ZS10aW1lKAMSdwoYR0VUX2V4YW1wbGVfYXBpUmVzcG9uc2VzGjtHRVRfZXhhbXBsZV9hcGlSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9leGFtcGxlX2FwaSoeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGmYSDC9leGFtcGxlL2FwaRoDR0VUIgtkZXNjcmlwdGlvbioPR0VUX2V4YW1wbGVfYXBpShlHRVRfZXhhbXBsZV9hcGlQYXJhbWV0ZXJzUhhHRVRfZXhhbXBsZV9hcGlSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhITCgRpbmZvEgRpbmZvMgUwLjEuMCKnAQqkAQoML2V4YW1wbGUvYXBpEpMBIpABEgdzdW1tYXJ5GgtkZXNjcmlwdGlvbjI8CjoKBXN0YXJ0EgVxdWVyeRoPVGhlIHN0YXJ0IHRpbWUuIAFSFwoVygEGc3RyaW5nmgIJZGF0ZS10aW1lQjoSOAoDMjAwEjEKLwoIcmVzcG9uc2UaIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5n')),
);

/// From: 3_0/validation.yaml
final OpenApiProto<v3.Document> fixtures_3_0_validation = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSGgoGYmFuYW5hKhAKBWNvdW50EgdpbnRlZ2VyElgKDUdFVF9SZXNwb25zZXMaJUdFVF9SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF8qIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBmJhbmFuYRgDGh0SAS8aA0dFVCoER0VUX1INR0VUX1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIlUKUwoBLxJOIkxCShJICgMyMDASQQo/CgRkZXNjGjcKNQoQYXBwbGljYXRpb24vanNvbhIhCh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvYmFuYW5hKlEKTwpNCgZiYW5hbmESQwpBSgZiYW5hbmH6ATYKNAoFY291bnQSKwopUQAAAAAAABRAWQAAAAAAAFlAYAFpAAAAAAAAJEBwAcoBB2ludGVnZXI=')),
);

/// From: 3_0/echo_api.yaml
final OpenApiProto<v3.Document> fixtures_3_0_echo_api = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/elm.yaml
final OpenApiProto<v3.Document> fixtures_3_0_elm = (
  model: surface.Model.fromBuffer(base64Decode('ChJFbG0gZ2VuZXJhdG9yIHRlc3QSXwoGQWJzZW50KhEKB2RlZmF1bHQSBnN0cmluZyoSCghyZXF1aXJlZBIGc3RyaW5nKhIKCG51bGxhYmxlEgZzdHJpbmcqGgoQcmVxdWlyZWROdWxsYWJsZRIGc3RyaW5nEmwKBUFycmF5KhEKBWFycmF5EgZzdHJpbmcYAioYCgxhcnJheU9mQXJyYXkSBnN0cmluZxgCKh8KEGFycmF5T2ZQcmltaXRpdmUSCVByaW1pdGl2ZRgCKhUKC2FycmF5T2ZFbnVtEgRFbnVtGAISHgoMQ29tcG9zZWRCYXNlKg4KBGJhc2USBm51bWJlchIrCghDb21wb3NlZCoOCgRiYXNlEgZudW1iZXIqDwoFdmFsdWUSBnN0cmluZxIfCg1EaXNjcmltaW5hdGVkKg4KBGtpbmQSBnN0cmluZxItCg5EaXNjcmltaW5hdGVkQSoOCgRraW5kEgZzdHJpbmcqCwoBYRIGc3RyaW5nEi0KDkRpc2NyaW1pbmF0ZWRCKg4KBGtpbmQSBnN0cmluZyoLCgFiEgZzdHJpbmcSJgoERW51bSoeCgV2YWx1ZRIGc3RyaW5nUgNmb29SA2JhclIDYmF6EiQKCEVudW1lcmljKhgKBXZhbHVlEgZudW1iZXJSATFSATJSATMSJgoFTWF5YmUqDgoEdHlwZRIGc3RyaW5nKg0KAmlmEgdib29sZWFuEhUKBk9uZU9mQSoLCgFhEgZzdHJpbmcSFQoGT25lT2ZCKgsKAWISBnN0cmluZxIhCgVPbmVPZioLCgFhEgZzdHJpbmcqCwoBYhIGc3RyaW5nEroBCglQcmltaXRpdmUqEAoGc3RyaW5nEgZzdHJpbmcqEAoGbnVtYmVyEgZudW1iZXIqFgoFZmxvYXQSBm51bWJlciIFZmxvYXQqGAoGZG91YmxlEgZudW1iZXIiBmRvdWJsZSoSCgdpbnRlZ2VyEgdpbnRlZ2VyKhcKBXNob3J0EgdpbnRlZ2VyIgVpbnQzMioWCgRsb25nEgdpbnRlZ2VyIgVpbnQ2NCoSCgdib29sZWFuEgdib29sZWFuEk4KCVJlY3Vyc2lvbioUCgVtYXliZRIJUmVjdXJzaW9uGAMqEwoEbGlzdBIJUmVjdXJzaW9uGAIqFgoDcmVmEg1SZWN1cnNpb25Mb29wGAMSIwoNUmVjdXJzaW9uTG9vcCoSCgNyZWYSCVJlY3Vyc2lvbhgDEqABChBVbnNhZmVDaGFyYWN0ZXJzKhEKByRwcmVmaXgSBnN0cmluZyoRCgdzdWZmaXgkEgZzdHJpbmcqFgoMckBuZDBtXyR0I2ZmEgZzdHJpbmcqEQoHX2JlZm9yZRIGc3RyaW5nKhAKBmFmdGVyXxIGc3RyaW5nKhAKBl9ib3RoXxIGc3RyaW5nKhcKDWluX3RoZV9taWRkbGUSBnN0cmluZxI0ChF1cGRhdGVSZXF1ZXN0Qm9keSofChBhcHBsaWNhdGlvbi9qc29uEglQcmltaXRpdmUYAxJkChBVcGRhdGVQYXJhbWV0ZXJzGitVcGRhdGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVXBkYXRlKiMKDHJlcXVlc3RfYm9keRIRdXBkYXRlUmVxdWVzdEJvZHkYAxJhCg9VcGRhdGVSZXNwb25zZXMaKVVwZGF0ZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVXBkYXRlKiMKFDIwMCBhcHBsaWNhdGlvbi9qc29uEglQcmltaXRpdmUYAxKdAQoVUE9TVF9oZWFkZXJQYXJhbWV0ZXJzGjVQT1NUX2hlYWRlclBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX2hlYWRlcioSCgZzdHJpbmcSBnN0cmluZygBKhQKB2ludGVnZXISB2ludGVnZXIoASojCgpoZWFkZXJUeXBlEgZzdHJpbmcoAVIEbGVmdFIFcmlnaHQSawoUUE9TVF9oZWFkZXJSZXNwb25zZXMaM1BPU1RfaGVhZGVyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2hlYWRlcioeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nEmYKEkdFVF9tYXliZVJlc3BvbnNlcxovR0VUX21heWJlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfbWF5YmUqHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBU1heWJlGAMS4gEKLUdFVF9wYXRoX3N0cmluZ19pbnRlZ2VyX2VudW1lcmF0aW9uUGFyYW1ldGVycxplR0VUX3BhdGhfc3RyaW5nX2ludGVnZXJfZW51bWVyYXRpb25QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX3BhdGhfc3RyaW5nX2ludGVnZXJfZW51bWVyYXRpb24qEgoGc3RyaW5nEgZzdHJpbmcoBCoUCgdpbnRlZ2VyEgdpbnRlZ2VyKAQqIAoLZW51bWVyYXRpb24SBnN0cmluZygEUgFhUgFiUgFjEokBChNHRVRfcXVlcnlQYXJhbWV0ZXJzGjFHRVRfcXVlcnlQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX3F1ZXJ5KhIKBnN0cmluZxIGc3RyaW5nKAMqEAoDaW50EgdpbnRlZ2VyKAMqGQoEZW51bRIGc3RyaW5nKANSAWFSAWJSAWMSXgoSR0VUX3V1aWRQYXJhbWV0ZXJzGi9HRVRfdXVpZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfdXVpZCoXCgV2YWx1ZRIGc3RyaW5nIgR1dWlkKAMSaAoRR0VUX3V1aWRSZXNwb25zZXMaLUdFVF91dWlkUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfdXVpZCokChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nIgR1dWlkGkAKBnVwZGF0ZRIFL2RhdGEaBFBPU1QqBlVwZGF0ZUoQVXBkYXRlUGFyYW1ldGVyc1IPVXBkYXRlUmVzcG9uc2VzGkkSBy9oZWFkZXIaBFBPU1QqC1BPU1RfaGVhZGVyShVQT1NUX2hlYWRlclBhcmFtZXRlcnNSFFBPU1RfaGVhZGVyUmVzcG9uc2VzGiwSBi9tYXliZRoDR0VUKglHRVRfbWF5YmVSEkdFVF9tYXliZVJlc3BvbnNlcxqBARImL3BhdGgve3N0cmluZ30ve2ludGVnZXJ9L3tlbnVtZXJhdGlvbn0aA0dFVCojR0VUX3BhdGhfc3RyaW5nX2ludGVnZXJfZW51bWVyYXRpb25KLUdFVF9wYXRoX3N0cmluZ19pbnRlZ2VyX2VudW1lcmF0aW9uUGFyYW1ldGVycxotEgYvcXVlcnkaA0dFVCoJR0VUX3F1ZXJ5ShNHRVRfcXVlcnlQYXJhbWV0ZXJzGh4SCC9zZWN1cmVkGgRQT1NUKgxQT1NUX3NlY3VyZWQaPRIFL3V1aWQaA0dFVCoIR0VUX3V1aWRKEkdFVF91dWlkUGFyYW1ldGVyc1IRR0VUX3V1aWRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIiChJFbG0gZ2VuZXJhdG9yIHRlc3QqBQoDTUlUMgUxLjAuMBoXChVodHRwOi8vbG9jYWxob3N0OjkwMDAi4wgKywEKBS9kYXRhEsEBMr4BCglwcmltaXRpdmUqBnVwZGF0ZTpOCkwKDFJlcXVlc3QgYm9keRI6CjgKEGFwcGxpY2F0aW9uL2pzb24SJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL1ByaW1pdGl2ZRgBQlkSVwoDMjAwElAKTgoQRGVmYXVsdCByZXNwb25zZRo6CjgKEGFwcGxpY2F0aW9uL2pzb24SJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL1ByaW1pdGl2ZQrTAQoHL2hlYWRlchLHATLEATIhCh8KBnN0cmluZxIGaGVhZGVyIAFSCwoJygEGc3RyaW5nMiEKHwoHaW50ZWdlchIGaGVhZGVyUgwKCsoBB2ludGVnZXIyOAo2CgpoZWFkZXJUeXBlEgZoZWFkZXJSIAoewgEHEgVsZWZ0CsIBCBIGcmlnaHQKygEGc3RyaW5nQkISQAoDMjAwEjkKNwoQRGVmYXVsdCByZXNwb25zZRojCiEKEGFwcGxpY2F0aW9uL2pzb24SDQoLCgnKAQZzdHJpbmcKYwoGL21heWJlElkiV0JVElMKAzIwMBJMCkoKEERlZmF1bHQgcmVzcG9uc2UaNgo0ChBhcHBsaWNhdGlvbi9qc29uEiAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9NYXliZQrMAQomL3BhdGgve3N0cmluZ30ve2ludGVnZXJ9L3tlbnVtZXJhdGlvbn0SoQEingEyHwodCgZzdHJpbmcSBHBhdGggAVILCgnKAQZzdHJpbmcyIQofCgdpbnRlZ2VyEgRwYXRoIAFSDAoKygEHaW50ZWdlcjI5CjcKC2VudW1lcmF0aW9uEgRwYXRoIAFSIAoewgEEEgJhCsIBBBICYgrCAQQSAmMKygEGc3RyaW5nQh0SGwoDMjAwEhQKEgoQRGVmYXVsdCByZXNwb25zZQqeAQoGL3F1ZXJ5EpMBIpABMh4KHAoGc3RyaW5nEgVxdWVyeVILCgnKAQZzdHJpbmcyHAoaCgNpbnQSBXF1ZXJ5UgwKCsoBB2ludGVnZXIyMQovCgRlbnVtEgVxdWVyeVIgCh7CAQQSAmEKwgEEEgJiCsIBBBICYwrKAQZzdHJpbmdCHRIbCgMyMDASFAoSChBEZWZhdWx0IHJlc3BvbnNlCmoKCC9zZWN1cmVkEl4yXBIQU2VjdXJlZCBlbmRwb2ludEI2EhgKAzIwMBIRCg8KDUF1dGhlbnRpY2F0ZWQSGgoDNDAxEhMKEQoPVW5hdXRoZW50aWNhdGVkWhAKDgoKQmVhcmVyQXV0aBIACnwKBS91dWlkEnMicTIkCiIKBXZhbHVlEgVxdWVyeVISChDKAQZzdHJpbmeaAgR1dWlkQkkSRwoDMjAwEkAKPgoQRGVmYXVsdCByZXNwb25zZRoqCigKEGFwcGxpY2F0aW9uL2pzb24SFAoSChDKAQZzdHJpbmeaAgR1dWlkKqMQCvkPCsQBCgZBYnNlbnQSuQEKtgG6AQhyZXF1aXJlZLoBEHJlcXVpcmVkTnVsbGFibGX6AW8KFgoHZGVmYXVsdBILCgnKAQZzdHJpbmcKFwoIcmVxdWlyZWQSCwoJygEGc3RyaW5nChkKCG51bGxhYmxlEg0KCwgBygEGc3RyaW5nCiEKEHJlcXVpcmVkTnVsbGFibGUSDQoLCAHKAQZzdHJpbmeSAiNNb2RlbCBoYXZpbmcgYWJzZW50IGFuZCBudWxsIHZhbHVlcwqgAgoFQXJyYXkSlgIKkwK6AQVhcnJheboBDGFycmF5T2ZBcnJhefoB5AEKIwoFYXJyYXkSGgoYygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCjkKDGFycmF5T2ZBcnJheRIpCifKAQVhcnJhefIBHAoaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKRQoQYXJyYXlPZlByaW1pdGl2ZRIxCi/KAQVhcnJhefIBJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL1ByaW1pdGl2ZQo7CgthcnJheU9mRW51bRIsCirKAQVhcnJhefIBHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL0VudW2SAhFNb2RlbCB3aXRoIGFycmF5cwpuCghDb21wb3NlZBJiCmDSASUSIwohIy9jb21wb25lbnRzL3NjaGVtYXMvQ29tcG9zZWRCYXNl0gEkCiLKAQZvYmplY3T6ARYKFAoFdmFsdWUSCwoJygEGc3RyaW5nkgIOQ29tcG9zZWQgbW9kZWwKMQoMQ29tcG9zZWRCYXNlEiEKH7oBBGJhc2X6ARUKEwoEYmFzZRILCgnKAQZudW1iZXIKUAoNRGlzY3JpbWluYXRlZBI/Cj0SBgoEa2luZLoBBGtpbmT6ARUKEwoEa2luZBILCgnKAQZzdHJpbmeSAhNEaXNjcmltaW5hdGVkIG1vZGVsCmAKDkRpc2NyaW1pbmF0ZWRBEk4KTNIBJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9EaXNjcmltaW5hdGVk0gEgCh7KAQZvYmplY3T6ARIKEAoBYRILCgnKAQZzdHJpbmcKYAoORGlzY3JpbWluYXRlZEISTgpM0gEmEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0Rpc2NyaW1pbmF0ZWTSASAKHsoBBm9iamVjdPoBEgoQCgFiEgsKCcoBBnN0cmluZwouCgRFbnVtEiYKJMIBBhIEZm9vCsIBBhIEYmFyCsIBBhIEYmF6CsoBBnN0cmluZwosCghFbnVtZXJpYxIgCh7CAQQSAjEKwgEEEgIyCsIBBBICMwrKAQZudW1iZXIKVAoFTWF5YmUSSwpJ+gEpChMKBHR5cGUSCwoJygEGc3RyaW5nChIKAmlmEgwKCsoBB2Jvb2xlYW6SAhpNb2RlbCB1c2luZyByZXNlcnZlZCB3b3JkcwpjCgVPbmVPZhJaCljaAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvT25lT2ZB2gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL09uZU9mQpICEU9uZSBvZiB0d28gbW9kZWxzCiEKBk9uZU9mQRIXChX6ARIKEAoBYRILCgnKAQZzdHJpbmcKIQoGT25lT2ZCEhcKFfoBEgoQCgFiEgsKCcoBBnN0cmluZwqSAgoJUHJpbWl0aXZlEoQCCoEC+gHbAQoVCgZzdHJpbmcSCwoJygEGc3RyaW5nChUKBm51bWJlchILCgnKAQZudW1iZXIKHAoFZmxvYXQSEwoRygEGbnVtYmVymgIFZmxvYXQKHgoGZG91YmxlEhQKEsoBBm51bWJlcpoCBmRvdWJsZQoXCgdpbnRlZ2VyEgwKCsoBB2ludGVnZXIKHQoFc2hvcnQSFAoSygEHaW50ZWdlcpoCBWludDMyChwKBGxvbmcSFAoSygEHaW50ZWdlcpoCBWludDY0ChcKB2Jvb2xlYW4SDAoKygEHYm9vbGVhbpICH01vZGVsIHdpdGggcHJpbWl0aXZlIHByb3BlcnRpZXMKrAEKCVJlY3Vyc2lvbhKeAQqbAfoBlwEKKwoFbWF5YmUSIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9SZWN1cnNpb24KOQoEbGlzdBIxCi/KAQVhcnJhefIBJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL1JlY3Vyc2lvbgotCgNyZWYSJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9SZWN1cnNpb25Mb29wCkEKDVJlY3Vyc2lvbkxvb3ASMAou+gErCikKA3JlZhIiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL1JlY3Vyc2lvbgrtAQoQVW5zYWZlQ2hhcmFjdGVycxLYAQrVAfoBsQEKFgoHJHByZWZpeBILCgnKAQZzdHJpbmcKFgoHc3VmZml4JBILCgnKAQZzdHJpbmcKGwoMckBuZDBtXyR0I2ZmEgsKCcoBBnN0cmluZwoWCgdfYmVmb3JlEgsKCcoBBnN0cmluZwoVCgZhZnRlcl8SCwoJygEGc3RyaW5nChUKBl9ib3RoXxILCgnKAQZzdHJpbmcKHAoNaW5fdGhlX21pZGRsZRILCgnKAQZzdHJpbmeSAh1Nb2RlbCB1c2luZyB1bnNhZmUgY2hhcmFjdGVyczolCiMKCkJlYXJlckF1dGgSFQoTCgRodHRwKgZiZWFyZXIyA0pXVA==')),
);

/// From: 3_0/composed-oneof.yaml
final OpenApiProto<v3.Document> fixtures_3_0_composed_oneof = (
  model: surface.Model.fromBuffer(base64Decode('CgpvbmVPZiB0ZXN0Ei0KBE9iakEqEgoIcmVhbHR5cGUSBnN0cmluZyoRCgdtZXNzYWdlEgZzdHJpbmcSSQoET2JqQioSCghyZWFsdHlwZRIGc3RyaW5nKhUKC2Rlc2NyaXB0aW9uEgZzdHJpbmcqFgoEY29kZRIHaW50ZWdlciIFaW50MzISfQoRQ3VzdG9tT25lT2ZTY2hlbWEqEgoIcmVhbHR5cGUSBnN0cmluZyoRCgdtZXNzYWdlEgZzdHJpbmcqEgoIcmVhbHR5cGUSBnN0cmluZyoVCgtkZXNjcmlwdGlvbhIGc3RyaW5nKhYKBGNvZGUSB2ludGVnZXIiBWludDMyEisKBE9iakMqEgoIcmVhbHR5cGUSBnN0cmluZyoPCgVzdGF0ZRIGc3RyaW5nEqcBChZDdXN0b21PbmVPZkFycmF5U2NoZW1hKhIKCHJlYWx0eXBlEgZzdHJpbmcqEQoHbWVzc2FnZRIGc3RyaW5nKhIKCHJlYWx0eXBlEgZzdHJpbmcqFQoLZGVzY3JpcHRpb24SBnN0cmluZyoWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioSCghyZWFsdHlwZRIGc3RyaW5nKg8KBXN0YXRlEgZzdHJpbmcSKwoET2JqRCoSCghyZWFsdHlwZRIGc3RyaW5nKg8KBWNvbG9yEgZzdHJpbmcSpQEKFDIwMCBhcHBsaWNhdGlvbi9qc29uKhIKCHJlYWx0eXBlEgZzdHJpbmcqEQoHbWVzc2FnZRIGc3RyaW5nKhIKCHJlYWx0eXBlEgZzdHJpbmcqFQoLZGVzY3JpcHRpb24SBnN0cmluZyoWCgRjb2RlEgdpbnRlZ2VyIgVpbnQzMioSCghyZWFsdHlwZRIGc3RyaW5nKg8KBWNvbG9yEgZzdHJpbmcScgoRR2V0U3RhdGVSZXNwb25zZXMaLUdldFN0YXRlUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRTdGF0ZSouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxKSAQomY3JlYXRlU3RhdGVSZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL2pzb24qEgoIcmVhbHR5cGUSBnN0cmluZyoRCgdtZXNzYWdlEgZzdHJpbmcqEgoIcmVhbHR5cGUSBnN0cmluZyoVCgtkZXNjcmlwdGlvbhIGc3RyaW5nKhYKBGNvZGUSB2ludGVnZXIiBWludDMyElYKFmNyZWF0ZVN0YXRlUmVxdWVzdEJvZHkqPAoQYXBwbGljYXRpb24vanNvbhImY3JlYXRlU3RhdGVSZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL2pzb24YAxJ4ChVDcmVhdGVTdGF0ZVBhcmFtZXRlcnMaNUNyZWF0ZVN0YXRlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENyZWF0ZVN0YXRlKigKDHJlcXVlc3RfYm9keRIWY3JlYXRlU3RhdGVSZXF1ZXN0Qm9keRgDGjQKCGdldFN0YXRlEgYvc3RhdGUaA0dFVCoIR2V0U3RhdGVSEUdldFN0YXRlUmVzcG9uc2VzGj8KC2NyZWF0ZVN0YXRlEgYvc3RhdGUaBFBPU1QqC0NyZWF0ZVN0YXRlShVDcmVhdGVTdGF0ZVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRITCgpvbmVPZiB0ZXN0MgUxLjAuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwMDAvIpAECo0ECgYvc3RhdGUSggQinQIqCGdldFN0YXRlQpACEo0CCgMyMDAShQIKggIKAk9LGvsBCvgBChBhcHBsaWNhdGlvbi9qc29uEuMBCuABCt0BEnsKCHJlYWx0eXBlEm8KIwoGYS10eXBlEhkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpBCiMKBmItdHlwZRIZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQgojCgZkLXR5cGUSGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakTaAR0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQdoBHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpC2gEdEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakQy3wEqC2NyZWF0ZVN0YXRlOr4BCrsBErYBCrMBChBhcHBsaWNhdGlvbi9qc29uEp4BCpsBCpgBElYKCHJlYWx0eXBlEkoKIwoGYS10eXBlEhkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpBCiMKBmItdHlwZRIZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQtoBHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpB2gEdEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakIYAUIPEg0KAzIwMRIGCgQKAk9LKokGCoYGCrEBChFDdXN0b21PbmVPZlNjaGVtYRKbAQqYARJWCghyZWFsdHlwZRJKCiMKBmEtdHlwZRIZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQQojCgZiLXR5cGUSGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakLaAR0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQdoBHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpCCo0CChZDdXN0b21PbmVPZkFycmF5U2NoZW1hEvIBCu8BygEFYXJyYXnyAeMBCuABCt0BEnsKCHJlYWx0eXBlEm8KIwoGYS10eXBlEhkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpBCiMKBmItdHlwZRIZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQgojCgZjLXR5cGUSGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakPaAR0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvT2JqQdoBHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9PYmpC2gEdEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL09iakMKRwoET2JqQRI/Cj3KAQZvYmplY3T6ATEKFwoIcmVhbHR5cGUSCwoJygEGc3RyaW5nChYKB21lc3NhZ2USCwoJygEGc3RyaW5nCmkKBE9iakISYQpfygEGb2JqZWN0+gFTChcKCHJlYWx0eXBlEgsKCcoBBnN0cmluZwoaCgtkZXNjcmlwdGlvbhILCgnKAQZzdHJpbmcKHAoEY29kZRIUChLKAQdpbnRlZ2VymgIFaW50MzIKRQoET2JqQxI9CjvKAQZvYmplY3T6AS8KFwoIcmVhbHR5cGUSCwoJygEGc3RyaW5nChQKBXN0YXRlEgsKCcoBBnN0cmluZwpFCgRPYmpEEj0KO8oBBm9iamVjdPoBLwoXCghyZWFsdHlwZRILCgnKAQZzdHJpbmcKFAoFY29sb3ISCwoJygEGc3RyaW5n')),
);

/// From: 3_0/petstore-with-object-as-parameter.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_with_object_as_parameter = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRLeAQoQT3BlbkFQSSBQZXRzdG9yZRKCAVRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gRm9yIHRoaXMgc2FtcGxlLCB5b3UgY2FuIHVzZSB0aGUgYXBpIGtleSBgc3BlY2lhbC1rZXlgIHRvIHRlc3QgdGhlIGF1dGhvcml6YXRpb24gZmlsdGVycy4qPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBofCh1odHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92MiKYNAr5AgoEL3BldBLwAirVAQoDcGV0EhZVcGRhdGUgYW4gZXhpc3RpbmcgcGV0Kgl1cGRhdGVQZXQ6IhIgCh4jL2NvbXBvbmVudHMvcmVxdWVzdEJvZGllcy9QZXRCWxIeCgM0MDASFwoVChNJbnZhbGlkIElEIHN1cHBsaWVkEhgKAzQwNBIRCg8KDVBldCBub3QgZm91bmQSHwoDNDA1EhgKFgoUVmFsaWRhdGlvbiBleGNlcHRpb25aKgooCg1wZXRzdG9yZV9hdXRoEhcKCndyaXRlOnBldHMKCXJlYWQ6cGV0czKVAQoDcGV0EhpBZGQgYSBuZXcgcGV0IHRvIHRoZSBzdG9yZSoGYWRkUGV0OiISIAoeIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvUGV0QhoSGAoDNDA1EhEKDwoNSW52YWxpZCBpbnB1dFoqCigKDXBldHN0b3JlX2F1dGgSFwoKd3JpdGU6cGV0cwoJcmVhZDpwZXRzCp0EChEvcGV0L2ZpbmRCeVN0YXR1cxKHBCKEBAoDcGV0EhRGaW5kcyBQZXRzIGJ5IHN0YXR1cxpDTXVsdGlwbGUgc3RhdHVzIHZhbHVlcyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncyoQZmluZFBldHNCeVN0YXR1czKfAQqcAQoGc3RhdHVzEgVxdWVyeRozU3RhdHVzIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgY29uc2lkZXJlZCBmb3IgZmlsdGVyIAE6BGZvcm1STgpMygEFYXJyYXnyAUEKPwo9wgEMEgphdmFpbGFibGUKwgEKEghwZW5kaW5nCsIBBxIFc29sZArKAQZzdHJpbmeKAgsaCWF2YWlsYWJsZULNARKpAQoDMjAwEqEBCp4BChRzdWNjZXNzZnVsIG9wZXJhdGlvbhqFAQpACg9hcHBsaWNhdGlvbi94bWwSLQorCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldApBChBhcHBsaWNhdGlvbi9qc29uEi0KKwopygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSHwoDNDAwEhgKFgoUSW52YWxpZCBzdGF0dXMgdmFsdWVaHgocCg1wZXRzdG9yZV9hdXRoEgsKCXJlYWQ6cGV0cwrWAwoPL3BldC9maW5kQnlUYWdzEsIDIr8DCgNwZXQSEkZpbmRzIFBldHMgYnkgdGFncxpdTXVsdGlwbGUgdGFncyBjYW4gYmUgcHJvdmlkZWQgd2l0aCBjb21tYSBzZXBhcmF0ZWQgc3RyaW5ncy4gVXNlIHRhZzEsIHRhZzIsIHRhZzMgZm9yIHRlc3RpbmcuKg5maW5kUGV0c0J5VGFnczJGCkQKBHRhZ3MSBXF1ZXJ5GhFUYWdzIHRvIGZpbHRlciBieSABOgRmb3JtUhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZ0LKARKpAQoDMjAwEqEBCp4BChRzdWNjZXNzZnVsIG9wZXJhdGlvbhqFAQpACg9hcHBsaWNhdGlvbi94bWwSLQorCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldApBChBhcHBsaWNhdGlvbi9qc29uEi0KKwopygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSHAoDNDAwEhUKEwoRSW52YWxpZCB0YWcgdmFsdWVQAVoeChwKDXBldHN0b3JlX2F1dGgSCwoJcmVhZDpwZXRzCrMJCgwvcGV0L3twZXRJZH0SogkizQIKA3BldBIORmluZCBwZXQgYnkgSUQaFFJldHVybnMgYSBzaW5nbGUgcGV0KgpnZXRQZXRCeUlkMjwKOgoFcGV0SWQSBHBhdGgaE0lEIG9mIHBldCB0byByZXR1cm4gAVIUChLKAQdpbnRlZ2VymgIFaW50NjRCxgESiQEKAzIwMBKBAQp/ChRzdWNjZXNzZnVsIG9wZXJhdGlvbhpnCjEKD2FwcGxpY2F0aW9uL3htbBIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0CjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldBIeCgM0MDASFwoVChNJbnZhbGlkIElEIHN1cHBsaWVkEhgKAzQwNBIRCg8KDVBldCBub3QgZm91bmRaDQoLCgdhcGlfa2V5EgAygAIKA3BldBIpVXBkYXRlcyBhIHBldCBpbiB0aGUgc3RvcmUgd2l0aCBmb3JtIGRhdGEqEXVwZGF0ZVBldFdpdGhGb3JtMksKSQoFcGV0SWQSBHBhdGgaIklEIG9mIHBldCB0aGF0IG5lZWRzIHRvIGJlIHVwZGF0ZWQgAVIUChLKAQdpbnRlZ2VymgIFaW50NjQ6JhIkCiIjL2NvbXBvbmVudHMvcmVxdWVzdEJvZGllcy9QZXRGb3JtQhoSGAoDNDA1EhEKDwoNSW52YWxpZCBpbnB1dFoqCigKDXBldHN0b3JlX2F1dGgSFwoKd3JpdGU6cGV0cwoJcmVhZDpwZXRzOsgBCgNwZXQSDURlbGV0ZXMgYSBwZXQqCWRlbGV0ZVBldDIgCh4KB2FwaV9rZXkSBmhlYWRlclILCgnKAQZzdHJpbmcyOQo3CgVwZXRJZBIEcGF0aBoQUGV0IGlkIHRvIGRlbGV0ZSABUhQKEsoBB2ludGVnZXKaAgVpbnQ2NEIeEhwKAzQwMBIVChMKEUludmFsaWQgcGV0IHZhbHVlWioKKAoNcGV0c3RvcmVfYXV0aBIXCgp3cml0ZTpwZXRzCglyZWFkOnBldHNSgQMKA3BldBIyU2V0IHRoZSBzdGF0dXMgb2YgYSBwZXQgaW4gdGhlIHN0b3JlIHVzaW5nIGFuIGVudW0qF3VwZGF0ZVBldFN0YXR1c1dpdGhFbnVtMjwKOgoFcGV0SWQSBHBhdGgaE0lEIG9mIHBldCB0byByZXR1cm4gAVIUChLKAQdpbnRlZ2VymgIFaW50NjQyJhIkCiIjL2NvbXBvbmVudHMvcGFyYW1ldGVycy9zdGF0dXNFbnVtQsYBEokBCgMyMDASgQEKfwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aZwoxCg9hcHBsaWNhdGlvbi94bWwSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSHgoDNDAwEhcKFQoTSW52YWxpZCBJRCBzdXBwbGllZBIYCgM0MDQSEQoPCg1QZXQgbm90IGZvdW5kCrkCChgvcGV0L3twZXRJZH0vdXBsb2FkSW1hZ2USnAIymQIKA3BldBIQdXBsb2FkcyBhbiBpbWFnZSoKdXBsb2FkRmlsZTI8CjoKBXBldElkEgRwYXRoGhNJRCBvZiBwZXQgdG8gdXBkYXRlIAFSFAoSygEHaW50ZWdlcpoCBWludDY0OikSJwolIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvVXBsb2FkRm9ybUJfEl0KAzIwMBJWClQKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGjwKOgoQYXBwbGljYXRpb24vanNvbhImCiQSIgogIy9jb21wb25lbnRzL3NjaGVtYXMvQXBpUmVzcG9uc2VaKgooCg1wZXRzdG9yZV9hdXRoEhcKCndyaXRlOnBldHMKCXJlYWQ6cGV0cwrtAQoQL3N0b3JlL2ludmVudG9yeRLYASLVAQoFc3RvcmUSIVJldHVybnMgcGV0IGludmVudG9yaWVzIGJ5IHN0YXR1cxorUmV0dXJucyBhIG1hcCBvZiBzdGF0dXMgY29kZXMgdG8gcXVhbnRpdGllcyoMZ2V0SW52ZW50b3J5Ql8SXQoDMjAwElYKVAoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aPAo6ChBhcHBsaWNhdGlvbi9qc29uEiYKJAoiygEGb2JqZWN0ggIWChQKEsoBB2ludGVnZXKaAgVpbnQzMloNCgsKB2FwaV9rZXkSAArSAgoML3N0b3JlL29yZGVyEsECMr4CCgVzdG9yZRIYUGxhY2UgYW4gb3JkZXIgZm9yIGEgcGV0KgpwbGFjZU9yZGVyOmEKXwojb3JkZXIgcGxhY2VkIGZvciBwdXJjaGFzaW5nIHRoZSBwZXQSNgo0ChBhcHBsaWNhdGlvbi9qc29uEiAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9PcmRlchgBQqsBEo4BCgMyMDAShgEKgwEKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGmsKMwoPYXBwbGljYXRpb24veG1sEiAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9PcmRlcgo0ChBhcHBsaWNhdGlvbi9qc29uEiAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9PcmRlchIYCgM0MDASEQoPCg1JbnZhbGlkIE9yZGVyCpMGChYvc3RvcmUvb3JkZXIve29yZGVySWR9EvgFIsQDCgVzdG9yZRIZRmluZCBwdXJjaGFzZSBvcmRlciBieSBJRBphRm9yIHZhbGlkIHJlc3BvbnNlIHRyeSBpbnRlZ2VyIElEcyB3aXRoIHZhbHVlIDw9IDUgb3IgPiAxMC4gT3RoZXIgdmFsdWVzIHdpbGwgZ2VuZXJhdGUgZXhjZXB0aW9ucyoMZ2V0T3JkZXJCeUlkMl8KXQoHb3JkZXJJZBIEcGF0aBoiSUQgb2YgcGV0IHRoYXQgbmVlZHMgdG8gYmUgZmV0Y2hlZCABUiYKJFkAAAAAAAAUQGkAAAAAAADwP8oBB2ludGVnZXKaAgVpbnQ2NELNARKOAQoDMjAwEoYBCoMBChRzdWNjZXNzZnVsIG9wZXJhdGlvbhprCjMKD2FwcGxpY2F0aW9uL3htbBIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvT3JkZXIKNAoQYXBwbGljYXRpb24vanNvbhIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvT3JkZXISHgoDNDAwEhcKFQoTSW52YWxpZCBJRCBzdXBwbGllZBIaCgM0MDQSEwoRCg9PcmRlciBub3QgZm91bmQ6rgIKBXN0b3JlEhtEZWxldGUgcHVyY2hhc2Ugb3JkZXIgYnkgSUQacUZvciB2YWxpZCByZXNwb25zZSB0cnkgaW50ZWdlciBJRHMgd2l0aCB2YWx1ZSA8IDEwMDAuIEFueXRoaW5nIGFib3ZlIDEwMDAgb3Igbm9uaW50ZWdlcnMgd2lsbCBnZW5lcmF0ZSBBUEkgZXJyb3JzKgtkZWxldGVPcmRlcjJKCkgKB29yZGVySWQSBHBhdGgaKElEIG9mIHRoZSBvcmRlciB0aGF0IG5lZWRzIHRvIGJlIGRlbGV0ZWQgAVILCgnKAQZzdHJpbmdCPBIeCgM0MDASFwoVChNJbnZhbGlkIElEIHN1cHBsaWVkEhoKAzQwNBITChEKD09yZGVyIG5vdCBmb3VuZArbAQoFL3VzZXIS0QEyzgEKBHVzZXISC0NyZWF0ZSB1c2VyGixUaGlzIGNhbiBvbmx5IGJlIGRvbmUgYnkgdGhlIGxvZ2dlZCBpbiB1c2VyLioKY3JlYXRlVXNlcjpQCk4KE0NyZWF0ZWQgdXNlciBvYmplY3QSNQozChBhcHBsaWNhdGlvbi9qc29uEh8KHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9Vc2VyGAFCGgoYChYKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uWhEKDwoLYXV0aF9jb29raWUSAArFAQoVL3VzZXIvY3JlYXRlV2l0aEFycmF5EqsBMqgBCgR1c2VyEixDcmVhdGVzIGxpc3Qgb2YgdXNlcnMgd2l0aCBnaXZlbiBpbnB1dCBhcnJheSoZY3JlYXRlVXNlcnNXaXRoQXJyYXlJbnB1dDooEiYKJCMvY29tcG9uZW50cy9yZXF1ZXN0Qm9kaWVzL1VzZXJBcnJheUIaChgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb25aEQoPCgthdXRoX2Nvb2tpZRIACsMBChQvdXNlci9jcmVhdGVXaXRoTGlzdBKqATKnAQoEdXNlchIsQ3JlYXRlcyBsaXN0IG9mIHVzZXJzIHdpdGggZ2l2ZW4gaW5wdXQgYXJyYXkqGGNyZWF0ZVVzZXJzV2l0aExpc3RJbnB1dDooEiYKJCMvY29tcG9uZW50cy9yZXF1ZXN0Qm9kaWVzL1VzZXJBcnJheUIaChgKFgoUc3VjY2Vzc2Z1bCBvcGVyYXRpb25aEQoPCgthdXRoX2Nvb2tpZRIACs8FCgsvdXNlci9sb2dpbhK/BSK8BQoEdXNlchIZTG9ncyB1c2VyIGludG8gdGhlIHN5c3RlbSoJbG9naW5Vc2VyMmkKZwoIdXNlcm5hbWUSBXF1ZXJ5GhdUaGUgdXNlciBuYW1lIGZvciBsb2dpbiABUjkKN4oBK15bYS16QS1aMC05XStbYS16QS1aMC05XC5cLV9dKlthLXpBLVowLTldKyTKAQZzdHJpbmcySApGCghwYXNzd29yZBIFcXVlcnkaJFRoZSBwYXNzd29yZCBmb3IgbG9naW4gaW4gY2xlYXIgdGV4dCABUgsKCcoBBnN0cmluZ0LYAxKmAwoDMjAwEp4DCpsDChRzdWNjZXNzZnVsIG9wZXJhdGlvbhK7AgqaAQoKU2V0LUNvb2tpZRKLAQqIAQpPQ29va2llIGF1dGhlbnRpY2F0aW9uIGtleSBmb3IgdXNlIHdpdGggdGhlIGBhdXRoX2Nvb2tpZWAgYXBpS2V5IGF1dGhlbnRpY2F0aW9uLkI1CjM6KBImQVVUSF9LRVk9YWJjZGUxMjM0NTsgUGF0aD0vOyBIdHRwT25seQrKAQZzdHJpbmcKTAoMWC1SYXRlLUxpbWl0EjwKOgoiY2FsbHMgcGVyIGhvdXIgYWxsb3dlZCBieSB0aGUgdXNlckIUChLKAQdpbnRlZ2VymgIFaW50MzIKTgoPWC1FeHBpcmVzLUFmdGVyEjsKOQoeZGF0ZSBpbiBVVEMgd2hlbiB0b2tlbiBleHBpcmVzQhcKFcoBBnN0cmluZ5oCCWRhdGUtdGltZRpFCiAKD2FwcGxpY2F0aW9uL3htbBINCgsKCcoBBnN0cmluZwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5nEi0KAzQwMBImCiQKIkludmFsaWQgdXNlcm5hbWUvcGFzc3dvcmQgc3VwcGxpZWQKfAoML3VzZXIvbG9nb3V0EmwiagoEdXNlchInTG9ncyBvdXQgY3VycmVudCBsb2dnZWQgaW4gdXNlciBzZXNzaW9uKgpsb2dvdXRVc2VyQhoKGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbloRCg8KC2F1dGhfY29va2llEgAKlwcKEC91c2VyL3t1c2VybmFtZX0Sggci3QIKBHVzZXISFUdldCB1c2VyIGJ5IHVzZXIgbmFtZSoNZ2V0VXNlckJ5TmFtZTJcCloKCHVzZXJuYW1lEgRwYXRoGjlUaGUgbmFtZSB0aGF0IG5lZWRzIHRvIGJlIGZldGNoZWQuIFVzZSB1c2VyMSBmb3IgdGVzdGluZy4gAVILCgnKAQZzdHJpbmdC0AESjAEKAzIwMBKEAQqBAQoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aaQoyCg9hcHBsaWNhdGlvbi94bWwSHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL1VzZXIKMwoQYXBwbGljYXRpb24vanNvbhIfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVXNlchIkCgM0MDASHQobChlJbnZhbGlkIHVzZXJuYW1lIHN1cHBsaWVkEhkKAzQwNBISChAKDlVzZXIgbm90IGZvdW5kKrMCCgR1c2VyEgxVcGRhdGVkIHVzZXIaLFRoaXMgY2FuIG9ubHkgYmUgZG9uZSBieSB0aGUgbG9nZ2VkIGluIHVzZXIuKgp1cGRhdGVVc2VyMj8KPQoIdXNlcm5hbWUSBHBhdGgaHG5hbWUgdGhhdCBuZWVkIHRvIGJlIGRlbGV0ZWQgAVILCgnKAQZzdHJpbmc6UApOChNVcGRhdGVkIHVzZXIgb2JqZWN0EjUKMwoQYXBwbGljYXRpb24vanNvbhIfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVXNlchgBQj0SIAoDNDAwEhkKFwoVSW52YWxpZCB1c2VyIHN1cHBsaWVkEhkKAzQwNBISChAKDlVzZXIgbm90IGZvdW5kWhEKDwoLYXV0aF9jb29raWUSADrpAQoEdXNlchILRGVsZXRlIHVzZXIaLFRoaXMgY2FuIG9ubHkgYmUgZG9uZSBieSB0aGUgbG9nZ2VkIGluIHVzZXIuKgpkZWxldGVVc2VyMkQKQgoIdXNlcm5hbWUSBHBhdGgaIVRoZSBuYW1lIHRoYXQgbmVlZHMgdG8gYmUgZGVsZXRlZCABUgsKCcoBBnN0cmluZ0JBEiQKAzQwMBIdChsKGUludmFsaWQgdXNlcm5hbWUgc3VwcGxpZWQSGQoDNDA0EhIKEAoOVXNlciBub3QgZm91bmRaEQoPCgthdXRoX2Nvb2tpZRIAKvgWCtEPCscCCgVPcmRlchK9Agq6AioHCgVPcmRlckoJUGV0IE9yZGVyygEGb2JqZWN0+gHwAQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKHQoFcGV0SWQSFAoSygEHaW50ZWdlcpoCBWludDY0CiAKCHF1YW50aXR5EhQKEsoBB2ludGVnZXKaAgVpbnQzMgojCghzaGlwRGF0ZRIXChXKAQZzdHJpbmeaAglkYXRlLXRpbWUKTQoGc3RhdHVzEkMKQcIBCRIHcGxhY2VkCsIBCxIJYXBwcm92ZWQKwgEMEgpkZWxpdmVyZWQKygEGc3RyaW5nkgIMT3JkZXIgU3RhdHVzCh0KCGNvbXBsZXRlEhEKD8oBB2Jvb2xlYW6KAgIQAJICJkFuIG9yZGVyIGZvciBhIHBldHMgZnJvbSB0aGUgcGV0IHN0b3JlCqwBCghDYXRlZ29yeRKfAQqcASoKCghDYXRlZ29yeUoMUGV0IGNhdGVnb3J5ygEGb2JqZWN0+gFfChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NApBCgRuYW1lEjkKN4oBK15bYS16QS1aMC05XStbYS16QS1aMC05XC5cLV9dKlthLXpBLVowLTldKyTKAQZzdHJpbmeSAhRBIGNhdGVnb3J5IGZvciBhIHBldAq2AgoEVXNlchKtAgqqAioGCgRVc2VySgZhIFVzZXLKAQZvYmplY3T6Ad8BChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoXCgh1c2VybmFtZRILCgnKAQZzdHJpbmcKGAoJZmlyc3ROYW1lEgsKCcoBBnN0cmluZwoXCghsYXN0TmFtZRILCgnKAQZzdHJpbmcKFAoFZW1haWwSCwoJygEGc3RyaW5nChcKCHBhc3N3b3JkEgsKCcoBBnN0cmluZwoUCgVwaG9uZRILCgnKAQZzdHJpbmcKMAoKdXNlclN0YXR1cxIiCiDKAQdpbnRlZ2VykgILVXNlciBTdGF0dXOaAgVpbnQzMpICK0EgVXNlciB3aG8gaXMgcHVyY2hhc2luZyBmcm9tIHRoZSBwZXQgc3RvcmUKaAoDVGFnEmEKXyoFCgNUYWdKB1BldCBUYWfKAQZvYmplY3T6ATEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0ChMKBG5hbWUSCwoJygEGc3RyaW5nkgIPQSB0YWcgZm9yIGEgcGV0CpIDCgNQZXQSigMKhwMqBQoDUGV0SgVhIFBldLoBBG5hbWW6AQlwaG90b1VybHPKAQZvYmplY3T6AbcCChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAotCghjYXRlZ29yeRIhEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL0NhdGVnb3J5Ch4KBG5hbWUSFgoUOgkSB2RvZ2dpZQrKAQZzdHJpbmcKNQoJcGhvdG9VcmxzEigKJioMCghwaG90b1VybCgBygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5nCjwKBHRhZ3MSNAoyKgcKA3RhZygBygEFYXJyYXnyAR4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9UYWcKVQoGc3RhdHVzEksKScIBDBIKYXZhaWxhYmxlCsIBChIIcGVuZGluZwrCAQcSBXNvbGQKygEGc3RyaW5nkgIXcGV0IHN0YXR1cyBpbiB0aGUgc3RvcmWSAh9BIHBldCBmb3Igc2FsZSBpbiB0aGUgcGV0IHN0b3JlCrUBCgdQZXRGb3JtEqkBCqYBSgpBIHBldCBmb3JtugEEbmFtZboBBnN0YXR1c8oBBm9iamVjdPoBYgotCgRuYW1lEiUKI8oBBnN0cmluZ5ICF1VwZGF0ZWQgbmFtZSBvZiB0aGUgcGV0CjEKBnN0YXR1cxInCiXKAQZzdHJpbmeSAhlVcGRhdGVkIHN0YXR1cyBvZiB0aGUgcGV0kgIZQSBmb3JtIGZvciB1cGRhdGluZyBhIHBldArRAQoKVXBsb2FkRm9ybRLCAQq/AUoOQW4gdXBsb2FkIGZvcm26AQRmaWxlygEGb2JqZWN0+gF2CkUKEmFkZGl0aW9uYWxNZXRhZGF0YRIvCi3KAQZzdHJpbmeSAiFBZGRpdGlvbmFsIGRhdGEgdG8gcGFzcyB0byBzZXJ2ZXIKLQoEZmlsZRIlCiPKAQZzdHJpbmeSAg5maWxlIHRvIHVwbG9hZJoCBmJpbmFyeZICI0EgZm9ybSBmb3IgYXR0YWNoaW5nIGZpbGVzIHRvIGEgcGV0CrYBCgtBcGlSZXNwb25zZRKmAQqjAUoUQW4gdXBsb2FkZWQgcmVzcG9uc2XKAQZvYmplY3T6AUsKHAoEY29kZRIUChLKAQdpbnRlZ2VymgIFaW50MzIKEwoEdHlwZRILCgnKAQZzdHJpbmcKFgoHbWVzc2FnZRILCgnKAQZzdHJpbmeSAjNEZXNjcmliZXMgdGhlIHJlc3VsdCBvZiB1cGxvYWRpbmcgYW4gaW1hZ2UgcmVzb3VyY2UKWQoKc3RhdHVzRW51bRJLCknCAQwSCmF2YWlsYWJsZQrCAQoSCHBlbmRpbmcKwgEHEgVzb2xkCsoBBnN0cmluZ5ICF3BldCBzdGF0dXMgaW4gdGhlIHN0b3JlGnEKbwoKc3RhdHVzRW51bRJhCl8KBnN0YXR1cxIFcXVlcnkaE1RoZSByZXF1aXJlZCBzdGF0dXMgAToEZm9ybUABUiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvc3RhdHVzRW51bVoKEghwZW5kaW5nCiq7BAptCglVc2VyQXJyYXkSYApeChRMaXN0IG9mIHVzZXIgb2JqZWN0cxJECkIKEGFwcGxpY2F0aW9uL2pzb24SLgosCirKAQVhcnJhefIBHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL1VzZXIYAQqmAQoDUGV0Ep4BCpsBCi5QZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlEmcKMgoQYXBwbGljYXRpb24vanNvbhIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0CjEKD2FwcGxpY2F0aW9uL3htbBIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0GAEKewoHUGV0Rm9ybRJwCm4SbApqCiFhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQSRQogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1BldEZvcm0SIRIfbmFtZTogZmx1ZmZ5CnN0YXR1czogYXZhaWxhYmxlCgqjAQoKVXBsb2FkRm9ybRKUAQqRARKOAQqLAQoTbXVsdGlwYXJ0L2Zvcm0tZGF0YRJ0CiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvVXBsb2FkRm9ybRJNEkthZGRpdGlvbmFsTWV0YWRhdGE6IGFkZGl0aW9uYWwgbWV0YWRhdGEgZXhhbXBsZQpmaWxlOiBjMjl0WlNCMFpYTjBJR1JoZEdFSwo68AEKmAEKDXBldHN0b3JlX2F1dGgShgEKgwEKBm9hdXRoMjp5CncKK2h0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL2FwaS9vYXV0aC9kaWFsb2ciSAopCgp3cml0ZTpwZXRzEhttb2RpZnkgcGV0cyBpbiB5b3VyIGFjY291bnQKGwoJcmVhZDpwZXRzEg5yZWFkIHlvdXIgcGV0cwomCgdhcGlfa2V5EhsKGQoGYXBpS2V5GgdhcGlfa2V5IgZoZWFkZXIKKwoLYXV0aF9jb29raWUSHAoaCgZhcGlLZXkaCEFVVEhfS0VZIgZjb29raWU6IQoDcGV0EhpFdmVyeXRoaW5nIGFib3V0IHlvdXIgUGV0czoiCgVzdG9yZRIZQWNjZXNzIHRvIFBldHN0b3JlIG9yZGVyczodCgR1c2VyEhVPcGVyYXRpb25zIGFib3V0IHVzZXJCMAobRmluZCBvdXQgbW9yZSBhYm91dCBTd2FnZ2VyEhFodHRwOi8vc3dhZ2dlci5pbw==')),
);

/// From: 3_0/allOf-required.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_required = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEjQKDWNsdWJGb3JVcGRhdGUqDgoEbmFtZRIGc3RyaW5nKhMKCXNob3J0TmFtZRIGc3RyaW5nEjYKD2NsdWJGb3JDcmVhdGlvbioOCgRuYW1lEgZzdHJpbmcqEwoJc2hvcnROYW1lEgZzdHJpbmcSTwoOTGlzdFBhcmFtZXRlcnMaJ0xpc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gTGlzdCoUCghwZXJzb25JZBIGc3RyaW5nKAQSYQoNTGlzdFJlc3BvbnNlcxolTGlzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTGlzdCopChQyMDAgYXBwbGljYXRpb24vanNvbhIPY2x1YkZvckNyZWF0aW9uGAMaTAoEbGlzdBIaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0aA0dFVCoETGlzdEoOTGlzdFBhcmFtZXRlcnNSDUxpc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLDAQrAAQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SoQEingEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCURJPCgMyMDASSApGCgJPSxpACj4KEGFwcGxpY2F0aW9uL2pzb24SKgooEiYKJCMvY29tcG9uZW50cy9zY2hlbWFzL2NsdWJGb3JDcmVhdGlvbiqXAQqUAQpFCg9jbHViRm9yQ3JlYXRpb24SMgowugEEbmFtZdIBJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9jbHViRm9yVXBkYXRlCksKDWNsdWJGb3JVcGRhdGUSOgo4+gE1ChYKBG5hbWUSDgoMeP8BygEGc3RyaW5nChsKCXNob3J0TmFtZRIOCgx4/wHKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_1997.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_1997 = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0ElAKBFR5cGUqFwoEcHJvcBIGc3RyaW5nUgFBUgFCUgFDKh4KBXByb3AyEgZzdHJpbmdSAUFSAUJSAUNSBG51bGwqDwoFcHJvcDMSBnN0cmluZw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRITCgR0ZXN0EgR0ZXN0MgUxLjAuMCIRCg8KBS90ZXN0EgYSBHRlc3QqjAEKiQEKhgEKBFR5cGUSfgp8+gF5CioKBHByb3ASIgogCAHCAQQSAkEKwgEEEgJCCsIBBBICQwrKAQZzdHJpbmcKMwoFcHJvcDISKgoowgEEEgJBCsIBBBICQgrCAQQSAkMKwgEHEgVudWxsCsoBBnN0cmluZwoWCgVwcm9wMxINCgsIAcoBBnN0cmluZw==')),
);

/// From: 3_0/allOf_composition_discriminator_recursive.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_composition_discriminator_recursive = (
  model: surface.Model.fromBuffer(base64Decode('CipPQUkgU3BlY2lmaWNhdGlvbiBleGFtcGxlIGZvciBQb2x5bW9ycGhpc20SHwoNVG9rZW5NZXRhZGF0YSoOCgR0YWcxEgZzdHJpbmcSNAoFVG9rZW4qDgoEdHlwZRIGc3RyaW5nKhsKCG1ldGFkYXRhEg1Ub2tlbk1ldGFkYXRhGAMSSwoLU3RyaW5nVG9rZW4qDgoEdHlwZRIGc3RyaW5nKhsKCG1ldGFkYXRhEg1Ub2tlbk1ldGFkYXRhGAMqDwoFdmFsdWUSBnN0cmluZxJRCg9FeHByZXNzaW9uVG9rZW4qDgoEdHlwZRIGc3RyaW5nKhsKCG1ldGFkYXRhEg1Ub2tlbk1ldGFkYXRhGAMqEQoGdG9rZW5zEgVUb2tlbhgCGhoSBy9zdGF0dXMaA0dFVCoKR0VUX3N0YXR1cw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIzCipPQUkgU3BlY2lmaWNhdGlvbiBleGFtcGxlIGZvciBQb2x5bW9ycGhpc20yBTEuMC4wIiIKIAoHL3N0YXR1cxIVIhNCERIPCgMyMDESCAoGCgRkZXNjKu0DCuoDCjQKDVRva2VuTWV0YWRhdGESIwohygEGb2JqZWN0+gEVChMKBHRhZzESCwoJygEGc3RyaW5nCtMBCgVUb2tlbhLJAQrGARJoCgR0eXBlEmAKKgoGc3RyaW5nEiAjL2NvbXBvbmVudHMvc2NoZW1hcy9TdHJpbmdUb2tlbgoyCgpleHByZXNzaW9uEiQjL2NvbXBvbmVudHMvc2NoZW1hcy9FeHByZXNzaW9uVG9rZW66AQR0eXBlygEGb2JqZWN0+gFJChMKBHR5cGUSCwoJygEGc3RyaW5nCjIKCG1ldGFkYXRhEiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvVG9rZW5NZXRhZGF0YQpZCgtTdHJpbmdUb2tlbhJKCkjSAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvVG9rZW7SASQKIsoBBm9iamVjdPoBFgoUCgV2YWx1ZRILCgnKAQZzdHJpbmcKgAEKD0V4cHJlc3Npb25Ub2tlbhJtCmvSAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvVG9rZW7SAUcKRcoBBm9iamVjdPoBOQo3CgZ0b2tlbnMSLQorygEFYXJyYXnyASAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9Ub2tlbg==')),
);

/// From: 3_0/issue_8535.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_8535 = (
  model: surface.Model.fromBuffer(base64Decode('CgR0b3RvEmQKDFRlc3RSZXNwb25zZSoNCgJpZBIHaW50ZWdlcioVCgtzdHJpbmdGaWVsZBIGc3RyaW5nKhUKC251bWJlckZpZWxkEgZudW1iZXIqFwoMYm9vbGVhbkZpZWxkEgdib29sZWFuEoYCChVIZWFkZXJzVGVzdFBhcmFtZXRlcnMaNUhlYWRlcnNUZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEhlYWRlcnNUZXN0KhgKDGhlYWRlck51bWJlchIGbnVtYmVyKAEqGAoMaGVhZGVyU3RyaW5nEgZzdHJpbmcoASofChNoZWFkZXJTdHJpbmdXcmFwcGVkEgZzdHJpbmcoASoeChJoZWFkZXJTdHJpbmdRdW90ZXMSBnN0cmluZygBKiUKGWhlYWRlclN0cmluZ1F1b3Rlc1dyYXBwZWQSBnN0cmluZygBKhoKDWhlYWRlckJvb2xlYW4SB2Jvb2xlYW4oARJmChRIZWFkZXJzVGVzdFJlc3BvbnNlcxozSGVhZGVyc1Rlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEhlYWRlcnNUZXN0KhkKB2RlZmF1bHQSDFRlc3RSZXNwb25zZRgDEowCChlRdWVyeVBhcmFtc1Rlc3RQYXJhbWV0ZXJzGj1RdWVyeVBhcmFtc1Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUXVlcnlQYXJhbXNUZXN0KhcKC3F1ZXJ5TnVtYmVyEgZudW1iZXIoAyoXCgtxdWVyeVN0cmluZxIGc3RyaW5nKAMqHgoScXVlcnlTdHJpbmdXcmFwcGVkEgZzdHJpbmcoAyodChFxdWVyeVN0cmluZ1F1b3RlcxIGc3RyaW5nKAMqJAoYcXVlcnlTdHJpbmdRdW90ZXNXcmFwcGVkEgZzdHJpbmcoAyoZCgxxdWVyeUJvb2xlYW4SB2Jvb2xlYW4oAxJyChhRdWVyeVBhcmFtc1Rlc3RSZXNwb25zZXMaO1F1ZXJ5UGFyYW1zVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUXVlcnlQYXJhbXNUZXN0KhkKB2RlZmF1bHQSDFRlc3RSZXNwb25zZRgDGmEKC2hlYWRlcnNUZXN0Eg0vdGVzdC1oZWFkZXJzGgNHRVQiBGRlc2MqC0hlYWRlcnNUZXN0ShVIZWFkZXJzVGVzdFBhcmFtZXRlcnNSFEhlYWRlcnNUZXN0UmVzcG9uc2VzGnYKD3F1ZXJ5UGFyYW1zVGVzdBISL3Rlc3QtcXVlcnktcGFyYW1zGgNHRVQiBGRlc2MqD1F1ZXJ5UGFyYW1zVGVzdEoZUXVlcnlQYXJhbXNUZXN0UGFyYW1ldGVyc1IYUXVlcnlQYXJhbXNUZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRITCgR0b3RvEgRkZXNjMgUxLjAuMBoGCgEvEgEvIpwICooECg0vdGVzdC1oZWFkZXJzEvgDIvUDChR2ZXJpZnktZGVmYXVsdC12YWx1ZRIMdGVzdCBoZWFkZXJzGgRkZXNjKgtoZWFkZXJzVGVzdDIxCi8KDGhlYWRlck51bWJlchIGaGVhZGVyUhcKFcoBBm51bWJlcooCCQlmZmZmZmYmQDIwCi4KDGhlYWRlclN0cmluZxIGaGVhZGVyUhYKFMoBBnN0cmluZ4oCCBoGcXdlcnR5MjcKNQoTaGVhZGVyU3RyaW5nV3JhcHBlZBIGaGVhZGVyUhYKFMoBBnN0cmluZ4oCCBoGcXdlcnR5MkgKRgoSaGVhZGVyU3RyaW5nUXVvdGVzEgZoZWFkZXJSKAomygEGc3RyaW5nigIaGhhxd2VydHkid2l0aCBxdW90ZXMiIHRlc3QyTwpNChloZWFkZXJTdHJpbmdRdW90ZXNXcmFwcGVkEgZoZWFkZXJSKAomygEGc3RyaW5nigIaGhhxd2VydHkid2l0aCBxdW90ZXMiIHRlc3QyLAoqCg1oZWFkZXJCb29sZWFuEgZoZWFkZXJSEQoPygEHYm9vbGVhbooCAhABQlUKUwpRChBkZWZhdWx0IHJlc3BvbnNlGj0KOwoQYXBwbGljYXRpb24vanNvbhInCiUSIwohIy9jb21wb25lbnRzL3NjaGVtYXMvVGVzdFJlc3BvbnNlCowEChIvdGVzdC1xdWVyeS1wYXJhbXMS9QMi8gMKFHZlcmlmeS1kZWZhdWx0LXZhbHVlEhF0ZXN0IHF1ZXJ5IHBhcmFtcxoEZGVzYyoPcXVlcnlQYXJhbXNUZXN0Mi8KLQoLcXVlcnlOdW1iZXISBXF1ZXJ5UhcKFcoBBm51bWJlcooCCQlmZmZmZmYmQDIuCiwKC3F1ZXJ5U3RyaW5nEgVxdWVyeVIWChTKAQZzdHJpbmeKAggaBnF3ZXJ0eTI1CjMKEnF1ZXJ5U3RyaW5nV3JhcHBlZBIFcXVlcnlSFgoUygEGc3RyaW5nigIIGgZxd2VydHkyRgpEChFxdWVyeVN0cmluZ1F1b3RlcxIFcXVlcnlSKAomygEGc3RyaW5nigIaGhhxd2VydHkid2l0aCBxdW90ZXMiIHRlc3QyTQpLChhxdWVyeVN0cmluZ1F1b3Rlc1dyYXBwZWQSBXF1ZXJ5UigKJsoBBnN0cmluZ4oCGhoYcXdlcnR5IndpdGggcXVvdGVzIiB0ZXN0MioKKAoMcXVlcnlCb29sZWFuEgVxdWVyeVIRCg/KAQdib29sZWFuigICEAFCVQpTClEKEGRlZmF1bHQgcmVzcG9uc2UaPQo7ChBhcHBsaWNhdGlvbi9qc29uEicKJRIjCiEjL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0UmVzcG9uc2Uq2gEK1wEK1AEKDFRlc3RSZXNwb25zZRLDAQrAAboBAmlkugELc3RyaW5nRmllbGS6AQtudW1iZXJGaWVsZLoBDGJvb2xlYW5GaWVsZMoBBm9iamVjdPoBgwEKEgoCaWQSDAoKygEHaW50ZWdlcgoiCgtzdHJpbmdGaWVsZBITChHKAQZzdHJpbmeKAgUaA2FzZAomCgtudW1iZXJGaWVsZBIXChXKAQZudW1iZXKKAgkJAAAAAAAAJkAKIQoMYm9vbGVhbkZpZWxkEhEKD8oBB2Jvb2xlYW6KAgIQATosChR2ZXJpZnktZGVmYXVsdC12YWx1ZRIUdmVyaWZ5LWRlZmF1bHQtdmFsdWU=')),
);

/// From: 3_0/3248-regression.yaml
final OpenApiProto<v3.Document> fixtures_3_0_3248_regression = (
  model: surface.Model.fromBuffer(base64Decode('CgRpbmZvEiQKBmZvcm1hdCoaCgV2YWx1ZRIGc3RyaW5nUgRqc29uUgNjc3YSJwoScmVxdWlyZWRRdWVyeVBhcmFtKhEKBXF1ZXJ5EgZzdHJpbmcoAxIjCgtmb3JtYXRQYXJhbSoUCgZmb3JtYXQSBmZvcm1hdBgDKAMSqAEKGUdFVF9leGFtcGxlX2FwaVBhcmFtZXRlcnMaPUdFVF9leGFtcGxlX2FwaVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfZXhhbXBsZV9hcGkqLAoScmVxdWlyZWRRdWVyeVBhcmFtEhJyZXF1aXJlZFF1ZXJ5UGFyYW0YAygDKh4KC2Zvcm1hdFBhcmFtEgtmb3JtYXRQYXJhbRgDKAMSdwoYR0VUX2V4YW1wbGVfYXBpUmVzcG9uc2VzGjtHRVRfZXhhbXBsZV9hcGlSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9leGFtcGxlX2FwaSoeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGmYSDC9leGFtcGxlL2FwaRoDR0VUIgtkZXNjcmlwdGlvbioPR0VUX2V4YW1wbGVfYXBpShlHRVRfZXhhbXBsZV9hcGlQYXJhbWV0ZXJzUhhHRVRfZXhhbXBsZV9hcGlSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhITCgRpbmZvEgRpbmZvMgUwLjEuMCLCAQq/AQoML2V4YW1wbGUvYXBpEq4BIqsBEgdzdW1tYXJ5GgtkZXNjcmlwdGlvbjIuEiwKKiMvY29tcG9uZW50cy9wYXJhbWV0ZXJzL3JlcXVpcmVkUXVlcnlQYXJhbTInEiUKIyMvY29tcG9uZW50cy9wYXJhbWV0ZXJzL2Zvcm1hdFBhcmFtQjoSOAoDMjAwEjEKLwoIcmVzcG9uc2UaIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5nKtsBCkUKQwoGZm9ybWF0EjkKN8IBBxIFanNvbgrCAQYSBGNzdgrKAQZzdHJpbmeKAgYaBGpzb26SAg9yZXNwb25zZSBmb3JtYXQakQEKQAoScmVxdWlyZWRRdWVyeVBhcmFtEioKKAoFcXVlcnkSBXF1ZXJ5GglzZXQgcXVlcnkgAVILCgnKAQZzdHJpbmcKTQoLZm9ybWF0UGFyYW0SPgo8CgZmb3JtYXQSBXF1ZXJ5GgpzZXQgZm9ybWF0Uh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvZm9ybWF0')),
);

/// From: 3_0/issue_14765.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_14765 = (
  model: surface.Model.fromBuffer(base64Decode('CgtPcGVuQVBJIFpvbxInCgVaZWJyYSoOCgRuYW1lEgZzdHJpbmcqDgoDYWdlEgdpbnRlZ2VyEqcGCgZBbmltYWwqDgoEbmFtZRIGc3RyaW5nKg4KA2FnZRIHaW50ZWdlcioPCgVhbGlhcxIGc3RyaW5nKg8KBWNvbG9yEgZzdHJpbmcqEQoFbmFtZXMSBnN0cmluZxgCKhIKBmNvbG9ycxIGc3RyaW5nGAIqFwoNc3RyaW5nUGF0dGVybhIGc3RyaW5nKhwKEnN0cmluZ01heE1pbkxlbmd0aBIGc3RyaW5nKhkKD3N0cmluZ01pbkxlbmd0aBIGc3RyaW5nKhkKD3N0cmluZ01heExlbmd0aBIGc3RyaW5nKhwKC3N0cmluZ0VtYWlsEgZzdHJpbmciBWVtYWlsKhQKCWludE1pbk1heBIHaW50ZWdlcioRCgZpbnRNaW4SB2ludGVnZXIqEQoGaW50TWF4EgdpbnRlZ2VyKhYKDG51bWJlck1pbk1heBIGbnVtYmVyKhMKCW51bWJlck1pbhIGbnVtYmVyKhMKCW51bWJlck1heBIGbnVtYmVyKhcKDXN0cmluZ0RlZmF1bHQSBnN0cmluZyoQCgV6ZWJyYRIFWmVicmEYAyofChVzdHJpbmdQYXR0ZXJuTnVsbGFibGUSBnN0cmluZyokChpzdHJpbmdNYXhNaW5MZW5ndGhOdWxsYWJsZRIGc3RyaW5nKiEKF3N0cmluZ01pbkxlbmd0aE51bGxhYmxlEgZzdHJpbmcqIQoXc3RyaW5nTWF4TGVuZ3RoTnVsbGFibGUSBnN0cmluZyokChNzdHJpbmdFbWFpbE51bGxhYmxlEgZzdHJpbmciBWVtYWlsKhwKEWludE1pbk1heE51bGxhYmxlEgdpbnRlZ2VyKhkKDmludE1pbk51bGxhYmxlEgdpbnRlZ2VyKhkKDmludE1heE51bGxhYmxlEgdpbnRlZ2VyKh4KFG51bWJlck1pbk1heE51bGxhYmxlEgZudW1iZXIqGwoRbnVtYmVyTWluTnVsbGFibGUSBm51bWJlciobChFudW1iZXJNYXhOdWxsYWJsZRIGbnVtYmVyKh8KFXN0cmluZ0RlZmF1bHROdWxsYWJsZRIGc3RyaW5nEmcKEkdldFplYnJhc1Jlc3BvbnNlcxovR2V0WmVicmFzUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRaZWJyYXMqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBkFuaW1hbBgCGjgKCWdldFplYnJhcxIHL3plYnJhcxoDR0VUKglHZXRaZWJyYXNSEkdldFplYnJhc1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJUCgtPcGVuQVBJIFpvbyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGhAKDmxvY2FsaG9zdDo4MDgwInMKcQoHL3plYnJhcxJmImQqCWdldFplYnJhc0JXElUKAzIwMBJOCkwKAk9LGkYKRAoQYXBwbGljYXRpb24vanNvbhIwCi4KLMoBBWFycmF58gEhCh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvQW5pbWFsKqALCp0LCmEKBVplYnJhElgKVroBBG5hbWW6AQNhZ2XKAQZvYmplY3T6AT0KHQoEbmFtZRIVChM6CBIGTWFydHkKygEGc3RyaW5nChwKA2FnZRIVChMIAToFEgMxNQrKAQdpbnRlZ2VyCrcKCgZBbmltYWwSrAoKqQq6AQRuYW1lugEDYWdlygEGb2JqZWN0+gGPCgodCgRuYW1lEhUKEzoIEgZNYXJ0eQrKAQZzdHJpbmcKHAoDYWdlEhUKEwgBOgUSAzE1CsoBB2ludGVnZXIKMgoFYWxpYXMSKQonCAE6CRIHU3RyaXB5CsoBBnN0cmluZ5ICDlRoZSBzdHJpcHkgb25lCigKBWNvbG9yEh8KHToGEgRyZWQKygEGc3RyaW5nkgIJVGhlIGNvbG9yCiMKBW5hbWVzEhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZwomCgZjb2xvcnMSHAoaCAHKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKJAoNc3RyaW5nUGF0dGVybhITChGKAQVbYS16XcoBBnN0cmluZwomChJzdHJpbmdNYXhNaW5MZW5ndGgSEAoOeAqAAQHKAQZzdHJpbmcKIQoPc3RyaW5nTWluTGVuZ3RoEg4KDIABAcoBBnN0cmluZwogCg9zdHJpbmdNYXhMZW5ndGgSDQoLeAHKAQZzdHJpbmcKIgoLc3RyaW5nRW1haWwSEwoRygEGc3RyaW5nmgIFZW1haWwKKwoJaW50TWluTWF4Eh4KHFkAAAAAAAAkQGkAAAAAAADwP8oBB2ludGVnZXIKHwoGaW50TWluEhUKE2kAAAAAAADwP8oBB2ludGVnZXIKHwoGaW50TWF4EhUKE1kAAAAAAAAkQMoBB2ludGVnZXIKLQoMbnVtYmVyTWluTWF4Eh0KG1kAAAAAAAAkQGkAAAAAAADwP8oBBm51bWJlcgohCgludW1iZXJNaW4SFAoSaQAAAAAAAPA/ygEGbnVtYmVyCiEKCW51bWJlck1heBIUChJZAAAAAAAAJEDKAQZudW1iZXIKJgoNc3RyaW5nRGVmYXVsdBIVChN4AcoBBnN0cmluZ4oCBRoDQUJDCicKBXplYnJhEh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvWmVicmEKLgoVc3RyaW5nUGF0dGVybk51bGxhYmxlEhUKEwgBigEFW2Etel3KAQZzdHJpbmcKMAoac3RyaW5nTWF4TWluTGVuZ3RoTnVsbGFibGUSEgoQCAF4CoABAcoBBnN0cmluZworChdzdHJpbmdNaW5MZW5ndGhOdWxsYWJsZRIQCg4IAYABAcoBBnN0cmluZwoqChdzdHJpbmdNYXhMZW5ndGhOdWxsYWJsZRIPCg0IAXgBygEGc3RyaW5nCiwKE3N0cmluZ0VtYWlsTnVsbGFibGUSFQoTCAHKAQZzdHJpbmeaAgVlbWFpbAo1ChFpbnRNaW5NYXhOdWxsYWJsZRIgCh4IAVkAAAAAAAAkQGkAAAAAAADwP8oBB2ludGVnZXIKKQoOaW50TWluTnVsbGFibGUSFwoVCAFpAAAAAAAA8D/KAQdpbnRlZ2VyCikKDmludE1heE51bGxhYmxlEhcKFQgBWQAAAAAAACRAygEHaW50ZWdlcgo3ChRudW1iZXJNaW5NYXhOdWxsYWJsZRIfCh0IAVkAAAAAAAAkQGkAAAAAAADwP8oBBm51bWJlcgorChFudW1iZXJNaW5OdWxsYWJsZRIWChQIAWkAAAAAAADwP8oBBm51bWJlcgorChFudW1iZXJNYXhOdWxsYWJsZRIWChQIAVkAAAAAAAAkQMoBBm51bWJlcgowChVzdHJpbmdEZWZhdWx0TnVsbGFibGUSFwoVCAF4AcoBBnN0cmluZ4oCBRoDQUJD')),
);

/// From: 3_0/simplifyBooleanEnum_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_simplify_boolean_enum_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEl0KD0Jvb2xlYW5FbnVtVGVzdCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKiQKDGJvb2xlYW5fZW51bRIHYm9vbGVhblIEdHJ1ZVIFZmFsc2USjgEKHUNvbXBvc2VkU2NoZW1hQm9vbGVhbkVudW1UZXN0KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqJAoMYm9vbGVhbl9lbnVtEgdib29sZWFuUgR0cnVlUgVmYWxzZSoPCgV2YWx1ZRIGc3RyaW5nKhAKBXZhbHVlEgdpbnRlZ2VyEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEEmEKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqKQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SD0Jvb2xlYW5FbnVtVGVzdBgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLDAQrAAQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SoQEingEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCURJPCgMyMDASSApGCgJPSxpACj4KEGFwcGxpY2F0aW9uL2pzb24SKgooEiYKJCMvY29tcG9uZW50cy9zY2hlbWFzL0Jvb2xlYW5FbnVtVGVzdCrwAwrtAwreAQoPQm9vbGVhbkVudW1UZXN0EsoBCscBygEGb2JqZWN0+gGSAQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKQQoEbmFtZRI5CjeKASteW2EtekEtWjAtOV0rW2EtekEtWjAtOVwuXC1fXSpbYS16QS1aMC05XSskygEGc3RyaW5nCjEKDGJvb2xlYW5fZW51bRIhCh/CAQcSBXRydWUKwgEIEgZmYWxzZQrKAQdib29sZWFukgIlYSBtb2RlbCB0byB3aXRoIGJvb2xlYW4gZW51bSBwcm9wZXJ0eQqJAgodQ29tcG9zZWRTY2hlbWFCb29sZWFuRW51bVRlc3QS5wEK5AHKAQZvYmplY3TaAQsKCcoBBnN0cmluZ9oBDAoKygEHaW50ZWdlcvoBkgEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0CkEKBG5hbWUSOQo3igErXlthLXpBLVowLTldK1thLXpBLVowLTlcLlwtX10qW2EtekEtWjAtOV0rJMoBBnN0cmluZwoxCgxib29sZWFuX2VudW0SIQofwgEHEgV0cnVlCsIBCBIGZmFsc2UKygEHYm9vbGVhbpICJWEgbW9kZWwgdG8gd2l0aCBib29sZWFuIGVudW0gcHJvcGVydHk=')),
);

/// From: 3_0/issue_241.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_241 = (
  model: surface.Model.fromBuffer(base64Decode('CgZteVRlc3QSHAoKVXNlckRldGFpbCoOCgRuYW1lEgZzdHJpbmcSFgoEVXNlcioOCgRuYW1lEgZzdHJpbmcSYQoUQ3JlYXRlVXNlclBhcmFtZXRlcnMaM0NyZWF0ZVVzZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQ3JlYXRlVXNlcioUCgh1c2VybmFtZRIGc3RyaW5nKAQSaAoTQ3JlYXRlVXNlclJlc3BvbnNlcxoxQ3JlYXRlVXNlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQ3JlYXRlVXNlcioeChQyMDAgYXBwbGljYXRpb24vanNvbhIEVXNlchgDGmMKCmNyZWF0ZVVzZXISGC91c2Vycy9jcmVhdGUve3VzZXJuYW1lfRoEUE9TVCoKQ3JlYXRlVXNlckoUQ3JlYXRlVXNlclBhcmFtZXRlcnNSE0NyZWF0ZVVzZXJSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIkCgZteVRlc3QSBHRlc3QiDRoLbXlAbWFpbC5jb20yBTEuMC4wGhoKGGh0dHA6Ly9sb2NhbGhvc3Q6OTk5OC92MSKzAQqwAQoYL3VzZXJzL2NyZWF0ZS97dXNlcm5hbWV9EpMBMpABCgR1c2VyKgpjcmVhdGVVc2VyMiEKHwoIdXNlcm5hbWUSBHBhdGggAVILCgnKAQZzdHJpbmdCWRJXCgMyMDASUApOChVUaGUgVXNlciBqdXN0IGNyZWF0ZWQaNQozChBhcHBsaWNhdGlvbi9qc29uEh8KHRIbChkjL2NvbXBvbmVudHMvc2NoZW1hcy9Vc2VyKr8BCrwBCl0KBFVzZXISVQpT0gEjEiEKHyMvY29tcG9uZW50cy9zY2hlbWFzL1VzZXJEZXRhaWzSASoKKLoBBnVzZXJpZLoBCHVzZXJuYW1lygEGb2JqZWN0kgIIVGhlIFVzZXIKWwoKVXNlckRldGFpbBJNCkvKAQZvYmplY3T6ASwKKgoEbmFtZRIiCiDKAQZzdHJpbmeSAhR0aGUgbmFtZSBvZiB0aGUgdXNlcpICEERldGFpbCBvZiBhIFVzZXI6BwoFdXNlcnM=')),
);

/// From: 3_0/any_type.yaml
final OpenApiProto<v3.Document> fixtures_3_0_any_type = (
  model: surface.Model.fromBuffer(base64Decode('CglwaW5nIHRlc3QSGQoIQW55VmFsdWUQASILaW50ZXJmYWNle30SIQoQQW55VmFsdWVXaXRoRGVzYxABIgtpbnRlcmZhY2V7fRIhChBBbnlWYWx1ZU51bGxhYmxlEAEiC2ludGVyZmFjZXt9En0KDUFueVZhbHVlTW9kZWwqFwoJYW55X3ZhbHVlEghBbnlWYWx1ZRgDKikKE2FueV92YWx1ZV93aXRoX2Rlc2MSEEFueVZhbHVlV2l0aERlc2MYAyooChJhbnlfdmFsdWVfbnVsbGFibGUSEEFueVZhbHVlTnVsbGFibGUYAxIaCglhbnlfdmFsdWUQASILaW50ZXJmYWNle30SJAoTYW55X3ZhbHVlX3dpdGhfZGVzYxABIgtpbnRlcmZhY2V7fRIjChJhbnlfdmFsdWVfbnVsbGFibGUQASILaW50ZXJmYWNle30SOQoobWFwX2ZyZWVfZm9ybV9vYmplY3RBZGRpdGlvbmFsUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRJmChRtYXBfZnJlZV9mb3JtX29iamVjdCpOChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSM21hcFtzdHJpbmddbWFwX2ZyZWVfZm9ybV9vYmplY3RBZGRpdGlvbmFsUHJvcGVydGllcxgBEjwKK21hcF9hbnlfdmFsdWVfd2l0aF9kZXNjQWRkaXRpb25hbFByb3BlcnRpZXMQASILaW50ZXJmYWNle30SbAoXbWFwX2FueV92YWx1ZV93aXRoX2Rlc2MqUQoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEjZtYXBbc3RyaW5nXW1hcF9hbnlfdmFsdWVfd2l0aF9kZXNjQWRkaXRpb25hbFByb3BlcnRpZXMYARI7CiptYXBfYW55X3ZhbHVlX251bGxhYmxlQWRkaXRpb25hbFByb3BlcnRpZXMQASILaW50ZXJmYWNle30SagoWbWFwX2FueV92YWx1ZV9udWxsYWJsZSpQChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSNW1hcFtzdHJpbmddbWFwX2FueV92YWx1ZV9udWxsYWJsZUFkZGl0aW9uYWxQcm9wZXJ0aWVzGAESJQoUYXJyYXlfYW55X3ZhbHVlSXRlbXMQASILaW50ZXJmYWNle30SMgoPYXJyYXlfYW55X3ZhbHVlKh8KBWl0ZW1zEhRhcnJheV9hbnlfdmFsdWVJdGVtcxgDEi8KHmFycmF5X2FueV92YWx1ZV93aXRoX2Rlc2NJdGVtcxABIgtpbnRlcmZhY2V7fRJGChlhcnJheV9hbnlfdmFsdWVfd2l0aF9kZXNjKikKBWl0ZW1zEh5hcnJheV9hbnlfdmFsdWVfd2l0aF9kZXNjSXRlbXMYAxIuCh1hcnJheV9hbnlfdmFsdWVfbnVsbGFibGVJdGVtcxABIgtpbnRlcmZhY2V7fRJEChhhcnJheV9hbnlfdmFsdWVfbnVsbGFibGUqKAoFaXRlbXMSHWFycmF5X2FueV92YWx1ZV9udWxsYWJsZUl0ZW1zGAMSuwMKE0FueVZhbHVlTW9kZWxJbmxpbmUqGAoJYW55X3ZhbHVlEglhbnlfdmFsdWUYAyosChNhbnlfdmFsdWVfd2l0aF9kZXNjEhNhbnlfdmFsdWVfd2l0aF9kZXNjGAMqKgoSYW55X3ZhbHVlX251bGxhYmxlEhJhbnlfdmFsdWVfbnVsbGFibGUYAyouChRtYXBfZnJlZV9mb3JtX29iamVjdBIUbWFwX2ZyZWVfZm9ybV9vYmplY3QYAyo0ChdtYXBfYW55X3ZhbHVlX3dpdGhfZGVzYxIXbWFwX2FueV92YWx1ZV93aXRoX2Rlc2MYAyoyChZtYXBfYW55X3ZhbHVlX251bGxhYmxlEhZtYXBfYW55X3ZhbHVlX251bGxhYmxlGAMqJAoPYXJyYXlfYW55X3ZhbHVlEg9hcnJheV9hbnlfdmFsdWUYAyo4ChlhcnJheV9hbnlfdmFsdWVfd2l0aF9kZXNjEhlhcnJheV9hbnlfdmFsdWVfd2l0aF9kZXNjGAMqNgoYYXJyYXlfYW55X3ZhbHVlX251bGxhYmxlEhhhcnJheV9hbnlfdmFsdWVfbnVsbGFibGUYAxoeCgdwaW5nR2V0EgUvcGluZxoDR0VUKgdQaW5nR2V0')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglwaW5nIHRlc3QyAzEuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwMDAvIicKJQoFL3BpbmcSHCIaKgdwaW5nR2V0Qg8SDQoDMjAxEgYKBAoCT0sqigcKhwcKDgoIQW55VmFsdWUSAgoAClUKEEFueVZhbHVlV2l0aERlc2MSQQo/kgI8Q2FuIGJlIGFueSB2YWx1ZSAtIHN0cmluZywgbnVtYmVyLCBib29sZWFuLCBhcnJheSBvciBvYmplY3QuCj4KEEFueVZhbHVlTnVsbGFibGUSKgooCAGSAiNDYW4gYmUgYW55IHZhbHVlLCBpbmNsdWRpbmcgYG51bGxgLgrmAQoNQW55VmFsdWVNb2RlbBLUAQrRAcoBBm9iamVjdPoBswEKLgoJYW55X3ZhbHVlEiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvQW55VmFsdWUKQAoTYW55X3ZhbHVlX3dpdGhfZGVzYxIpEicKJSMvY29tcG9uZW50cy9zY2hlbWFzL0FueVZhbHVlV2l0aERlc2MKPwoSYW55X3ZhbHVlX251bGxhYmxlEikSJwolIy9jb21wb25lbnRzL3NjaGVtYXMvQW55VmFsdWVOdWxsYWJsZZICDnRlc3QgYW55IHZhbHVlCvQDChNBbnlWYWx1ZU1vZGVsSW5saW5lEtwDCtkDygEGb2JqZWN0+gG0AwoPCglhbnlfdmFsdWUSAgoACiwKE2FueV92YWx1ZV93aXRoX2Rlc2MSFQoTkgIQaW5saW5lIGFueSB2YWx1ZQo2ChJhbnlfdmFsdWVfbnVsbGFibGUSIAoeCAGSAhlpbmxpbmUgYW55IHZhbHVlIG51bGxhYmxlCiEKFG1hcF9mcmVlX2Zvcm1fb2JqZWN0EgkKB4ICBAoCCgAKNwoXbWFwX2FueV92YWx1ZV93aXRoX2Rlc2MSHAoaggIXChUKE5ICEGlubGluZSBhbnkgdmFsdWUKQQoWbWFwX2FueV92YWx1ZV9udWxsYWJsZRInCiWCAiIKIAoeCAGSAhlpbmxpbmUgYW55IHZhbHVlIG51bGxhYmxlChwKD2FycmF5X2FueV92YWx1ZRIJCgfyAQQKAgoACjkKGWFycmF5X2FueV92YWx1ZV93aXRoX2Rlc2MSHAoa8gEXChUKE5ICEGlubGluZSBhbnkgdmFsdWUKQwoYYXJyYXlfYW55X3ZhbHVlX251bGxhYmxlEicKJfIBIgogCh4IAZICGWlubGluZSBhbnkgdmFsdWUgbnVsbGFibGWSAhV0ZXN0IGFueSB2YWx1ZSBpbmxpbmU=')),
);

/// From: 3_0/issue_4832.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_4832 = (
  model: surface.Model.fromBuffer(base64Decode('CiBwaW5nIHRoYXQgcmV0dXJuIHByaW1pdGl2ZSB0eXBlcxJ1ChdQaW5nR2V0Qm9vbGVhblJlc3BvbnNlcxo5UGluZ0dldEJvb2xlYW5SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBpbmdHZXRCb29sZWFuKh8KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdib29sZWFuEnwKF1BpbmdHZXRJbnRlZ2VyUmVzcG9uc2VzGjlQaW5nR2V0SW50ZWdlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUGluZ0dldEludGVnZXIqJgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXIiBWludDMyGkwKDnBpbmdHZXRCb29sZWFuEgwvcGluZ0Jvb2xlYW4aA0dFVCoOUGluZ0dldEJvb2xlYW5SF1BpbmdHZXRCb29sZWFuUmVzcG9uc2VzGkwKDnBpbmdHZXRJbnRlZ2VyEgwvcGluZ0ludGVnZXIaA0dFVCoOUGluZ0dldEludGVnZXJSF1BpbmdHZXRJbnRlZ2VyUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRInCiBwaW5nIHRoYXQgcmV0dXJuIHByaW1pdGl2ZSB0eXBlczIDMS4wGhgKFmh0dHA6Ly9sb2NhbGhvc3Q6ODA4Mi8iygEKXwoML3BpbmdCb29sZWFuEk8iTQoEUGluZyoOcGluZ0dldEJvb2xlYW5CNRIzCgMyMDASLAoqCgJPSxokCiIKEGFwcGxpY2F0aW9uL2pzb24SDgoMCgrKAQdib29sZWFuCmcKDC9waW5nSW50ZWdlchJXIlUKBFBpbmcqDnBpbmdHZXRJbnRlZ2VyQj0SOwoDMjAwEjQKMgoCT0saLAoqChBhcHBsaWNhdGlvbi9qc29uEhYKFAoSygEHaW50ZWdlcpoCBWludDMy')),
);

/// From: 3_0/issue_12445.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_12445 = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEh0KA1BldCoWCgdwZXRUeXBlEglQZXRCeVR5cGUYAxJiCgNEb2cqFgoHcGV0VHlwZRIJUGV0QnlUeXBlGAMqDwoEYmFyaxIHYm9vbGVhbioyCgVicmVlZBIGc3RyaW5nUgVEaW5nb1IFSHVza3lSCVJldHJpZXZlclIIU2hlcGhlcmQSPwoDQ2F0KhYKB3BldFR5cGUSCVBldEJ5VHlwZRgDKhAKBWh1bnRzEgdib29sZWFuKg4KA2FnZRIHaW50ZWdlchImCglQZXRCeVR5cGUqGQoFdmFsdWUSBnN0cmluZ1IDQ2F0UgNEb2cSgwEKH0dFVF9wZXRzX3BldFR5cGVfdHlwZVBhcmFtZXRlcnMaSUdFVF9wZXRzX3BldFR5cGVfdHlwZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfcGV0c19wZXRUeXBlX3R5cGUqFQoEdHlwZRIJUGV0QnlUeXBlGAMoBBKIAQoeR0VUX3BldHNfcGV0VHlwZV90eXBlUmVzcG9uc2VzGkdHRVRfcGV0c19wZXRUeXBlX3R5cGVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9wZXRzX3BldFR5cGVfdHlwZSodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAIacxIUL3BldHMvcGV0VHlwZS97dHlwZX0aA0dFVCoVR0VUX3BldHNfcGV0VHlwZV90eXBlSh9HRVRfcGV0c19wZXRUeXBlX3R5cGVQYXJhbWV0ZXJzUh5HRVRfcGV0c19wZXRUeXBlX3R5cGVSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK0AQqxAQoUL3BldHMvcGV0VHlwZS97dHlwZX0SmAEilQEyNAoyCgR0eXBlEgRwYXRoIAFSIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRCeVR5cGVCXRJbCgMyMDASVApSCgtnZXQgYnkgdHlwZRpDCkEKEGFwcGxpY2F0aW9uL2pzb24SLQorCinKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldCqaAwqXAwpOCgNQZXQSRwpFugEHcGV0VHlwZcoBBm9iamVjdPoBLwotCgdwZXRUeXBlEiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0QnlUeXBlCrEBCgNEb2cSqQEKpgHSARQKEpICD0RvZyBpbmZvcm1hdGlvbtIBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXTSAW0Ka8oBBm9iamVjdPoBXwoUCgRiYXJrEgwKCsoBB2Jvb2xlYW4KRwoFYnJlZWQSPgo8wgEIEgZEaW5nbwrCAQgSBkh1c2t5CsIBDBIKUmV0cmlldmVyCsIBCxIJU2hlcGhlcmQKygEGc3RyaW5nCmUKA0NhdBJeClzSARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV00gE6CjjKAQZvYmplY3T6ASwKFQoFaHVudHMSDAoKygEHYm9vbGVhbgoTCgNhZ2USDAoKygEHaW50ZWdlcgoqCglQZXRCeVR5cGUSHQobwgEGEgRDYXQKwgEGEgREb2cKygEGc3RyaW5n')),
);

/// From: 3_0/enableKeepOnlyFirstTagInOperation_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_enable_keep_only_first_tag_in_operation_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEkMKBlBlcnNvbioQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nEhcKBUR1bW15Kg4KBHRlc3QSBnN0cmluZxJPCg5MaXN0UGFyYW1ldGVycxonTGlzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBMaXN0KhQKCHBlcnNvbklkEgZzdHJpbmcoBBJYCg1MaXN0UmVzcG9uc2VzGiVMaXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBMaXN0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxJMCg1QdXRQYXJhbWV0ZXJzGiVQdXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUHV0KhQKCHBlcnNvbklkEgZzdHJpbmcoBBJVCgxQdXRSZXNwb25zZXMaI1B1dFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUHV0KiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxJVChBEZWxldGVQYXJhbWV0ZXJzGitEZWxldGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gRGVsZXRlKhQKCHBlcnNvbklkEgZzdHJpbmcoBBJeCg9EZWxldGVSZXNwb25zZXMaKURlbGV0ZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgRGVsZXRlKiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZQZXJzb24YAxpMCgRsaXN0EhovcGVyc29uL2Rpc3BsYXkve3BlcnNvbklkfRoDR0VUKgRMaXN0Sg5MaXN0UGFyYW1ldGVyc1INTGlzdFJlc3BvbnNlcxpICgNwdXQSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNQVVQqA1B1dEoNUHV0UGFyYW1ldGVyc1IMUHV0UmVzcG9uc2VzGlcKBmRlbGV0ZRIaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0aBkRFTEVURSoGRGVsZXRlShBEZWxldGVQYXJhbWV0ZXJzUg9EZWxldGVSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSKhBAqeBAoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0S/wMipAEKBnBlcnNvbgoFYmFzaWMqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqcAQoGcGVyc29uKgNwdXQyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbjq2AQoGcGVyc29uKgZkZWxldGUyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbmoVCgp4LWludGVybmFsEgcSBXRydWUKKssBCsgBCmsKBlBlcnNvbhJhCl/KAQZvYmplY3T6AUoKFQoGJF90eXBlEgsKCcoBBnN0cmluZwoXCghsYXN0TmFtZRILCgnKAQZzdHJpbmcKGAoJZmlyc3ROYW1lEgsKCcoBBnN0cmluZ5ICBnBlcnNvbgpZCgVEdW1teRJQCk7KAQZvYmplY3T6ARUKEwoEdGVzdBILCgnKAQZzdHJpbmeSAhJ0byB0ZXN0IHgtaW50ZXJuYWyiAhUKCngtaW50ZXJuYWwSBxIFdHJ1ZQo=')),
);

/// From: 3_0/issue_7199_array_simple_string.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7199_array_simple_string = (
  model: surface.Model.fromBuffer(base64Decode('CgREZW1vElUKEUdFVF9pZHNQYXJhbWV0ZXJzGi1HRVRfaWRzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF9pZHMqEQoDaWRzEgZzdHJpbmcYAigEGikSBi97aWRzfRoDR0VUKgdHRVRfaWRzShFHRVRfaWRzUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBINCgREZW1vMgUxLjAuMCJmCmQKBi97aWRzfRJaIlgyMwoxCgNpZHMSBHBhdGggAToGc2ltcGxlUhoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZ0IhEh8KAzIwMBIYChYKFFN1Y2Nlc3NmdWwgb3BlcmF0aW9u')),
);

/// From: 3_0/schema.yaml
final OpenApiProto<v3.Document> fixtures_3_0_schema = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEiMKEmZyZWVfZm9ybV9vYmplY3RfMRABIgtpbnRlcmZhY2V7fRIjChJmcmVlX2Zvcm1fb2JqZWN0XzIQASILaW50ZXJmYWNle30SNwomZnJlZV9mb3JtX29iamVjdF8zQWRkaXRpb25hbFByb3BlcnRpZXMQASILaW50ZXJmYWNle30SYgoSZnJlZV9mb3JtX29iamVjdF8zKkwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIxbWFwW3N0cmluZ11mcmVlX2Zvcm1fb2JqZWN0XzNBZGRpdGlvbmFsUHJvcGVydGllcxgBEjQKBG1hcDEqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEioKBmFueW9mMSoPCgV2YWx1ZRIGbnVtYmVyKg8KBXZhbHVlEgZzdHJpbmcSLAoGYW55b2YyKg8KBXZhbHVlEgZzdHJpbmcqEQoFdmFsdWUSBnN0cmluZxgCEisKBm9uZW9mMSoPCgV2YWx1ZRIGc3RyaW5nKhAKBXZhbHVlEgdpbnRlZ2VyEtYBCgRNaXNjKioKEmZyZWVfZm9ybV9vYmplY3RfMRISZnJlZV9mb3JtX29iamVjdF8xGAMqKgoSZnJlZV9mb3JtX29iamVjdF8yEhJmcmVlX2Zvcm1fb2JqZWN0XzIYAyoqChJmcmVlX2Zvcm1fb2JqZWN0XzMSEmZyZWVfZm9ybV9vYmplY3RfMxgDKg4KBG1hcDESBG1hcDEYAyoSCgZhbnlvZjESBmFueW9mMRgDKhIKBmFueW9mMhIGYW55b2YyGAMqEgoGb25lb2YxEgZvbmVvZjEYAxowCg9kdW1teV9vcGVyYXRpb24SBi9kdW1teRoEUE9TVCoPRHVtbXlfb3BlcmF0aW9u')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBLeAQoQT3BlbkFQSSBQZXRzdG9yZRKCAVRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gRm9yIHRoaXMgc2FtcGxlLCB5b3UgY2FuIHVzZSB0aGUgYXBpIGtleSBgc3BlY2lhbC1rZXlgIHRvIHRlc3QgdGhlIGF1dGhvcml6YXRpb24gZmlsdGVycy4qPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBofCh1odHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92MiJ0CnIKBi9kdW1teRJoMmYKBWR1bW15Eg9kdW1teSBvcGVyYXRpb24qD2R1bW15X29wZXJhdGlvbkI7Eh8KAzIwMBIYChYKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uEhgKAzQwNRIRCg8KDUludmFsaWQgaW5wdXQqgAMK/QIK0AIKBE1pc2MSxwIKxALKAQZvYmplY3T6AagCCiEKEmZyZWVfZm9ybV9vYmplY3RfMRILCgnKAQZvYmplY3QKJgoSZnJlZV9mb3JtX29iamVjdF8yEhAKDsoBBm9iamVjdIICAhABCigKEmZyZWVfZm9ybV9vYmplY3RfMxISChDKAQZvYmplY3SCAgQKAgoACiMKBG1hcDESGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZwooCgZhbnlvZjESHgoc4gELCgnKAQZudW1iZXLiAQsKCcoBBnN0cmluZwo3CgZhbnlvZjISLQor4gELCgnKAQZzdHJpbmfiARoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZwopCgZvbmVvZjESHwod2gELCgnKAQZzdHJpbmfaAQwKCsoBB2ludGVnZXKSAgxTY2hlbWEgdGVzdHMKKAoGYW55b2YxEh4KHOIBCwoJygEGc3RyaW5n4gELCgnKAQZudW1iZXI6IQoDcGV0EhpFdmVyeXRoaW5nIGFib3V0IHlvdXIgUGV0czoiCgVzdG9yZRIZQWNjZXNzIHRvIFBldHN0b3JlIG9yZGVyczodCgR1c2VyEhVPcGVyYXRpb25zIGFib3V0IHVzZXJCMAobRmluZCBvdXQgbW9yZSBhYm91dCBTd2FnZ2VyEhFodHRwOi8vc3dhZ2dlci5pbw==')),
);

/// From: 3_0/petstore.json
final OpenApiProto<v3.Document> fixtures_3_0_petstore = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/rootOperation.yaml
final OpenApiProto<v3.Document> fixtures_3_0_root_operation = (
  model: surface.Model.fromBuffer(base64Decode('Cg5Sb290IE9wZXJhdGlvbhoOEgEvGgNHRVQqBEdFVF8=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIXCg5Sb290IE9wZXJhdGlvbjIFMS4wLjAiPgo8CgEvEjciNRIUU2ltcGxlIHJvb3QgZW5kcG9pbnRCHRIbCgMyMDQSFAoSChBObyByZXNwb25zZSBib2R5')),
);

/// From: 3_0/issue_9447.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_9447 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEiQKEFVuYm91bmRlZEludGVnZXIqEAoFdmFsdWUSB2ludGVnZXISIAoFSW50MzIqFwoFdmFsdWUSB2ludGVnZXIiBWludDMyEiAKBUludDY0KhcKBXZhbHVlEgdpbnRlZ2VyIgVpbnQ2NBJsChtPYmplY3RNb2RlbFdpdGhJbnRlZ2VyUHJvcHMqGwoQVW5ib3VuZGVkSW50ZWdlchIHaW50ZWdlcioXCgVJbnQzMhIHaW50ZWdlciIFaW50MzIqFwoFSW50NjQSB2ludGVnZXIiBWludDY0EjoKG1VuYm91bmRlZEludGVnZXJSZXF1ZXN0Qm9keSobChBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyEqsBChpVbmJvdW5kZWRJbnRlZ2VyUGFyYW1ldGVycxo/VW5ib3VuZGVkSW50ZWdlclBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBVbmJvdW5kZWRJbnRlZ2VyKh0KEFVuYm91bmRlZEludGVnZXISB2ludGVnZXIoBCotCgxyZXF1ZXN0X2JvZHkSG1VuYm91bmRlZEludGVnZXJSZXF1ZXN0Qm9keRgDEnsKGVVuYm91bmRlZEludGVnZXJSZXNwb25zZXMaPVVuYm91bmRlZEludGVnZXJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFVuYm91bmRlZEludGVnZXIqHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXISNgoQSW50NjRSZXF1ZXN0Qm9keSoiChBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyIgVpbnQ2NBJ7Cg9JbnQ2NFBhcmFtZXRlcnMaKUludDY0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEludDY0KhkKBUludDY0EgdpbnRlZ2VyIgVpbnQ2NCgEKiIKDHJlcXVlc3RfYm9keRIQSW50NjRSZXF1ZXN0Qm9keRgDEmEKDkludDY0UmVzcG9uc2VzGidJbnQ2NFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgSW50NjQqJgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXIiBWludDY0EjYKEEludDMyUmVxdWVzdEJvZHkqIgoQYXBwbGljYXRpb24vanNvbhIHaW50ZWdlciIFaW50MzISewoPSW50MzJQYXJhbWV0ZXJzGilJbnQzMlBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBJbnQzMioZCgVJbnQzMhIHaW50ZWdlciIFaW50MzIoBCoiCgxyZXF1ZXN0X2JvZHkSEEludDMyUmVxdWVzdEJvZHkYAxJhCg5JbnQzMlJlc3BvbnNlcxonSW50MzJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEludDMyKiYKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdpbnRlZ2VyIgVpbnQzMhp0ChBVbmJvdW5kZWRJbnRlZ2VyEhEvVW5ib3VuZGVkSW50ZWdlchoEUE9TVCoQVW5ib3VuZGVkSW50ZWdlckoaVW5ib3VuZGVkSW50ZWdlclBhcmFtZXRlcnNSGVVuYm91bmRlZEludGVnZXJSZXNwb25zZXMaPQoFSW50NjQSBi9JbnQ2NBoEUE9TVCoFSW50NjRKD0ludDY0UGFyYW1ldGVyc1IOSW50NjRSZXNwb25zZXMaPQoFSW50MzISBi9JbnQzMhoEUE9TVCoFSW50MzJKD0ludDMyUGFyYW1ldGVyc1IOSW50MzJSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJ5ChBPcGVuQVBJIFBldHN0b3JlEh5zYW1wbGUgdG8gdmV0IGludGVnZXIgaGFuZGxpbmcqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBoiCiBodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pbzo4MC92MiK0BAq/AQoRL1VuYm91bmRlZEludGVnZXISqQEypgEqEFVuYm91bmRlZEludGVnZXIyKgooChBVbmJvdW5kZWRJbnRlZ2VyEgRwYXRoIAFSDAoKygEHaW50ZWdlcjoqCigSJAoiChBhcHBsaWNhdGlvbi9qc29uEg4KDAoKygEHaW50ZWdlchgBQjoSOAoDMjAwEjEKLwoHc3VjY2VzcxokCiIKEGFwcGxpY2F0aW9uL2pzb24SDgoMCgrKAQdpbnRlZ2VyCrYBCgYvSW50NjQSqwEyqAEqBUludDY0MicKJQoFSW50NjQSBHBhdGggAVIUChLKAQdpbnRlZ2VymgIFaW50NjQ6MgowEiwKKgoQYXBwbGljYXRpb24vanNvbhIWChQKEsoBB2ludGVnZXKaAgVpbnQ2NBgBQkISQAoDMjAwEjkKNwoHc3VjY2VzcxosCioKEGFwcGxpY2F0aW9uL2pzb24SFgoUChLKAQdpbnRlZ2VymgIFaW50NjQKtgEKBi9JbnQzMhKrATKoASoFSW50MzIyJwolCgVJbnQzMhIEcGF0aCABUhQKEsoBB2ludGVnZXKaAgVpbnQzMjoyCjASLAoqChBhcHBsaWNhdGlvbi9qc29uEhYKFAoSygEHaW50ZWdlcpoCBWludDMyGAFCQhJACgMyMDASOQo3CgdzdWNjZXNzGiwKKgoQYXBwbGljYXRpb24vanNvbhIWChQKEsoBB2ludGVnZXKaAgVpbnQzMir1AQrwAQogChBVbmJvdW5kZWRJbnRlZ2VyEgwKCsoBB2ludGVnZXIKHQoFSW50MzISFAoSygEHaW50ZWdlcpoCBWludDMyCh0KBUludDY0EhQKEsoBB2ludGVnZXKaAgVpbnQ2NAqNAQobT2JqZWN0TW9kZWxXaXRoSW50ZWdlclByb3BzEm4KbMoBBm9iamVjdPoBYAogChBVbmJvdW5kZWRJbnRlZ2VyEgwKCsoBB2ludGVnZXIKHQoFSW50MzISFAoSygEHaW50ZWdlcpoCBWludDMyCh0KBUludDY0EhQKEsoBB2ludGVnZXKaAgVpbnQ2NDoA')),
);

/// From: 3_0/additional-properties-deeply-nested.yaml
final OpenApiProto<v3.Document> fixtures_3_0_additional_properties_deeply_nested = (
  model: surface.Model.fromBuffer(base64Decode('CiNUZXN0IGFkZGl0aW9uYWwgcHJvcGVydGllcyB3aXRoIHJlZhIxCgZQZXJzb24qEgoIbGFzdE5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZxJ3CkdwaW5nR2V0RGVmYXVsdCBhcHBsaWNhdGlvbi9qc29uQWRkaXRpb25hbFByb3BlcnRpZXNBZGRpdGlvbmFsUHJvcGVydGllcyosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddUGVyc29uGAESpAEKM3BpbmdHZXREZWZhdWx0IGFwcGxpY2F0aW9uL2pzb25BZGRpdGlvbmFsUHJvcGVydGllcyptChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSUm1hcFtzdHJpbmddcGluZ0dldERlZmF1bHQgYXBwbGljYXRpb24vanNvbkFkZGl0aW9uYWxQcm9wZXJ0aWVzQWRkaXRpb25hbFByb3BlcnRpZXMYARJ8Ch9waW5nR2V0RGVmYXVsdCBhcHBsaWNhdGlvbi9qc29uKlkKFWFkZGl0aW9uYWxfcHJvcGVydGllcxI+bWFwW3N0cmluZ11waW5nR2V0RGVmYXVsdCBhcHBsaWNhdGlvbi9qc29uQWRkaXRpb25hbFByb3BlcnRpZXMYARJtChBQaW5nR2V0UmVzcG9uc2VzGitQaW5nR2V0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQaW5nR2V0KiwKB2RlZmF1bHQSH3BpbmdHZXREZWZhdWx0IGFwcGxpY2F0aW9uL2pzb24YAxoxCgdwaW5nR2V0EgUvcGluZxoEUE9TVCoHUGluZ0dldFIQUGluZ0dldFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIqCiNUZXN0IGFkZGl0aW9uYWwgcHJvcGVydGllcyB3aXRoIHJlZjIDMS4wGhgKFmh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC8imgEKlwEKBS9waW5nEo0BMooBKgdwaW5nR2V0Qn8KfQp7ChBkZWZhdWx0IHJlc3BvbnNlGmcKZQoQYXBwbGljYXRpb24vanNvbhJRCk8KTcoBBm9iamVjdIICQQo/Cj3KAQZvYmplY3SCAjEKLwotygEGb2JqZWN0ggIhCh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGVyc29uKk8KTQpLCgZQZXJzb24SQQo/ygEGb2JqZWN0+gEzChcKCGxhc3ROYW1lEgsKCcoBBnN0cmluZwoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5n')),
);

/// From: 3_0/issue_10792.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_10792 = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEhwKBmFuaW1hbCoSCgJpZBIGc3RyaW5nIgR1dWlkEjEKBGJpcmQqEgoCaWQSBnN0cmluZyIEdXVpZCoVCgtmZWF0aGVyVHlwZRIGc3RyaW5nEmIKEUdldC1CaXJkUmVzcG9uc2VzGi1HZXQtQmlyZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0LUJpcmQqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBGJpcmQYAxo7CghnZXQtYmlyZBINL3YxL2JpcmQve2lkfRoDR0VUKghHZXQtQmlyZFIRR2V0LUJpcmRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJGCgdFeGFtcGxlEgpBbiBleGFtcGxlIioSE2h0dHBzOi8vZXhhbXBsZS5vcmcaE2NvbnRhY3RAZXhhbXBsZS5vcmcyAzAuMRoUChJodHRwOi8vZXhhbXBsZS5vcmcikgEKjwEKDS92MS9iaXJkL3tpZH0SfiJYCgRiaXJkKghnZXQtYmlyZEJGEkQKAzIwMBI9CjsKAk9LGjUKMwoQYXBwbGljYXRpb24vanNvbhIfCh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvYmlyZGoiCiAKAmlkEgRwYXRoIAFSEgoQygEGc3RyaW5nmgIEdXVpZCrlAQriAQpvCgZhbmltYWwSZQpjEisKBHR5cGUSIwohCgRCSVJEEhkjL2NvbXBvbmVudHMvc2NoZW1hcy9iaXJkSglBbiBhbmltYWy6AQJpZMoBBm9iamVjdPoBGgoYCgJpZBISChDKAQZzdHJpbmeaAgR1dWlkCm8KBGJpcmQSZwplSgZBIGJpcmTKAQZvYmplY3TSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvYW5pbWFs0gEvCi26AQtmZWF0aGVyVHlwZfoBHAoaCgtmZWF0aGVyVHlwZRILCgnKAQZzdHJpbmc6BgoEYmlyZA==')),
);

/// From: 3_0/issue392.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue392 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEm4KA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqKgoGc3RhdHVzEgZzdHJpbmdSCWF2YWlsYWJsZVIHcGVuZGluZ1IEc29sZBIuChFhZGRQZXRSZXF1ZXN0Qm9keSoZChBhcHBsaWNhdGlvbi9qc29uEgNQZXQYAxJkChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0KiMKDHJlcXVlc3RfYm9keRIRYWRkUGV0UmVxdWVzdEJvZHkYAxJmChRHZXRQZXRCeUlkUGFyYW1ldGVycxozR2V0UGV0QnlJZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHZXRQZXRCeUlkKhkKBXBldElkEgdpbnRlZ2VyIgVpbnQ2NCgEEmcKE0dldFBldEJ5SWRSZXNwb25zZXMaMUdldFBldEJ5SWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdldFBldEJ5SWQqHQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SA1BldBgDGi4KBmFkZFBldBIEL3BldBoEUE9TVCoGQWRkUGV0ShBBZGRQZXRQYXJhbWV0ZXJzGmwKCmdldFBldEJ5SWQSDC9wZXQve3BldElkfRoDR0VUIhRSZXR1cm5zIGEgc2luZ2xlIHBldCoKR2V0UGV0QnlJZEoUR2V0UGV0QnlJZFBhcmFtZXRlcnNSE0dldFBldEJ5SWRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKXAQoQT3BlbkFQSSBQZXRzdG9yZRI8VXNlZCBmb3IgdmVyaWZpY2F0aW9uIG9mIEF1dGhvcml6YXRpb25TY29wZSByZXNvbHV0aW9uIGlzc3VlKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaHwodaHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vdjIi+gMKtwEKBC9wZXQSrgEyqwEKA3BldBIaQWRkIGEgbmV3IHBldCB0byB0aGUgc3RvcmUqBmFkZFBldDo4CjYSNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRCGhIYCgM0MDUSEQoPCg1JbnZhbGlkIGlucHV0WioKKAoNcGV0c3RvcmVfYXV0aBIXCgp3cml0ZTpwZXRzCglyZWFkOnBldHMKvQIKDC9wZXQve3BldElkfRKsAiKpAgoDcGV0Eg5GaW5kIHBldCBieSBJRBoUUmV0dXJucyBhIHNpbmdsZSBwZXQqCmdldFBldEJ5SWQyPAo6CgVwZXRJZBIEcGF0aBoTSUQgb2YgcGV0IHRvIHJldHVybiABUhQKEsoBB2ludGVnZXKaAgVpbnQ2NEKRARJVCgMyMDASTgpMChRzdWNjZXNzZnVsIG9wZXJhdGlvbho0CjIKEGFwcGxpY2F0aW9uL2pzb24SHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldBIeCgM0MDASFwoVChNJbnZhbGlkIElEIHN1cHBsaWVkEhgKAzQwNBIRCg8KDVBldCBub3QgZm91bmRaHgocCg1wZXRzdG9yZV9hdXRoEgsKCXJlYWQ6cGV0cyrcAwqTAgqQAgoDUGV0EogCCoUCSgVhIFBldLoBBG5hbWW6AQlwaG90b1VybHPKAQZvYmplY3T6AbwBChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoeCgRuYW1lEhYKFDoJEgdkb2dnaWUKygEGc3RyaW5nCicKCXBob3RvVXJscxIaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKVQoGc3RhdHVzEksKScIBDBIKYXZhaWxhYmxlCsIBChIIcGVuZGluZwrCAQcSBXNvbGQKygEGc3RyaW5nkgIXcGV0IHN0YXR1cyBpbiB0aGUgc3RvcmWSAh9BIHBldCBmb3Igc2FsZSBpbiB0aGUgcGV0IHN0b3JlOsMBCpgBCg1wZXRzdG9yZV9hdXRoEoYBCoMBCgZvYXV0aDI6eQp3CitodHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby9hcGkvb2F1dGgvZGlhbG9nIkgKKQoKd3JpdGU6cGV0cxIbbW9kaWZ5IHBldHMgaW4geW91ciBhY2NvdW50ChsKCXJlYWQ6cGV0cxIOcmVhZCB5b3VyIHBldHMKJgoHYXBpX2tleRIbChkKBmFwaUtleRoHYXBpX2tleSIGaGVhZGVy')),
);

/// From: 3_0/issue14525.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue14525 = (
  model: surface.Model.fromBuffer(base64Decode('CghEZW1vIGFwcBJYCg1EZW1vUmVzcG9uc2VzGiVEZW1vUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBEZW1vKiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcYAhonCgRkZW1vEgUvZGVtbxoDR0VUKgREZW1vUg1EZW1vUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIRCghEZW1vIGFwcDIFMS4wLjAiaQpnCgUvZGVtbxJeIlwSBERlbW8qBGRlbW9CThJMCgMyMDASRQpDCg1EZW1vIHJlc3BvbnNlGjIKMAoQYXBwbGljYXRpb24vanNvbhIcChoKGMoBBWFycmF58gENCgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/issue_7361.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7361 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEhkKCEZyZWVGb3JtEAEiC2ludGVyZmFjZXt9EiIKEUZyZWVGb3JtSW50ZXJmYWNlEAEiC2ludGVyZmFjZXt9EicKFkZyZWVGb3JtV2l0aFZhbGlkYXRpb24QASILaW50ZXJmYWNle30SGwoKU29tZU9iamVjdBABIgtpbnRlcmZhY2V7fQ==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKBAQoQT3BlbkFQSSBQZXRzdG9yZRImYSBzcGVjIHRvIHRlc3QgZnJlZSBmb3JtIG9iamVjdCBtb2RlbHMqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMCIAKpMCCpACCoIBCghGcmVlRm9ybRJ2CnTKAQZvYmplY3SSAmh0aGlzIHdpbGwgbm90IGJlIGdlbmVyYXRlZCBiZWNhdXNlIGEgbWFwIHdpbGwgYmUgdXNlZCB3aGVuIG90aGVyIGNvbXBvbmVudHMgb3IgZW5kcG9pbnRzIHJlZiB0aGlzIHNjaGVtYQogChFGcmVlRm9ybUludGVyZmFjZRILCgnKAQZvYmplY3QKKAoWRnJlZUZvcm1XaXRoVmFsaWRhdGlvbhIOCgywAQHKAQZvYmplY3QKPQoKU29tZU9iamVjdBIvCi3SASoSKAomIy9jb21wb25lbnRzL3NjaGVtYXMvRnJlZUZvcm1JbnRlcmZhY2U=')),
);

/// From: 3_0/oneOf.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSFwoFYXBwbGUqDgoEa2luZBIGc3RyaW5nEhkKBmJhbmFuYSoPCgVjb3VudBIGbnVtYmVyEjkKBWZydWl0Kg8KBWNvbG9yEgZzdHJpbmcqDgoEa2luZBIGc3RyaW5nKg8KBWNvdW50EgZudW1iZXISVwoNR0VUX1Jlc3BvbnNlcxolR0VUX1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUXyofChQyMDAgYXBwbGljYXRpb24vanNvbhIFZnJ1aXQYAxodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIlQKUgoBLxJNIktCSRJHCgMyMDASQAo+CgRkZXNjGjYKNAoQYXBwbGljYXRpb24vanNvbhIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvZnJ1aXQq4AEK3QEKbgoFZnJ1aXQSZQpjSgVmcnVpdNoBHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9hcHBsZdoBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9iYW5hbmH6ARYKFAoFY29sb3ISCwoJygEGc3RyaW5nCjMKBWFwcGxlEioKKEoFYXBwbGXKAQZvYmplY3T6ARUKEwoEa2luZBILCgnKAQZzdHJpbmcKNgoGYmFuYW5hEiwKKkoGYmFuYW5hygEGb2JqZWN0+gEWChQKBWNvdW50EgsKCcoBBm51bWJlcg==')),
);

/// From: 3_0/11_regex.yaml
final OpenApiProto<v3.Document> fixtures_3_0_11_regex = (
  model: surface.Model.fromBuffer(base64Decode('CgRUZXN0Eh0KBFVVSUQqFQoFdmFsdWUSBnN0cmluZyIEdXVpZBI2Ch1TdHJpbmdXaXRoUmVnZXhXaXRoVGhyZWVGbGFncyoVCgV2YWx1ZRIGc3RyaW5nIgR1dWlkElcKEkdFVF90ZXN0UGFyYW1ldGVycxovR0VUX3Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX3Rlc3QqEAoEdXVpZBIEVVVJRBgDKAMaKhIFL3Rlc3QaA0dFVCoIR0VUX3Rlc3RKEkdFVF90ZXN0UGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIWCgRUZXN0Mg4xLjAuMC1TTkFQU0hPVCJdClsKBS90ZXN0ElIiUAoNVGVzdCBSZXNvdXJjZTIuCiwKBHV1aWQSBXF1ZXJ5Uh0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvVVVJREIPEg0KAzIwMBIGCgQKAk9LKqwBCqkBCmgKBFVVSUQSYApeigFLW2EtZkEtRjAtOV17OH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17NH0tW2EtZkEtRjAtOV17MTJ9ygEGc3RyaW5nmgIEdXVpZAo9Ch1TdHJpbmdXaXRoUmVnZXhXaXRoVGhyZWVGbGFncxIcChqKAQcvYS4vc2ltygEGc3RyaW5nmgIEdXVpZA==')),
);

/// From: 3_0/issue_17555.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_17555 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjAKD1RlYW1Dcml0ZXJpYURUTyoNCgNrZXkSBnN0cmluZyoOCgRuYW1lEgZzdHJpbmcSLQoRZGVwYXJ0bWVudElkUGFyYW0qGAoMZGVwYXJ0bWVudElkEgZzdHJpbmcoBBIvCg50ZWFtUXVlcnlQYXJhbSodCgZmaWx0ZXISD1RlYW1Dcml0ZXJpYURUTxgDKAMSuAEKHUZpbmREZXBhcnRtZW50VGVhbXNQYXJhbWV0ZXJzGkVGaW5kRGVwYXJ0bWVudFRlYW1zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEZpbmREZXBhcnRtZW50VGVhbXMqKgoRZGVwYXJ0bWVudElkUGFyYW0SEWRlcGFydG1lbnRJZFBhcmFtGAMoBCokCg50ZWFtUXVlcnlQYXJhbRIOdGVhbVF1ZXJ5UGFyYW0YAygDGosBChNmaW5kRGVwYXJ0bWVudFRlYW1zEiQvYXBpL2RlcGFydG1lbnQve2RlcGFydG1lbnRJZH0vdGVhbXMaA0dFVCIVRmluZCBEZXBhcnRtZW50IFRlYW1zKhNGaW5kRGVwYXJ0bWVudFRlYW1zSh1GaW5kRGVwYXJ0bWVudFRlYW1zUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJpChBPcGVuQVBJIFBldHN0b3JlEg5NeSBkZXNjcmlwdGlvbio+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wIuoBCucBCiQvYXBpL2RlcGFydG1lbnQve2RlcGFydG1lbnRJZH0vdGVhbXMSvgEiuwEKCkRlcGFydG1lbnQSFUZpbmQgRGVwYXJ0bWVudCBUZWFtcxoVRmluZCBEZXBhcnRtZW50IFRlYW1zKhNmaW5kRGVwYXJ0bWVudFRlYW1zMi0SKwopIy9jb21wb25lbnRzL3BhcmFtZXRlcnMvZGVwYXJ0bWVudElkUGFyYW0yKhIoCiYjL2NvbXBvbmVudHMvcGFyYW1ldGVycy90ZWFtUXVlcnlQYXJhbUIPEg0KAzIwMBIGCgQKAk9LKqICCl0KWwoPVGVhbUNyaXRlcmlhRFRPEkgKRkoPVGVhbUNyaXRlcmlhRFRPygEGb2JqZWN0+gEpChIKA2tleRILCgnKAQZzdHJpbmcKEwoEbmFtZRILCgnKAQZzdHJpbmcawAEKWgoRZGVwYXJ0bWVudElkUGFyYW0SRQpDCgxkZXBhcnRtZW50SWQSBHBhdGgaHklEIG9mIHRoZSBkZXBhcnRtZW50IHRvIHNlYXJjaCABUgsKCcoBBnN0cmluZwpiCg50ZWFtUXVlcnlQYXJhbRJQCk4KBmZpbHRlchIFcXVlcnkaEUZldGNoIHRlYW1zIHF1ZXJ5MAFSKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9UZWFtQ3JpdGVyaWFEVE86LgoKZGVwYXJ0bWVudBIgRXZlcnl0aGluZyBhYm91dCB5b3VyIERlcGFydG1lbnQ=')),
);

/// From: 3_0/issue8792.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue8792 = (
  model: surface.Model.fromBuffer(base64Decode('Cil0ZXN0IHVzZUFic3RyYWN0aW9uRm9yRmlsZXMgZm9yIGpheHJzLWN4ZhJhChZHRVRfZmlsZXNfaWRQYXJhbWV0ZXJzGjdHRVRfZmlsZXNfaWRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX2ZpbGVzX2lkKg4KAmlkEgZzdHJpbmcoBBIqChQ1MDAgYXBwbGljYXRpb24vanNvbioSCghlcnJvcm1zZxIGc3RyaW5nEq4BChVHRVRfZmlsZXNfaWRSZXNwb25zZXMaNUdFVF9maWxlc19pZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX2ZpbGVzX2lkKi4KHDIwMCBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0SBnN0cmluZyIGYmluYXJ5Ki4KFDUwMCBhcHBsaWNhdGlvbi9qc29uEhQ1MDAgYXBwbGljYXRpb24vanNvbhgDEjkKC1JlcXVlc3RCb2R5KioKGGFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbRIGc3RyaW5nIgZiaW5hcnkSfwobUE9TVF9maWxlc191cGxvYWRQYXJhbWV0ZXJzGkFQT1NUX2ZpbGVzX3VwbG9hZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX2ZpbGVzX3VwbG9hZCodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMSJAoUMjAwIGFwcGxpY2F0aW9uL2pzb24qDAoCaWQSBnN0cmluZxKNAQoaUE9TVF9maWxlc191cGxvYWRSZXNwb25zZXMaP1BPU1RfZmlsZXNfdXBsb2FkUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX2ZpbGVzX3VwbG9hZCouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAxpPEgsvZmlsZXMve2lkfRoDR0VUKgxHRVRfZmlsZXNfaWRKFkdFVF9maWxlc19pZFBhcmFtZXRlcnNSFUdFVF9maWxlc19pZFJlc3BvbnNlcxphEg0vZmlsZXMvdXBsb2FkGgRQT1NUKhFQT1NUX2ZpbGVzX3VwbG9hZEobUE9TVF9maWxlc191cGxvYWRQYXJhbWV0ZXJzUhpQT1NUX2ZpbGVzX3VwbG9hZFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIyCil0ZXN0IHVzZUFic3RyYWN0aW9uRm9yRmlsZXMgZm9yIGpheHJzLWN4ZjIFMC4wLjEaEgoQaHR0cDovL2xvY2FsaG9zdCKcAwrdAQoLL2ZpbGVzL3tpZH0SzQEiygEyGwoZCgJpZBIEcGF0aCABUgsKCcoBBnN0cmluZ0KqARJNCgMyMDASRgpECgxGaWxlIGNvbnRlbnQaNAoyChhhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0SFgoUChLKAQZzdHJpbmeaAgZiaW5hcnkSWQoDNTAwElIKUAoNZXJyb3IgbWVzc2FnZRo/Cj0KEGFwcGxpY2F0aW9uL2pzb24SKQonCiXKAQZvYmplY3T6ARkKFwoIZXJyb3Jtc2cSCwoJygEGc3RyaW5nCrkBCg0vZmlsZXMvdXBsb2FkEqcBMqQBOlYKVAoaVGhlIGZpbGUgY29udGVudCB0byB1cGxvYWQSNAoyChhhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0SFgoUChLKAQZzdHJpbmeaAgZiaW5hcnkYAUJKEkgKAzIwMBJBCj8KAmlkGjkKNwoQYXBwbGljYXRpb24vanNvbhIjCiEKH8oBBm9iamVjdPoBEwoRCgJpZBILCgnKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_2908.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_2908 = (
  model: surface.Model.fromBuffer(base64Decode('Ch5Jc3N1ZSAyOTA4IC0gQ29va2llIHBhcmFtZXRlcnMScwoZV2l0aENvb2tpZVBhcmFtUGFyYW1ldGVycxo9V2l0aENvb2tpZVBhcmFtUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFdpdGhDb29raWVQYXJhbSoXCg1teUNvb2tpZVBhcmFtEgZzdHJpbmcaTwoPd2l0aENvb2tpZVBhcmFtEgovc29tZXRoaW5nGgRQT1NUKg9XaXRoQ29va2llUGFyYW1KGVdpdGhDb29raWVQYXJhbVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJUCh5Jc3N1ZSAyOTA4IC0gQ29va2llIHBhcmFtZXRlcnMSK0Nvb2tpZSBwYXJhbWV0ZXJzIGZvciBKQVgtUlMgU3BlYyBnZW5lcmF0b3IyBTAuMC4xInEKbwoKL3NvbWV0aGluZxJhMl8qD3dpdGhDb29raWVQYXJhbTI2CjQKDW15Q29va2llUGFyYW0SBmNvb2tpZRoMY29va2llIHBhcmFtIAFSCwoJygEGc3RyaW5nQhQSEgoDMjAwEgsKCQoHc3VjY2Vzcw==')),
);

/// From: 3_0/issue-11340.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_11340 = (
  model: surface.Model.fromBuffer(base64Decode('CjhJc3N1ZSAxMTM0MCAtIEJlYW4gVmFsaWRhdGlvbiBCcmVha3MgR2VuZXJhdGVkIEphdmEgQ29kZRJJCjhvcGVyYXRpb25SZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL2pzb25BZGRpdGlvbmFsUHJvcGVydGllcxABIgtpbnRlcmZhY2V7fRKGAQokb3BlcmF0aW9uUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uKl4KFWFkZGl0aW9uYWxfcHJvcGVydGllcxJDbWFwW3N0cmluZ11vcGVyYXRpb25SZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL2pzb25BZGRpdGlvbmFsUHJvcGVydGllcxgBElIKFG9wZXJhdGlvblJlcXVlc3RCb2R5KjoKEGFwcGxpY2F0aW9uL2pzb24SJG9wZXJhdGlvblJlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDEpkBChNPcGVyYXRpb25QYXJhbWV0ZXJzGjFPcGVyYXRpb25QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gT3BlcmF0aW9uKicKG3gtbm9uLW51bGwtaGVhZGVyLXBhcmFtZXRlchIGc3RyaW5nKAEqJgoMcmVxdWVzdF9ib2R5EhRvcGVyYXRpb25SZXF1ZXN0Qm9keRgDGnoKCW9wZXJhdGlvbhIOL2NvbmZpZ3VyYXRpb24aA1BVVCI4T3BlcmF0aW9uIHdpdGggcmVxdWlyZWQgaGVhZGVyIGFuZCByZXF1aXJlZCByZXF1ZXN0IGJvZHkqCU9wZXJhdGlvbkoTT3BlcmF0aW9uUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxKSAQo4SXNzdWUgMTEzNDAgLSBCZWFuIFZhbGlkYXRpb24gQnJlYWtzIEdlbmVyYXRlZCBKYXZhIENvZGUST1dpdGggQmVhbiBWYWxpZGF0aW9uIEBOb3ROdWxsIGFuZCB0eXBlIG9mIHBhcmFtZXRlciBtdXN0IGJlIHNlcGFyYXRlZCBieSBzcGFjZS4yBTEuMC4yIuUBCuIBCg4vY29uZmlndXJhdGlvbhLPASrMARo4T3BlcmF0aW9uIHdpdGggcmVxdWlyZWQgaGVhZGVyIGFuZCByZXF1aXJlZCByZXF1ZXN0IGJvZHkqCW9wZXJhdGlvbjI2CjQKG3gtbm9uLW51bGwtaGVhZGVyLXBhcmFtZXRlchIGaGVhZGVyIAFSCwoJygEGc3RyaW5nOjwKOhI2CjQKEGFwcGxpY2F0aW9uL2pzb24SIAoeChywAQHKAQZvYmplY3SCAg0KCwoJygEGb2JqZWN0GAFCDxINCgMyMDASBgoECgJPSw==')),
);

/// From: 3_0/dict_query_parameter.yaml
final OpenApiProto<v3.Document> fixtures_3_0_dict_query_parameter = (
  model: surface.Model.fromBuffer(base64Decode('Cgl0ZXN0IHNwZWMSRAoTZGljdF9zdHJpbmdfaW50ZWdlciotChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEm1hcFtzdHJpbmddaW50ZWdlchgBEpkBCh5RdWVyeV9wYXJhbWV0ZXJfdGVzdFBhcmFtZXRlcnMaR1F1ZXJ5X3BhcmFtZXRlcl90ZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFF1ZXJ5X3BhcmFtZXRlcl90ZXN0Ki4KE2RpY3Rfc3RyaW5nX2ludGVnZXISE2RpY3Rfc3RyaW5nX2ludGVnZXIYAygDGn4KFHF1ZXJ5X3BhcmFtZXRlcl90ZXN0EhUvcXVlcnlfcGFyYW1ldGVyX2RpY3QaA0dFVCIUcXVlcnkgcGFyYW1ldGVyIHRlc3QqFFF1ZXJ5X3BhcmFtZXRlcl90ZXN0Sh5RdWVyeV9wYXJhbWV0ZXJfdGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJ0Cgl0ZXN0IHNwZWMSIGZvciB0ZXN0aW5nIHF1ZXJ5IHBhcmFtZXRlciBkaWN0Kj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaGAoWaHR0cDovL3Rlc3RzcGVjLm9yZy92MiLhAQreAQoVL3F1ZXJ5X3BhcmFtZXRlcl9kaWN0EsQBIsEBCgRmYWtlEhRxdWVyeSBwYXJhbWV0ZXIgdGVzdBoUcXVlcnkgcGFyYW1ldGVyIHRlc3QqFHF1ZXJ5X3BhcmFtZXRlcl90ZXN0MjMKMQoTZGljdF9zdHJpbmdfaW50ZWdlchIFcXVlcnlSEwoRggIOCgwKCsoBB2ludGVnZXJCQhIfCgMyMDASGAoWChRzdWNjZXNzZnVsIG9wZXJhdGlvbhIfCgM0MDASGAoWChRJbnZhbGlkIHN0YXR1cyB2YWx1ZQ==')),
);

/// From: 3_0/allOfMappingDuplicatedProperties.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_mapping_duplicated_properties = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEqcBCgZQZXJzb24qEAoGJF90eXBlEgZzdHJpbmcqEgoIbGFzdE5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyodChNkdXBsaWNhdGVkX29wdGlvbmFsEgZzdHJpbmcqHQoTZHVwbGljYXRlZF9yZXF1aXJlZBIGc3RyaW5nKiQKD3BlcnNvbl9yZXF1aXJlZBIGc3RyaW5nIglkYXRlLXRpbWUSlgIKBUFkdWx0KhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqHQoTZHVwbGljYXRlZF9vcHRpb25hbBIGc3RyaW5nKh0KE2R1cGxpY2F0ZWRfcmVxdWlyZWQSBnN0cmluZyokCg9wZXJzb25fcmVxdWlyZWQSBnN0cmluZyIJZGF0ZS10aW1lKh4KE2R1cGxpY2F0ZWRfb3B0aW9uYWwSB2ludGVnZXIqHgoTZHVwbGljYXRlZF9yZXF1aXJlZBIHaW50ZWdlcioTCghjaGlsZHJlbhIFQ2hpbGQYAioZCg5hZHVsdF9yZXF1aXJlZBIHYm9vbGVhbhLSAQoFQ2hpbGQqFQoDYWdlEgdpbnRlZ2VyIgVpbnQzMioTCglmaXJzdE5hbWUSBnN0cmluZyoQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKh0KE2R1cGxpY2F0ZWRfb3B0aW9uYWwSBnN0cmluZyodChNkdXBsaWNhdGVkX3JlcXVpcmVkEgZzdHJpbmcqJAoPcGVyc29uX3JlcXVpcmVkEgZzdHJpbmciCWRhdGUtdGltZRI3CgdNYXBPbmx5KiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARJaChVNYXBPbmx5V2l0aFByb3BlcnRpZXMqEwoJZmlyc3ROYW1lEgZzdHJpbmcqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElgKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBlBlcnNvbhgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbiqHBwqEBwrPAgoGUGVyc29uEsQCCsECEkwKBiRfdHlwZRJCCh8KAWESGiMvY29tcG9uZW50cy9zY2hlbWFzL0FkdWx0Ch8KAWMSGiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkugETZHVwbGljYXRlZF9yZXF1aXJlZLoBD3BlcnNvbl9yZXF1aXJlZMoBBm9iamVjdPoBvgEKFQoGJF90eXBlEgsKCcoBBnN0cmluZwoXCghsYXN0TmFtZRILCgnKAQZzdHJpbmcKGAoJZmlyc3ROYW1lEgsKCcoBBnN0cmluZwoiChNkdXBsaWNhdGVkX29wdGlvbmFsEgsKCcoBBnN0cmluZwoiChNkdXBsaWNhdGVkX3JlcXVpcmVkEgsKCcoBBnN0cmluZwoqCg9wZXJzb25fcmVxdWlyZWQSFwoVygEGc3RyaW5nmgIJZGF0ZS10aW1lCq4CCgVBZHVsdBKkAgqhAtIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXJzb27SAdwBCtkBugETZHVwbGljYXRlZF9yZXF1aXJlZLoBDmNoaWxkX3JlcXVpcmVkygEGb2JqZWN0+gGlAQojChNkdXBsaWNhdGVkX29wdGlvbmFsEgwKCsoBB2ludGVnZXIKIwoTZHVwbGljYXRlZF9yZXF1aXJlZBIMCgrKAQdpbnRlZ2VyCjkKCGNoaWxkcmVuEi0KK8oBBWFycmF58gEgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGQKHgoOYWR1bHRfcmVxdWlyZWQSDAoKygEHYm9vbGVhbpICHEEgcmVwcmVzZW50YXRpb24gb2YgYW4gYWR1bHQKlQEKBUNoaWxkEosBCogB0gFFCkPKAQZvYmplY3T6ATcKGwoDYWdlEhQKEsoBB2ludGVnZXKaAgVpbnQzMgoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5n0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbpICG0EgcmVwcmVzZW50YXRpb24gb2YgYSBjaGlsZAodCgdNYXBPbmx5EhIKEIICDQoLCgnKAQZzdHJpbmcKSAoVTWFwT25seVdpdGhQcm9wZXJ0aWVzEi8KLfoBGgoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5nggINCgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/3134-regression.yaml
final OpenApiProto<v3.Document> fixtures_3_0_3134_regression = (
  model: surface.Model.fromBuffer(base64Decode('CgRpbmZvEi0KG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbioOCgRuYW1lEgZzdHJpbmcSQAoLUmVxdWVzdEJvZHkqMQoQYXBwbGljYXRpb24vanNvbhIbUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uGAMSfAoaUE9TVF9leGFtcGxlX2FwaVBhcmFtZXRlcnMaP1BPU1RfZXhhbXBsZV9hcGlQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9leGFtcGxlX2FwaSodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMaTxIML2V4YW1wbGUvYXBpGgRQT1NUIgtkZXNjcmlwdGlvbioQUE9TVF9leGFtcGxlX2FwaUoaUE9TVF9leGFtcGxlX2FwaVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhITCgRpbmZvEgRpbmZvMgUwLjEuMCKDAQqAAQoML2V4YW1wbGUvYXBpEnAybhIHc3VtbWFyeRoLZGVzY3JpcHRpb246Pwo9EjsKOQoQYXBwbGljYXRpb24vanNvbhIlCiMKIcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZ0IVEhMKAzIwMBIMCgoKCHJlc3BvbnNl')),
);

/// From: 3_0/issue-4062.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_4062 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjkKB1BldEVudW0qLgoFdmFsdWUSBnN0cmluZ1IMbXlGaXJzdFZhbHVlUg9NWV9TRUNPTkRfVkFMVUUSYgoQR2V0RW51bVJlc3BvbnNlcxorR2V0RW51bVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0RW51bSohChQyMDAgYXBwbGljYXRpb24vanNvbhIHUGV0RW51bRgDGjAKB2dldEVudW0SBS9lbnVtGgNHRVQqB0dldEVudW1SEEdldEVudW1SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJuChBPcGVuQVBJIFBldHN0b3JlEhNUZXN0IGZvciBpc3N1ZSA0MDYyKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaHwodaHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW8vdjIidwp1CgUvZW51bRJsImoKBGVudW0SCUdldCBlbnVtcyoHZ2V0RW51bUJOEkwKAzIwMBJFCkMKB3N1Y2Nlc3MaOAo2ChBhcHBsaWNhdGlvbi9qc29uEiIKIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRFbnVtKmMKYQpfCgdQZXRFbnVtElQKUsIBDxINbXlGaXJzdFZhbHVlCsIBEhIQTVlfU0VDT05EX1ZBTFVFCsoBBnN0cmluZ5ICH0FuIGVudW0gd2l0aCBjb21wbGV4LWlzaCBuYW1pbmc=')),
);

/// From: 3_0/issue_7614.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7614 = (
  model: surface.Model.fromBuffer(base64Decode('Cgh0ZXN0IGFwaRpCChBnZXRXaXRoQmFzaWNBdXRoEhcvZXhhbXBsZXMvb25seWJhc2ljYXV0aBoDR0VUKhBHZXRXaXRoQmFzaWNBdXRoGlcKGGdldFdpdGhCYXNpY0F1dGhBbmRPYXV0aBIcL2V4YW1wbGVzL2Jhc2ljYXV0aHdpdGhvYXV0aBoDR0VUKhhHZXRXaXRoQmFzaWNBdXRoQW5kT2F1dGgaQgoQZ2V0V2l0aE9hdXRoQXV0aBIXL2V4YW1wbGVzL29ubHlvYXV0aGF1dGgaA0dFVCoQR2V0V2l0aE9hdXRoQXV0aA==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIRCgh0ZXN0IGFwaTIFMC4wLjEi0wMKegoXL2V4YW1wbGVzL29ubHliYXNpY2F1dGgSXyJdCghleGFtcGxlcxITR2V0IHdpdGggYmFzaWMgYXV0aCoQZ2V0V2l0aEJhc2ljQXV0aEIYEhYKAzIwMBIPCg0KC3NvbWUgcmVzdWx0WhAKDgoKYmFzaWNfYXV0aBIACrcBChwvZXhhbXBsZXMvYmFzaWNhdXRod2l0aG9hdXRoEpYBIpMBCghleGFtcGxlcxIdZ2V0IHdpdGggYmFzaWMgYXV0aCBhbmQgb2F1dGgqGGdldFdpdGhCYXNpY0F1dGhBbmRPYXV0aEIYEhYKAzIwMBIPCg0KC3NvbWUgcmVzdWx0WhAKDgoKYmFzaWNfYXV0aBIAWiIKIAoKb2F1dGhfYXV0aBISChBzb21ldGhpbmc6Y3JlYXRlCpoBChcvZXhhbXBsZXMvb25seW9hdXRoYXV0aBJ/In0KCGV4YW1wbGVzEg5nZXQgd2l0aCBvYXV0aCoQZ2V0V2l0aE9hdXRoQXV0aEIYEhYKAzIwMBIPCg0KC3NvbWUgcmVzdWx0WjUKMwoKb2F1dGhfYXV0aBIlChBzb21ldGhpbmc6Y3JlYXRlChFzb21ldGhpbmc6cHJvY2VzcyrYAjrVAgqzAgoKb2F1dGhfYXV0aBKkAgqhAgoGb2F1dGgyOpYCEmYSMy4uL2F1dGgvcmVhbG1zL21hc3Rlci9wcm90b2NvbC9vcGVuaWQtY29ubmVjdC90b2tlbiIvCi0KEHNvbWV0aGluZzpjcmVhdGUSGWNyZWF0ZSBmcm9tIHBhc3N3b3JkIGZsb3caqwESMy4uL2F1dGgvcmVhbG1zL21hc3Rlci9wcm90b2NvbC9vcGVuaWQtY29ubmVjdC90b2tlbiJ0CjcKEHNvbWV0aGluZzpjcmVhdGUSI2NyZWF0ZSBmcm9tIGNsaWVudCBjcmVkZW50aWFscyBmbG93CjkKEXNvbWV0aGluZzpwcm9jZXNzEiRwcm9jZXNzIGZyb20gY2xpZW50IGNyZWRlbnRpYWxzIGZsb3cKHQoKYmFzaWNfYXV0aBIPCg0KBGh0dHAqBWJhc2ljOhgKCGV4YW1wbGVzEgxleGFtcGxlcyB0YWc=')),
);

/// From: 3_0/oneOf_primitiveAndArray.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_primitive_and_array = (
  model: surface.Model.fromBuffer(base64Decode('ChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlEjQKB0V4YW1wbGUqFQoFdmFsdWUSBnN0cmluZyIEdXVpZCoSCgV2YWx1ZRIHaW50ZWdlchgCElkKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB0V4YW1wbGUYAxoqCgRsaXN0EggvZXhhbXBsZRoDR0VUKgRMaXN0Ug1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIpChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJhCl8KCC9leGFtcGxlElMiUSoEbGlzdEJJEkcKAzIwMBJACj4KAk9LGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZSpECkIKQAoHRXhhbXBsZRI1CjPaARIKEMoBBnN0cmluZ5oCBHV1aWTaARsKGcoBBWFycmF58gEOCgwKCsoBB2ludGVnZXI=')),
);

/// From: 3_0/optionalResponse.yaml
final OpenApiProto<v3.Document> fixtures_3_0_optional_response = (
  model: surface.Model.fromBuffer(base64Decode('ChJNeSBTYW1wbGUgVXNlciBBUEkSLQoHVXNlckR0byoSCgJpZBIGc3RyaW5nIgR1dWlkKg4KBG5hbWUSBnN0cmluZxJoChVHZXRVc2VyQnlJZFBhcmFtZXRlcnMaNUdldFVzZXJCeUlkUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldFVzZXJCeUlkKhgKBnVzZXJJZBIGc3RyaW5nIgR1dWlkKAQSpwEKFEdldFVzZXJCeUlkUmVzcG9uc2VzGjNHZXRVc2VyQnlJZFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0VXNlckJ5SWQqGwoOMjAwIHRleHQvcGxhaW4SB1VzZXJEdG8YAyohChQyMDAgYXBwbGljYXRpb24vanNvbhIHVXNlckR0bxgDKhoKDTIwMCB0ZXh0L2pzb24SB1VzZXJEdG8YAxphCgtHZXRVc2VyQnlJZBITL2FwaS9Vc2Vycy97dXNlcklkfRoDR0VUKgtHZXRVc2VyQnlJZEoVR2V0VXNlckJ5SWRQYXJhbWV0ZXJzUhRHZXRVc2VyQnlJZFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIZChJNeSBTYW1wbGUgVXNlciBBUEkyAzEuMCLOAgrLAgoTL2FwaS9Vc2Vycy97dXNlcklkfRKzAiKwAgoFVXNlcnMSE0dldCBhIHNwZWNpZmljIHVzZXIqC0dldFVzZXJCeUlkMjYKNAoGdXNlcklkEgRwYXRoGg5JRCBvZiB0aGUgdXNlciABUhIKEMoBBnN0cmluZ5oCBHV1aWRCzAESsgEKAzIwMBKqAQqnAQoHU3VjY2VzcxqbAQowCgp0ZXh0L3BsYWluEiIKIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9Vc2VyRHRvCjYKEGFwcGxpY2F0aW9uL2pzb24SIgogEh4KHCMvY29tcG9uZW50cy9zY2hlbWFzL1VzZXJEdG8KLwoJdGV4dC9qc29uEiIKIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9Vc2VyRHRvEhUKAzIwNBIOCgwKCk5vIENvbnRlbnQqWApWClQKB1VzZXJEdG8SSQpHugECaWTKAQZvYmplY3T6ATEKGAoCaWQSEgoQygEGc3RyaW5nmgIEdXVpZAoVCgRuYW1lEg0KCwgBygEGc3RyaW5nggICEAA=')),
);

/// From: 3_0/inline_model_allof_propertyof_oneof.yaml
final OpenApiProto<v3.Document> fixtures_3_0_inline_model_allof_propertyof_oneof = (
  model: surface.Model.fromBuffer(base64Decode('CglwaW5nIHRlc3QSKwoDVGFnKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSMAoGRmlsdGVyKhUKA2ZpZBIHaW50ZWdlciIFaW50NjQqDwoFZm5hbWUSBnN0cmluZxJcCgxpbmxpbmVfb25lb2YqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZyoVCgNmaWQSB2ludGVnZXIiBWludDY0Kg8KBWZuYW1lEgZzdHJpbmcSIwoMaW5saW5lX21vZGVsKhMKCXNvbWV0aGluZxIGc3RyaW5nEqYBCgVPcmRlcioUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nKhgKBmxlbmd0aBIHaW50ZWdlciIFaW50NjQqHQoIc2hpcERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKh4KDGlubGluZV9vbmVvZhIMaW5saW5lX29uZW9mGAMqHgoMaW5saW5lX21vZGVsEgxpbmxpbmVfbW9kZWwYAxoeCgdwaW5nR2V0EgUvcGluZxoDR0VUKgdQaW5nR2V0')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglwaW5nIHRlc3QyAzEuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwMDAvIicKJQoFL3BpbmcSHCIaKgdwaW5nR2V0Qg8SDQoDMjAxEgYKBAoCT0sqkAQKjQQKvwIKBU9yZGVyErUCCrICSglQZXQgT3JkZXLSARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvVGFn0gHbAQrYAcoBBm9iamVjdPoBywEKHgoGbGVuZ3RoEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAojCghzaGlwRGF0ZRIXChXKAQZzdHJpbmeaAglkYXRlLXRpbWUKUwoMaW5saW5lX29uZW9mEkMKQdoBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9UYWfaAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvRmlsdGVyCi8KDGlubGluZV9tb2RlbBIfCh36ARoKGAoJc29tZXRoaW5nEgsKCcoBBnN0cmluZ5ICJkFuIG9yZGVyIGZvciBhIHBldHMgZnJvbSB0aGUgcGV0IHN0b3JlCmEKA1RhZxJaClhKB1BldCBUYWfKAQZvYmplY3T6ATEKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0ChMKBG5hbWUSCwoJygEGc3RyaW5nkgIPQSB0YWcgZm9yIGEgcGV0CmYKBkZpbHRlchJcClpKB1BldCBUYWfKAQZvYmplY3T6ATMKGwoDZmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoUCgVmbmFtZRILCgnKAQZzdHJpbmeSAg9BIHRhZyBmb3IgYSBwZXQ=')),
);

/// From: 3_0/inline_request_body_no_components.yaml
final OpenApiProto<v3.Document> fixtures_3_0_inline_request_body_no_components = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEjIKIHRlc3QxUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uKg4KBG5hbWUSBnN0cmluZxJKChB0ZXN0MVJlcXVlc3RCb2R5KjYKEGFwcGxpY2F0aW9uL2pzb24SIHRlc3QxUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uGAMSYAoPVGVzdDFQYXJhbWV0ZXJzGilUZXN0MVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBUZXN0MSoiCgxyZXF1ZXN0X2JvZHkSEHRlc3QxUmVxdWVzdEJvZHkYAxotCgV0ZXN0MRIGL3Rlc3QxGgRQT1NUKgVUZXN0MUoPVGVzdDFQYXJhbWV0ZXJz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJtCmsKBi90ZXN0MRJhMl8qBXRlc3QxOkUKQwoEdGVzdBI7CjkKEGFwcGxpY2F0aW9uL2pzb24SJQojCiHKAQZvYmplY3T6ARUKEwoEbmFtZRILCgnKAQZzdHJpbmdCDxINCgMyMDASBgoECgJPSw==')),
);

/// From: 3_0/streaming.yaml
final OpenApiProto<v3.Document> fixtures_3_0_streaming = (
  model: surface.Model.fromBuffer(base64Decode('ChBwaW5nIHNvbWUgb2JqZWN0EncKB1NvbWVPYmoqIwoGJF90eXBlEgZzdHJpbmdSEVNvbWVPYmpJZGVudGlmaWVyKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqEQoGYWN0aXZlEgdib29sZWFuKg4KBHR5cGUSBnN0cmluZxIwCgtTaW1wbGVPbmVPZioPCgV2YWx1ZRIGc3RyaW5nKhAKBXZhbHVlEgdpbnRlZ2VyElcKM2dldFBpbmdSZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCoOCgRuYW1lEgZzdHJpbmcqEAoGc3RhdHVzEgZzdHJpbmcScAoSZ2V0UGluZ1JlcXVlc3RCb2R5KloKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBIzZ2V0UGluZ1JlcXVlc3RCb2R5YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkGAMSgwEKEUdldFBpbmdQYXJhbWV0ZXJzGi1HZXRQaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldFBpbmcqGQoFcGV0SWQSB2ludGVnZXIiBWludDY0KAMqJAoMcmVxdWVzdF9ib2R5EhJnZXRQaW5nUmVxdWVzdEJvZHkYAxJiChBHZXRQaW5nUmVzcG9uc2VzGitHZXRQaW5nUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRQaW5nKiEKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdTb21lT2JqGAMSNAoTcG9zdFBpbmdSZXF1ZXN0Qm9keSodChBhcHBsaWNhdGlvbi9qc29uEgdTb21lT2JqGAMSbAoSUG9zdFBpbmdQYXJhbWV0ZXJzGi9Qb3N0UGluZ1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0UGluZyolCgxyZXF1ZXN0X2JvZHkSE3Bvc3RQaW5nUmVxdWVzdEJvZHkYAxJlChFQb3N0UGluZ1Jlc3BvbnNlcxotUG9zdFBpbmdSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBvc3RQaW5nKiEKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdTb21lT2JqGAMaQwoHZ2V0UGluZxIFL3BpbmcaA0dFVCoHR2V0UGluZ0oRR2V0UGluZ1BhcmFtZXRlcnNSEEdldFBpbmdSZXNwb25zZXMaSAoIcG9zdFBpbmcSBS9waW5nGgRQT1NUKghQb3N0UGluZ0oSUG9zdFBpbmdQYXJhbWV0ZXJzUhFQb3N0UGluZ1Jlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXChBwaW5nIHNvbWUgb2JqZWN0MgMxLjAaGAoWaHR0cDovL2xvY2FsaG9zdDo4MDgyLyLGBArDBAoFL3BpbmcSuQQiggMKBHBpbmcqB2dldFBpbmcyTApKCgVwZXRJZBIFcXVlcnkaIklEIG9mIHBldCB0aGF0IG5lZWRzIHRvIGJlIHVwZGF0ZWQgAVIUChLKAQdpbnRlZ2VymgIFaW50NjQ6oAEKnQESmgEKlwEKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBJyCnAKbsoBBm9iamVjdPoBYgotCgRuYW1lEiUKI8oBBnN0cmluZ5ICF1VwZGF0ZWQgbmFtZSBvZiB0aGUgcGV0CjEKBnN0YXR1cxInCiXKAQZzdHJpbmeSAhlVcGRhdGVkIHN0YXR1cyBvZiB0aGUgcGV0QkkSRwoDMjAwEkAKPgoCT0saOAo2ChBhcHBsaWNhdGlvbi9qc29uEiIKIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9Tb21lT2JqahYKC3gtc3RyZWFtaW5nEgcSBXRydWUKah0KEngtZ3JvdXAtcGFyYW1ldGVycxIHEgV0cnVlCjKxAQoEcGluZyoIcG9zdFBpbmc6PAo6EjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvU29tZU9iakJJEkcKAzIwMBJACj4KAk9LGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvU29tZU9iamoWCgt4LXN0cmVhbWluZxIHEgV0cnVlCir0AQrxAQq+AQoHU29tZU9iahKyAQqvAcoBBm9iamVjdPoBogEKQgoGJF90eXBlEjgKNsIBFBISU29tZU9iaklkZW50aWZpZXIKygEGc3RyaW5nigITGhFTb21lT2JqSWRlbnRpZmllcgoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKEwoEbmFtZRILCgnKAQZzdHJpbmcKFgoGYWN0aXZlEgwKCsoBB2Jvb2xlYW4KEwoEdHlwZRILCgnKAQZzdHJpbmcKLgoLU2ltcGxlT25lT2YSHwod2gELCgnKAQZzdHJpbmfaAQwKCsoBB2ludGVnZXI=')),
);

/// From: 3_0/petstore-with-deprecated-fields.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_with_deprecated_fields = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/required-and-readonly-property.yaml
final OpenApiProto<v3.Document> fixtures_3_0_required_and_readonly_property = (
  model: surface.Model.fromBuffer(base64Decode('CgVUaXRsZRKjAQodUmVhZG9ubHlBbmRSZXF1aXJlZFByb3BlcnRpZXMqIAoWcmVxdWlyZWRZZXNSZWFkb25seVllcxIGc3RyaW5nKh8KFXJlcXVpcmVkWWVzUmVhZG9ubHlObxIGc3RyaW5nKh8KFXJlcXVpcmVkTm9SZWFkb25seVllcxIGc3RyaW5nKh4KFHJlcXVpcmVkTm9SZWFkb25seU5vEgZzdHJpbmcSewoRR0VUX3VzZXJSZXNwb25zZXMaLUdFVF91c2VyUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfdXNlcio3ChQyMDAgYXBwbGljYXRpb24vanNvbhIdUmVhZG9ubHlBbmRSZXF1aXJlZFByb3BlcnRpZXMYAxopEgUvdXNlchoDR0VUKghHRVRfdXNlclIRR0VUX3VzZXJSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIVCgVUaXRsZRIFVGl0bGUyBTEuMC4wGgcKBWh0dHBzInMKcQoFL3VzZXISaCJmQmQSYgoDMjAwElsKWQoHc3VjY2VzcxpOCkwKEGFwcGxpY2F0aW9uL2pzb24SOAo2EjQKMiMvY29tcG9uZW50cy9zY2hlbWFzL1JlYWRvbmx5QW5kUmVxdWlyZWRQcm9wZXJ0aWVzKoUCCoICCv8BCh1SZWFkb25seUFuZFJlcXVpcmVkUHJvcGVydGllcxLdAQraAboBFnJlcXVpcmVkWWVzUmVhZG9ubHlZZXO6ARVyZXF1aXJlZFllc1JlYWRvbmx5Tm/KAQZvYmplY3T6AZwBCicKFnJlcXVpcmVkWWVzUmVhZG9ubHlZZXMSDQoLGAHKAQZzdHJpbmcKJAoVcmVxdWlyZWRZZXNSZWFkb25seU5vEgsKCcoBBnN0cmluZwomChVyZXF1aXJlZE5vUmVhZG9ubHlZZXMSDQoLGAHKAQZzdHJpbmcKIwoUcmVxdWlyZWROb1JlYWRvbmx5Tm8SCwoJygEGc3RyaW5n')),
);

/// From: 3_0/callbacks.yaml
final OpenApiProto<v3.Document> fixtures_3_0_callbacks = (
  model: surface.Model.fromBuffer(base64Decode('ChBDYWxsYmFjayBFeGFtcGxlEkkKE05ld05vdGlmaWNhdGlvbkRhdGEqHgoJdGltZXN0YW1wEgZzdHJpbmciCWRhdGUtdGltZSoSCgh1c2VyRGF0YRIGc3RyaW5nEjgKFkRlbGV0ZU5vdGlmaWNhdGlvbkRhdGEqHgoJdGltZXN0YW1wEgZzdHJpbmciCWRhdGUtdGltZRJvChZQT1NUX3N0cmVhbXNQYXJhbWV0ZXJzGjdQT1NUX3N0cmVhbXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9zdHJlYW1zKhwKC2NhbGxiYWNrVXJsEgZzdHJpbmciA3VyaSgDEjAKFDIwMSBhcHBsaWNhdGlvbi9qc29uKhgKDnN1YnNjcmlwdGlvbklkEgZzdHJpbmcSfgoVUE9TVF9zdHJlYW1zUmVzcG9uc2VzGjVQT1NUX3N0cmVhbXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFBPU1Rfc3RyZWFtcyouChQyMDEgYXBwbGljYXRpb24vanNvbhIUMjAxIGFwcGxpY2F0aW9uL2pzb24YAxp+Eggvc3RyZWFtcxoEUE9TVCIvc3Vic2NyaWJlcyBhIGNsaWVudCB0byByZWNlaXZlIG91dC1vZi1iYW5kIGRhdGEqDFBPU1Rfc3RyZWFtc0oWUE9TVF9zdHJlYW1zUGFyYW1ldGVyc1IVUE9TVF9zdHJlYW1zUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIZChBDYWxsYmFjayBFeGFtcGxlMgUxLjAuMCK+CQq7CQoIL3N0cmVhbXMSrgkyqwkaL3N1YnNjcmliZXMgYSBjbGllbnQgdG8gcmVjZWl2ZSBvdXQtb2YtYmFuZCBkYXRhMqIBCp8BCgtjYWxsYmFja1VybBIFcXVlcnkaV3RoZSBsb2NhdGlvbiB3aGVyZSBkYXRhIHdpbGwgYmUgc2VudC4gIE11c3QgYmUgbmV0d29yayBhY2Nlc3NpYmxlCmJ5IHRoZSBzb3VyY2Ugc2VydmVyCiABUi4KLDobEhlodHRwczovL3RvbnlzLXNlcnZlci5jb20KygEGc3RyaW5nmgIDdXJpQooCEocCCgMyMDES/wEK/AEKIXN1YnNjcmlwdGlvbiBzdWNjZXNzZnVsbHkgY3JlYXRlZBrWAQrTAQoQYXBwbGljYXRpb24vanNvbhK+AQq7AQq4AboBDnN1YnNjcmlwdGlvbklk+gGIAQqFAQoOc3Vic2NyaXB0aW9uSWQScwpxOicSJTI1MzEzMjlmLWZiMDktNGVmNy04ODdlLTg0ZTY0ODIxNDQzNgrKAQZzdHJpbmeSAjx0aGlzIHVuaXF1ZSBpZGVudGlmaWVyIGFsbG93cyBtYW5hZ2VtZW50IG9mIHRoZSBzdWJzY3JpcHRpb26SAhhzdWJzY3JpcHRpb24gaW5mb3JtYXRpb25KxQUKtQUKBm9uRGF0YRKqBQqnBQr9BAoheyRyZXF1ZXN0LnF1ZXJ5LmNhbGxiYWNrVXJsfS9kYXRhEtcEMqcCOkgKRhJECkIKEGFwcGxpY2F0aW9uL2pzb24SLgosEioKKCMvY29tcG9uZW50cy9zY2hlbWFzL05ld05vdGlmaWNhdGlvbkRhdGFC2gEScAoDMjAyEmkKZwplWW91ciBzZXJ2ZXIgaW1wbGVtZW50YXRpb24gc2hvdWxkIHJldHVybiB0aGlzIEhUVFAgc3RhdHVzIGNvZGUKaWYgdGhlIGRhdGEgd2FzIHJlY2VpdmVkIHN1Y2Nlc3NmdWxseQoSZgoDMjA0El8KXQpbWW91ciBzZXJ2ZXIgc2hvdWxkIHJldHVybiB0aGlzIEhUVFAgc3RhdHVzIGNvZGUgaWYgbm8gbG9uZ2VyIGludGVyZXN0ZWQKaW4gZnVydGhlciB1cGRhdGVzCjqqAjpLCkkSRwpFChBhcHBsaWNhdGlvbi9qc29uEjEKLxItCisjL2NvbXBvbmVudHMvc2NoZW1hcy9EZWxldGVOb3RpZmljYXRpb25EYXRhQtoBEnAKAzIwMhJpCmcKZVlvdXIgc2VydmVyIGltcGxlbWVudGF0aW9uIHNob3VsZCByZXR1cm4gdGhpcyBIVFRQIHN0YXR1cyBjb2RlCmlmIHRoZSBkYXRhIHdhcyByZWNlaXZlZCBzdWNjZXNzZnVsbHkKEmYKAzIwNBJfCl0KW1lvdXIgc2VydmVyIHNob3VsZCByZXR1cm4gdGhpcyBIVFRQIHN0YXR1cyBjb2RlIGlmIG5vIGxvbmdlciBpbnRlcmVzdGVkCmluIGZ1cnRoZXIgdXBkYXRlcwoKJQoheyRyZXF1ZXN0LnF1ZXJ5LmNhbGxiYWNrVXJsfS90ZXN0EgAKCwoFZHVtbXkSAgoAKtUBCtIBCnIKE05ld05vdGlmaWNhdGlvbkRhdGESWwpZ+gE/CiQKCXRpbWVzdGFtcBIXChXKAQZzdHJpbmeaAglkYXRlLXRpbWUKFwoIdXNlckRhdGESCwoJygEGc3RyaW5nkgIUc3Vic2NyaXB0aW9uIHBheWxvYWQKXAoWRGVsZXRlTm90aWZpY2F0aW9uRGF0YRJCCkD6ASYKJAoJdGltZXN0YW1wEhcKFcoBBnN0cmluZ5oCCWRhdGUtdGltZZICFHN1YnNjcmlwdGlvbiBwYXlsb2Fk')),
);

/// From: 3_0/issue855.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue855 = (
  model: surface.Model.fromBuffer(base64Decode('ChFJc3N1ZSA4NTUgZXhhbXBsZRJOChFHRVRfcGluZ1Jlc3BvbnNlcxotR0VUX3BpbmdSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9waW5nKgoSBk9LXzIwMBgDGlISBS9waW5nGgNHRVQiJ1JldHVybnMgdGhlIGNvbnRlbnQgb2YgYSBwYXltZW50IG9iamVjdCoIR0VUX3BpbmdSEUdFVF9waW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIaChFJc3N1ZSA4NTUgZXhhbXBsZTIFMS4wLjAiewp5CgUvcGluZxJwIm4SF0dldCBQYXltZW50IEluZm9ybWF0aW9uGidSZXR1cm5zIHRoZSBjb250ZW50IG9mIGEgcGF5bWVudCBvYmplY3RCKhIoCgMyMDASIRIfCh0jL2NvbXBvbmVudHMvcmVzcG9uc2VzL09LXzIwMCrmARJBCj8KBk9LXzIwMBI1CjMKAk9LEi0KKwoHUmVxdWVzdBIgEh4KHCMvY29tcG9uZW50cy9oZWFkZXJzL1JlcXVlc3QyoAEKnQEKB1JlcXVlc3QSkQEKjgEKTUlEIG9mIHRoZSByZXF1ZXN0LCB1bmlxdWUgdG8gdGhlIGNhbGwsIGFzIGRldGVybWluZWQgYnkgdGhlIGluaXRpYXRpbmcgcGFydHkuEAFCEgoQygEGc3RyaW5nmgIEdXVpZEonEiU5OTM5MWM3ZS1hZDg4LTQ5ZWMtYTJhZC05OWRkY2IxZjc3MjEK')),
);

/// From: 3_0/oneOf_twoPrimitives.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_two_primitives = (
  model: surface.Model.fromBuffer(base64Decode('ChRvbmVPZiB0d28gcHJpbWl0aXZlcxJLChtSZXF1ZXN0Qm9keWFwcGxpY2F0aW9uL2pzb24qFQoFdmFsdWUSBnN0cmluZyIEaXB2NCoVCgV2YWx1ZRIGc3RyaW5nIgRpcHY2EkAKC1JlcXVlc3RCb2R5KjEKEGFwcGxpY2F0aW9uL2pzb24SG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDEnYKGFBPU1RfbXlFeGFtcGxlUGFyYW1ldGVycxo7UE9TVF9teUV4YW1wbGVQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9teUV4YW1wbGUqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDGjwSCi9teUV4YW1wbGUaBFBPU1QqDlBPU1RfbXlFeGFtcGxlShhQT1NUX215RXhhbXBsZVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxKIAQoUb25lT2YgdHdvIHByaW1pdGl2ZXMSaW9uZU9mIHdpdGggdHdvIGVudHJpZXMgb2YgdHlwZSBzdHJpbmcsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vT3BlbkFQSVRvb2xzL29wZW5hcGktZ2VuZXJhdG9yL2lzc3Vlcy8xMDQ1MDIFMS4wLjAibQprCgovbXlFeGFtcGxlEl0yWzpICkYSRApCChBhcHBsaWNhdGlvbi9qc29uEi4KLAoq2gESChDKAQZzdHJpbmeaAgRpcHY02gESChDKAQZzdHJpbmeaAgRpcHY2Qg8SDQoDMjAwEgYKBAoCT0s=')),
);

/// From: 3_0/issue_7193.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7193 = (
  model: surface.Model.fromBuffer(base64Decode('Cgh0ZXN0IGFwaRJ2ChtDaGFuZ2VJbXBvcnRTdGF0ZVBhcmFtZXRlcnMaQUNoYW5nZUltcG9ydFN0YXRlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIENoYW5nZUltcG9ydFN0YXRlKhQKCGltcG9ydElkEgZzdHJpbmcoBBosCgxjcmVhdGVJbXBvcnQSCC9pbXBvcnRzGgRQT1NUKgxDcmVhdGVJbXBvcnQaYwoRY2hhbmdlSW1wb3J0U3RhdGUSGS9pbXBvcnRzL3tpbXBvcnRJZH0vc3RhdGUaA1BVVCoRQ2hhbmdlSW1wb3J0U3RhdGVKG0NoYW5nZUltcG9ydFN0YXRlUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBIRCgh0ZXN0IGFwaTIFMC4wLjEikwIKYwoIL2ltcG9ydHMSVzJVEg5DcmVhdGVzIGltcG9ydCoMY3JlYXRlSW1wb3J0QhQSEgoDMjAxEgsKCQoHY3JlYXRlZFofCh0KCm9hdXRoX2F1dGgSDwoNaW1wb3J0OmNyZWF0ZQqrAQoZL2ltcG9ydHMve2ltcG9ydElkfS9zdGF0ZRKNASqKARIUQ2hhbmdlcyBpbXBvcnQgc3RhdGUqEWNoYW5nZUltcG9ydFN0YXRlMiEKHwoIaW1wb3J0SWQSBHBhdGggAVILCgnKAQZzdHJpbmdCGhIYCgMyMDASEQoPCg1TdGF0ZSBjaGFuZ2VkWiAKHgoKb2F1dGhfYXV0aBIQCg5pbXBvcnQ6cHJvY2Vzcyr3ATr0AQrxAQoKb2F1dGhfYXV0aBLiAQrfAQoGb2F1dGgyOtQBElcSMy4uL2F1dGgvcmVhbG1zL21hc3Rlci9wcm90b2NvbC9vcGVuaWQtY29ubmVjdC90b2tlbiIgCh4KDWltcG9ydDpjcmVhdGUSDWNyZWF0ZSBpbXBvcnQaeRIzLi4vYXV0aC9yZWFsbXMvbWFzdGVyL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L3Rva2VuIkIKHgoNaW1wb3J0OmNyZWF0ZRINY3JlYXRlIGltcG9ydAogCg5pbXBvcnQ6cHJvY2VzcxIOcHJvY2VzcyBpbXBvcnQ=')),
);

/// From: 3_0/issue______kotlinArrayEnumEmbedded.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_kotlin_array_enum_embedded = (
  model: surface.Model.fromBuffer(base64Decode('CgR0ZXN0EpABChFFbWJlZGRlZEVudW1BcnJheSo7CgZjb2xvcnMSBnN0cmluZxgCUgVCTEFDS1IDUkVEUgZPUkFOR0VSBllFTExPV1IEQkxVRVIFR1JFRU4qPgoJcmVxQ29sb3JzEgZzdHJpbmcYAlIFQkxBQ0tSA1JFRFIGT1JBTkdFUgZZRUxMT1dSBEJMVUVSBUdSRUVOEkAKE05vRW1iZWRkZWRFbnVtQXJyYXkqEgoGY29sb3JzEgZDb2xvcnMYAioVCglyZXFDb2xvcnMSBkNvbG9ycxgCEkIKBkNvbG9ycyo4CgV2YWx1ZRIGc3RyaW5nUgVCTEFDS1IDUkVEUgZPUkFOR0VSBllFTExPV1IEQkxVRVIFR1JFRU4SjQEKFFNpbXBsZUNvbG9yQ29udGFpbmVyKjgKBWNvbG9yEgZzdHJpbmdSBUJMQUNLUgNSRURSBk9SQU5HRVIGWUVMTE9XUgRCTFVFUgVHUkVFTio7CghyZXFDb2xvchIGc3RyaW5nUgVCTEFDS1IDUkVEUgZPUkFOR0VSBllFTExPV1IEQkxVRVIFR1JFRU4SYwoNVGVzdFJlc3BvbnNlcxolVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVGVzdCorChQyMDAgYXBwbGljYXRpb24vanNvbhIRRW1iZWRkZWRFbnVtQXJyYXkYAxonCgR0ZXN0EgUvdGVzdBoDR0VUKgRUZXN0Ug1UZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRILCgR0ZXN0MgMxLjAiaApmCgUvdGVzdBJdIlsqBHRlc3RCUxJRCgMyMDASSgpICgJPSxpCCkAKEGFwcGxpY2F0aW9uL2pzb24SLAoqEigKJiMvY29tcG9uZW50cy9zY2hlbWFzL0VtYmVkZGVkRW51bUFycmF5KvcFCvQFCoMCChFFbWJlZGRlZEVudW1BcnJheRLtAQrqAboBCXJlcUNvbG9yc8oBBm9iamVjdPoB0QEKZQoGY29sb3JzElsKWcoBBWFycmF58gFOCkwKSsIBCBIGQkxBQ0sKwgEGEgRSRUQKwgEJEgdPUkFOR0UKwgEJEgdZRUxMT1cKwgEHEgVCTFVFCsIBCBIGR1JFRU4KygEGc3RyaW5nCmgKCXJlcUNvbG9ycxJbClnKAQVhcnJhefIBTgpMCkrCAQgSBkJMQUNLCsIBBhIEUkVECsIBCRIHT1JBTkdFCsIBCRIHWUVMTE9XCsIBBxIFQkxVRQrCAQgSBkdSRUVOCsoBBnN0cmluZwqrAQoTTm9FbWJlZGRlZEVudW1BcnJheRKTAQqQAcoBBm9iamVjdPoBgwEKOAoGY29sb3JzEi4KLMoBBWFycmF58gEhCh8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvQ29sb3JzCkcKCXJlcUNvbG9ycxI6Cji6AQlyZXFDb2xvcnPKAQVhcnJhefIBIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0NvbG9ycwpWCgZDb2xvcnMSTApKwgEIEgZCTEFDSwrCAQYSBFJFRArCAQkSB09SQU5HRQrCAQkSB1lFTExPVwrCAQcSBUJMVUUKwgEIEgZHUkVFTgrKAQZzdHJpbmcK5QEKFFNpbXBsZUNvbG9yQ29udGFpbmVyEswBCskBugEIcmVxQ29sb3LKAQZvYmplY3T6AbEBClUKBWNvbG9yEkwKSsIBCBIGQkxBQ0sKwgEGEgRSRUQKwgEJEgdPUkFOR0UKwgEJEgdZRUxMT1cKwgEHEgVCTFVFCsIBCBIGR1JFRU4KygEGc3RyaW5nClgKCHJlcUNvbG9yEkwKSsIBCBIGQkxBQ0sKwgEGEgRSRUQKwgEJEgdPUkFOR0UKwgEJEgdZRUxMT1cKwgEHEgVCTFVFCsIBCBIGR1JFRU4KygEGc3RyaW5n')),
);

/// From: 3_0/oneOf_duplicateArray.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_duplicate_array = (
  model: surface.Model.fromBuffer(base64Decode('ChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlEjAKB0V4YW1wbGUqEQoFdmFsdWUSBm51bWJlchgCKhIKBXZhbHVlEgdpbnRlZ2VyGAISWQoNTGlzdFJlc3BvbnNlcxolTGlzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTGlzdCohChQyMDAgYXBwbGljYXRpb24vanNvbhIHRXhhbXBsZRgDGioKBGxpc3QSCC9leGFtcGxlGgNHRVQqBExpc3RSDUxpc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIpChlFeGFtcGxlIC0gb25lT2YgZGF0YSB0eXBlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJhCl8KCC9leGFtcGxlElMiUSoEbGlzdEJJEkcKAzIwMBJACj4KAk9LGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZSpMCkoKSAoHRXhhbXBsZRI9CjvaARoKGMoBBWFycmF58gENCgsKCcoBBm51bWJlctoBGwoZygEFYXJyYXnyAQ4KDAoKygEHaW50ZWdlcg==')),
);

/// From: 3_0/convertEnumNullToNullable_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_convert_enum_null_to_nullable_test = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEiMKCkVudW1TdHJpbmcqFQoFdmFsdWUSBnN0cmluZ1IBQVIBQhIpCg5FbnVtTnVsbFN0cmluZyoXCgV2YWx1ZRIGc3RyaW5nUgYibnVsbCISIQoIRW51bU51bGwqFQoFdmFsdWUSBnN0cmluZ1IEbnVsbBJjCglBbnlPZlRlc3QqDwoFdmFsdWUSBnN0cmluZyoVCgV2YWx1ZRIGc3RyaW5nUgFBUgFCKhcKBXZhbHVlEgZzdHJpbmdSBiJudWxsIioVCgV2YWx1ZRIGc3RyaW5nUgRudWxsEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElsKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCUFueU9mVGVzdBgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK9AQq6AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmwEimAEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSxJJCgMyMDASQgpACgJPSxo6CjgKEGFwcGxpY2F0aW9uL2pzb24SJAoiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0FueU9mVGVzdCq2AgqzAgq5AQoJQW55T2ZUZXN0EqsBCqgB4gELCgnKAQZzdHJpbmfiASMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvRW51bVN0cmluZ+IBJxIlCiMjL2NvbXBvbmVudHMvc2NoZW1hcy9FbnVtTnVsbFN0cmluZ+IBIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9FbnVtTnVsbJICI3RvIHRlc3QgYW55T2YgKHN0cmluZywgZW51bSBzdHJpbmcpCicKCkVudW1TdHJpbmcSGQoXwgEEEgJBCsIBBBICQgrKAQZzdHJpbmcKKQoORW51bU51bGxTdHJpbmcSFwoVwgEJEgcibnVsbCIKygEGc3RyaW5nCiEKCEVudW1OdWxsEhUKE8IBBxIFbnVsbArKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_7613.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_7613 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjgKG0FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyoZCgV2YWx1ZRIHaW50ZWdlchgCIgVpbnQ2NBJGCiVPYmplY3RXaXRoVmFsaWRhdGlvbnNJbkFycmF5UHJvcEl0ZW1zKh0KCWFycmF5UHJvcBIHaW50ZWdlchgCIgVpbnQ2NBJaCitPYmplY3RXaXRoVmFsaWRhdGlvbnNJbkFkZGl0aW9uYWxQcm9wZXJ0aWVzKisKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIQbWFwW3N0cmluZ11pbnQ2NBgBEjgKHUNvbXBvc2VkT25lT2ZJbmxpbmVWYWxpZGF0aW9uKhcKBXZhbHVlEgdpbnRlZ2VyIgVpbnQ2NBI4Ch1Db21wb3NlZEFueU9mSW5saW5lVmFsaWRhdGlvbioXCgV2YWx1ZRIHaW50ZWdlciIFaW50NjQSOAodQ29tcG9zZWRBbGxPZklubGluZVZhbGlkYXRpb24qFwoFdmFsdWUSB2ludGVnZXIiBWludDY0EioKGUFkZGl0aW9uYWxQcm9wZXJ0aWVzVW5zZXQQASILaW50ZXJmYWNle30SKQoYQWRkaXRpb25hbFByb3BlcnRpZXNUcnVlEAEiC2ludGVyZmFjZXt9EioKGUFkZGl0aW9uYWxQcm9wZXJ0aWVzRmFsc2UQASILaW50ZXJmYWNle30SSgoaQWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWEqLAoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzEhFtYXBbc3RyaW5nXXN0cmluZxgBErcCCiFPYmplY3RNb2RlbFdpdGhSZWZBZGRQcm9wc0luUHJvcHMqQwokbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3Vuc2V0EhlBZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0GAMqQQojbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3RydWUSGEFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRgDKkMKJG1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc19mYWxzZRIZQWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRgDKkUKJW1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc19zY2hlbWESGkFkZGl0aW9uYWxQcm9wZXJ0aWVzU2NoZW1hGAMSNQokbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3Vuc2V0EAEiC2ludGVyZmFjZXt9EjQKI21hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc190cnVlEAEiC2ludGVyZmFjZXt9EjUKJG1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc19mYWxzZRABIgtpbnRlcmZhY2V7fRJVCiVtYXBfd2l0aF9hZGRpdGlvbmFsX3Byb3BlcnRpZXNfc2NoZW1hKiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARLgAgoeT2JqZWN0TW9kZWxXaXRoQWRkUHJvcHNJblByb3BzKk4KJG1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc191bnNldBIkbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3Vuc2V0GAMqTAojbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3RydWUSI21hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc190cnVlGAMqTgokbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX2ZhbHNlEiRtYXBfd2l0aF9hZGRpdGlvbmFsX3Byb3BlcnRpZXNfZmFsc2UYAypQCiVtYXBfd2l0aF9hZGRpdGlvbmFsX3Byb3BlcnRpZXNfc2NoZW1hEiVtYXBfd2l0aF9hZGRpdGlvbmFsX3Byb3BlcnRpZXNfc2NoZW1hGAMSSwoiT2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wcyoLCgFhEgZzdHJpbmcqCwoBYhIGc3RyaW5nKgsKAWMSBnN0cmluZxIqCgFhKgsKAWESBnN0cmluZyoLCgFiEgZzdHJpbmcqCwoBYxIGc3RyaW5nEiMKF09iamVjdFByb3BDb250YWluc1Byb3BzKggKAWESAWEYAxI7Ch9BcnJheVdpdGhPYmplY3RXaXRoUHJvcHNJbkl0ZW1zKgsKAWESBnN0cmluZyoLCgFiEgZzdHJpbmcSXwpDT2JqZWN0V2l0aE9iamVjdFdpdGhQcm9wc0luQWRkaXRpb25hbFByb3BlcnRpZXNBZGRpdGlvbmFsUHJvcGVydGllcyoLCgFhEgZzdHJpbmcqCwoBYhIGc3RyaW5nEpwBCi9PYmplY3RXaXRoT2JqZWN0V2l0aFByb3BzSW5BZGRpdGlvbmFsUHJvcGVydGllcyppChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSTm1hcFtzdHJpbmddT2JqZWN0V2l0aE9iamVjdFdpdGhQcm9wc0luQWRkaXRpb25hbFByb3BlcnRpZXNBZGRpdGlvbmFsUHJvcGVydGllcxgBEl4KKXJlZkFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtc1JlcXVlc3RCb2R5KjEKEGFwcGxpY2F0aW9uL2pzb24SG0FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcxgDEu4BCihSZWZBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNQYXJhbWV0ZXJzGltSZWZBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUmVmQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zKigKBWl0ZW1zEhtBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXMYAygEKjsKDHJlcXVlc3RfYm9keRIpcmVmQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVxdWVzdEJvZHkYAxK7AQonUmVmQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGllSZWZBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFJlZkFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyo1ChQyMDAgYXBwbGljYXRpb24vanNvbhIbQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zGAMSTgomYXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVxdWVzdEJvZHkqJAoQYXBwbGljYXRpb24vanNvbhIHaW50ZWdlchgCIgVpbnQ2NBLVAQolQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycxpVQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyobCgVpdGVtcxIHaW50ZWdlchgCIgVpbnQ2NCgEKjgKDHJlcXVlc3RfYm9keRImYXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVxdWVzdEJvZHkYAxKlAQokQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGlNBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyooChQyMDAgYXBwbGljYXRpb24vanNvbhIHaW50ZWdlchgCIgVpbnQ2NBLuAgolQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycxpVQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyo6ChlhZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0EhlBZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0GAMoAyo4ChhhZGRpdGlvbmFsUHJvcGVydGllc1RydWUSGEFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRgDKAMqOgoZYWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRIZQWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRgDKAMqPAoaYWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWESGkFkZGl0aW9uYWxQcm9wZXJ0aWVzU2NoZW1hGAMoAxLcAgokQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGlNBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyozChQyMDAgYXBwbGljYXRpb24vanNvbhIZQWRkaXRpb25hbFByb3BlcnRpZXNVbnNldBgDKjEKEzIwMSBhcHBsaWNhdGlvbi94bWwSGEFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRgDKkQKJTIwMiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQSGUFkZGl0aW9uYWxQcm9wZXJ0aWVzRmFsc2UYAyoxChEyMDMgYXBwbGljYXRpb24vKhIaQWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWEYAxIqChlhZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0EAEiC2ludGVyZmFjZXt9EikKGGFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRABIgtpbnRlcmZhY2V7fRIqChlhZGRpdGlvbmFsUHJvcGVydGllc0ZhbHNlEAEiC2ludGVyZmFjZXt9EkoKGmFkZGl0aW9uYWxQcm9wZXJ0aWVzU2NoZW1hKiwKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIRbWFwW3N0cmluZ11zdHJpbmcYARLuAgolQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycxpVQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcyo6ChlhZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0EhlhZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0GAMoAyo4ChhhZGRpdGlvbmFsUHJvcGVydGllc1RydWUSGGFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRgDKAMqOgoZYWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRIZYWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRgDKAMqPAoaYWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWESGmFkZGl0aW9uYWxQcm9wZXJ0aWVzU2NoZW1hGAMoAxIlChQyMDAgYXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRIlChQyMDEgYXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRIlChQyMDIgYXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRJEChQyMDMgYXBwbGljYXRpb24vanNvbiosChVhZGRpdGlvbmFsX3Byb3BlcnRpZXMSEW1hcFtzdHJpbmddc3RyaW5nGAESuwIKJEFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtc1Jlc3BvbnNlcxpTQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXMqLgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFDIwMCBhcHBsaWNhdGlvbi9qc29uGAMqLgoUMjAxIGFwcGxpY2F0aW9uL2pzb24SFDIwMSBhcHBsaWNhdGlvbi9qc29uGAMqLgoUMjAyIGFwcGxpY2F0aW9uL2pzb24SFDIwMiBhcHBsaWNhdGlvbi9qc29uGAMqLgoUMjAzIGFwcGxpY2F0aW9uL2pzb24SFDIwMyBhcHBsaWNhdGlvbi9qc29uGAMSMwoKb2JqZWN0RGF0YSoLCgFhEgZzdHJpbmcqCwoBYhIGc3RyaW5nKgsKAWMSBnN0cmluZxJmCj1vYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uKgsKAWESBnN0cmluZyoLCgFiEgZzdHJpbmcqCwoBYxIGc3RyaW5nEoQBCi1vYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzUmVxdWVzdEJvZHkqUwoQYXBwbGljYXRpb24vanNvbhI9b2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wc1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDEvIBCixPYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzUGFyYW1ldGVycxpjT2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wc1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBPYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzKhwKCm9iamVjdERhdGESCm9iamVjdERhdGEYAygEKj8KDHJlcXVlc3RfYm9keRItb2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wc1JlcXVlc3RCb2R5GAMSwAEKK09iamVjdFdpdGhPcHRpb25hbEFuZFJlcXVpcmVkUHJvcHNSZXNwb25zZXMaYU9iamVjdFdpdGhPcHRpb25hbEFuZFJlcXVpcmVkUHJvcHNSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIE9iamVjdFdpdGhPcHRpb25hbEFuZFJlcXVpcmVkUHJvcHMqLgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFDIwMCBhcHBsaWNhdGlvbi9qc29uGAMaxwEKHnJlZkFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcxIsL3JlZl9hcnJheV93aXRoX3ZhbGlkYXRpb25zX2luX2l0ZW1zL3tpdGVtc30aBFBPU1QqHlJlZkFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtc0ooUmVmQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVyc1InUmVmQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGrcBChthcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXMSKC9hcnJheV93aXRoX3ZhbGlkYXRpb25zX2luX2l0ZW1zL3tpdGVtc30aBFBPU1QqG0FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtc0olQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVyc1IkQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGqoBChthcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXMSGy9yZWZfYWRkaXRpb25hbF9wcm9wZXJ0aWVzLxoEUE9TVCobQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zSiVBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNQYXJhbWV0ZXJzUiRBcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXNSZXNwb25zZXMapgEKG2FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcxIXL2FkZGl0aW9uYWxfcHJvcGVydGllcy8aBFBPU1QqG0FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtc0olQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUGFyYW1ldGVyc1IkQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zUmVzcG9uc2VzGuABCiJvYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzEjUvb2JqZWN0X3dpdGhfb3B0aW9uYWxfYW5kX3JlcXVpcmVkX3Byb3BzL3tvYmplY3REYXRhfRoEUE9TVCoiT2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wc0osT2JqZWN0V2l0aE9wdGlvbmFsQW5kUmVxdWlyZWRQcm9wc1BhcmFtZXRlcnNSK09iamVjdFdpdGhPcHRpb25hbEFuZFJlcXVpcmVkUHJvcHNSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJmChBPcGVuQVBJIFBldHN0b3JlEgtzYW1wbGUgc3BlYyo+CgpBcGFjaGUtMi4wEjBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLmh0bWwyBTEuMC4wGiIKIGh0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvOjgwL3YyIvMTCtwCCiwvcmVmX2FycmF5X3dpdGhfdmFsaWRhdGlvbnNfaW5faXRlbXMve2l0ZW1zfRKrAjKoAgoFaXRlbXMqHnJlZkFycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtczJHCkUKBWl0ZW1zEgRwYXRoIAFSNBIyCjAjL2NvbXBvbmVudHMvc2NoZW1hcy9BcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXM6UgpQEkwKSgoQYXBwbGljYXRpb24vanNvbhI2CjQSMgowIy9jb21wb25lbnRzL3NjaGVtYXMvQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zGAFCYhJgCgMyMDASWQpXCgdzdWNjZXNzGkwKSgoQYXBwbGljYXRpb24vanNvbhI2CjQSMgowIy9jb21wb25lbnRzL3NjaGVtYXMvQXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zCr0CCigvYXJyYXlfd2l0aF92YWxpZGF0aW9uc19pbl9pdGVtcy97aXRlbXN9EpACMo0CCgVpdGVtcyobYXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zMj8KPQoFaXRlbXMSBHBhdGggAVIsCirKAQVhcnJhefIBHwodChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQ6SgpIEkQKQgoQYXBwbGljYXRpb24vanNvbhIuCiwKKsoBBWFycmF58gEfCh0KG1kAAAAAAAAcQMoBB2ludGVnZXKaAgVpbnQ2NBgBQloSWAoDMjAwElEKTwoHc3VjY2VzcxpECkIKEGFwcGxpY2F0aW9uL2pzb24SLgosCirKAQVhcnJhefIBHwodChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKxwYKGy9yZWZfYWRkaXRpb25hbF9wcm9wZXJ0aWVzLxKnBjKkBgoVYWRkaXRpb25hbF9wcm9wZXJ0aWVzKhthcnJheVdpdGhWYWxpZGF0aW9uc0luSXRlbXMyWgpYChlhZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0EgVxdWVyeSABUjISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkaXRpb25hbFByb3BlcnRpZXNVbnNldDJYClYKGGFkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZRIFcXVlcnkgAVIxEi8KLSMvY29tcG9uZW50cy9zY2hlbWFzL0FkZGl0aW9uYWxQcm9wZXJ0aWVzVHJ1ZTJaClgKGWFkZGl0aW9uYWxQcm9wZXJ0aWVzRmFsc2USBXF1ZXJ5IAFSMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRpdGlvbmFsUHJvcGVydGllc0ZhbHNlMlwKWgoaYWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWESBXF1ZXJ5IAFSMxIxCi8jL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRpdGlvbmFsUHJvcGVydGllc1NjaGVtYUL9AhJaCgMyMDASUwpRCgMyMDAaSgpIChBhcHBsaWNhdGlvbi9qc29uEjQKMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0ElgKAzIwMRJRCk8KAzIwMRpICkYKD2FwcGxpY2F0aW9uL3htbBIzCjESLwotIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkaXRpb25hbFByb3BlcnRpZXNUcnVlEmsKAzIwMhJkCmIKAzIwMhpbClkKIWFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZBI0CjISMAouIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkaXRpb25hbFByb3BlcnRpZXNGYWxzZRJYCgMyMDMSUQpPCgMyMDMaSApGCg1hcHBsaWNhdGlvbi8qEjUKMxIxCi8jL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRpdGlvbmFsUHJvcGVydGllc1NjaGVtYQqyBAoXL2FkZGl0aW9uYWxfcHJvcGVydGllcy8SlgQykwQKFWFkZGl0aW9uYWxfcHJvcGVydGllcyobYXJyYXlXaXRoVmFsaWRhdGlvbnNJbkl0ZW1zMjMKMQoZYWRkaXRpb25hbFByb3BlcnRpZXNVbnNldBIFcXVlcnkgAVILCgnKAQZvYmplY3QyNwo1ChhhZGRpdGlvbmFsUHJvcGVydGllc1RydWUSBXF1ZXJ5IAFSEAoOygEGb2JqZWN0ggICEAEyOAo2ChlhZGRpdGlvbmFsUHJvcGVydGllc0ZhbHNlEgVxdWVyeSABUhAKDsoBBm9iamVjdIICAhAAMkQKQgoaYWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWESBXF1ZXJ5IAFSGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZ0LuARIzCgMyMDASLAoqCgMyMDAaIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGb2JqZWN0EjgKAzIwMRIxCi8KAzIwMRooCiYKEGFwcGxpY2F0aW9uL2pzb24SEgoQCg7KAQZvYmplY3SCAgIQARI4CgMyMDISMQovCgMyMDIaKAomChBhcHBsaWNhdGlvbi9qc29uEhIKEAoOygEGb2JqZWN0ggICEAASQwoDMjAzEjwKOgoDMjAzGjMKMQoQYXBwbGljYXRpb24vanNvbhIdChsKGcoBBm9iamVjdIICDQoLCgnKAQZzdHJpbmcK0gMKNS9vYmplY3Rfd2l0aF9vcHRpb25hbF9hbmRfcmVxdWlyZWRfcHJvcHMve29iamVjdERhdGF9EpgDMpUDCgR2YXJzKiJvYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzMm0KawoKb2JqZWN0RGF0YRIEcGF0aCABUlUKU7oBAWG6AQFiygEGb2JqZWN0+gE/ChMKAWESDgoMgAEBygEGc3RyaW5nChMKAWISDgoMgAEBygEGc3RyaW5nChMKAWMSDgoMgAEBygEGc3RyaW5nOnMKcRJtCmsKEGFwcGxpY2F0aW9uL2pzb24SVwpVClO6AQFhugEBYsoBBm9iamVjdPoBPwoTCgFhEg4KDIABAcoBBnN0cmluZwoTCgFiEg4KDIABAcoBBnN0cmluZwoTCgFjEg4KDIABAcoBBnN0cmluZxgBQoQBEoEBCgMyMDASegp4CgdzdWNjZXNzGm0KawoQYXBwbGljYXRpb24vanNvbhJXClUKU7oBAWG6AQFiygEGb2JqZWN0+gE/ChMKAWESDgoMgAEBygEGc3RyaW5nChMKAWISDgoMgAEBygEGc3RyaW5nChMKAWMSDgoMgAEBygEGc3RyaW5nKvAOCusOCksKG0FycmF5V2l0aFZhbGlkYXRpb25zSW5JdGVtcxIsCirKAQVhcnJhefIBHwodChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKcgolT2JqZWN0V2l0aFZhbGlkYXRpb25zSW5BcnJheVByb3BJdGVtcxJJCkfKAQZvYmplY3T6ATsKOQoJYXJyYXlQcm9wEiwKKsoBBWFycmF58gEfCh0KG1kAAAAAAAAcQMoBB2ludGVnZXKaAgVpbnQ2NApcCitPYmplY3RXaXRoVmFsaWRhdGlvbnNJbkFkZGl0aW9uYWxQcm9wZXJ0aWVzEi0KK8oBBm9iamVjdIICHwodChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKQwodQ29tcG9zZWRPbmVPZklubGluZVZhbGlkYXRpb24SIgog2gEdChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKQwodQ29tcG9zZWRBbnlPZklubGluZVZhbGlkYXRpb24SIgog4gEdChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKQwodQ29tcG9zZWRBbGxPZklubGluZVZhbGlkYXRpb24SIgog0gEdChtZAAAAAAAAHEDKAQdpbnRlZ2VymgIFaW50NjQKKAoZQWRkaXRpb25hbFByb3BlcnRpZXNVbnNldBILCgnKAQZvYmplY3QKLAoYQWRkaXRpb25hbFByb3BlcnRpZXNUcnVlEhAKDsoBBm9iamVjdIICAhABCi0KGUFkZGl0aW9uYWxQcm9wZXJ0aWVzRmFsc2USEAoOygEGb2JqZWN0ggICEAAKOQoaQWRkaXRpb25hbFByb3BlcnRpZXNTY2hlbWESGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZwqmAwohT2JqZWN0TW9kZWxXaXRoUmVmQWRkUHJvcHNJblByb3BzEoADCv0CygEGb2JqZWN0+gHwAgpaCiRtYXBfd2l0aF9hZGRpdGlvbmFsX3Byb3BlcnRpZXNfdW5zZXQSMhIwCi4jL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRpdGlvbmFsUHJvcGVydGllc1Vuc2V0ClgKI21hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc190cnVlEjESLwotIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkaXRpb25hbFByb3BlcnRpZXNUcnVlCloKJG1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc19mYWxzZRIyEjAKLiMvY29tcG9uZW50cy9zY2hlbWFzL0FkZGl0aW9uYWxQcm9wZXJ0aWVzRmFsc2UKXAolbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3NjaGVtYRIzEjEKLyMvY29tcG9uZW50cy9zY2hlbWFzL0FkZGl0aW9uYWxQcm9wZXJ0aWVzU2NoZW1hCqECCh5PYmplY3RNb2RlbFdpdGhBZGRQcm9wc0luUHJvcHMS/gEK+wHKAQZvYmplY3T6Ae4BCjMKJG1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc191bnNldBILCgnKAQZvYmplY3QKNwojbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX3RydWUSEAoOygEGb2JqZWN0ggICEAEKOAokbWFwX3dpdGhfYWRkaXRpb25hbF9wcm9wZXJ0aWVzX2ZhbHNlEhAKDsoBBm9iamVjdIICAhAACkQKJW1hcF93aXRoX2FkZGl0aW9uYWxfcHJvcGVydGllc19zY2hlbWESGwoZygEGb2JqZWN0ggINCgsKCcoBBnN0cmluZwp7CiJPYmplY3RXaXRoT3B0aW9uYWxBbmRSZXF1aXJlZFByb3BzElUKU7oBAWG6AQFiygEGb2JqZWN0+gE/ChMKAWESDgoMgAEBygEGc3RyaW5nChMKAWISDgoMgAEBygEGc3RyaW5nChMKAWMSDgoMgAEBygEGc3RyaW5nCoUBChdPYmplY3RQcm9wQ29udGFpbnNQcm9wcxJqCmjKAQZvYmplY3T6AVwKWgoBYRJVClO6AQFhugEBYsoBBm9iamVjdPoBPwoTCgFhEg4KDIABAcoBBnN0cmluZwoTCgFiEg4KDIABAcoBBnN0cmluZwoTCgFjEg4KDIABAcoBBnN0cmluZwpqCh9BcnJheVdpdGhPYmplY3RXaXRoUHJvcHNJbkl0ZW1zEkcKRcoBBWFycmF58gE6CjgKNsoBBm9iamVjdPoBKgoTCgFhEg4KDIABAcoBBnN0cmluZwoTCgFiEg4KDIABAcoBBnN0cmluZwp7Ci9PYmplY3RXaXRoT2JqZWN0V2l0aFByb3BzSW5BZGRpdGlvbmFsUHJvcGVydGllcxJICkbKAQZvYmplY3SCAjoKOAo2ygEGb2JqZWN0+gEqChMKAWESDgoMgAEBygEGc3RyaW5nChMKAWISDgoMgAEBygEGc3RyaW5nOgA6IwoFaXRlbXMSGkV2ZXJ5dGhpbmcgYWJvdXQgeW91ciBQZXRz')),
);

/// From: 3_0/composed-schemas.yaml
final OpenApiProto<v3.Document> fixtures_3_0_composed_schemas = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEhQKA1BldBABIgtpbnRlcmZhY2V7fRJKCgNEb2cqDwoEYmFyaxIHYm9vbGVhbioyCgVicmVlZBIGc3RyaW5nUgVEaW5nb1IFSHVza3lSCVJldHJpZXZlclIIU2hlcGhlcmQSJwoDQ2F0KhAKBWh1bnRzEgdib29sZWFuKg4KA2FnZRIHaW50ZWdlchIuCghQZXRCeUFnZSoOCgNhZ2USB2ludGVnZXIqEgoIbmlja25hbWUSBnN0cmluZxI7CglQZXRCeVR5cGUqHAoIcGV0X3R5cGUSBnN0cmluZ1IDQ2F0UgNEb2cqEAoFaHVudHMSB2Jvb2xlYW4ShAEKG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbioQCgVodW50cxIHYm9vbGVhbioOCgNhZ2USB2ludGVnZXIqDwoEYmFyaxIHYm9vbGVhbioyCgVicmVlZBIGc3RyaW5nUgVEaW5nb1IFSHVza3lSCVJldHJpZXZlclIIU2hlcGhlcmQSQAoLUmVxdWVzdEJvZHkqMQoQYXBwbGljYXRpb24vanNvbhIbUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uGAMSagoUUEFUQ0hfcGV0c1BhcmFtZXRlcnMaM1BBVENIX3BldHNQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUEFUQ0hfcGV0cyodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMSQAoLUmVxdWVzdEJvZHkqMQoQYXBwbGljYXRpb24vanNvbhIbUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uGAMShQEKHVBBVENIX3BldHMtZmlsdGVyZWRQYXJhbWV0ZXJzGkVQQVRDSF9wZXRzLWZpbHRlcmVkUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBBVENIX3BldHMtZmlsdGVyZWQqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDEhUKBGZpbGUqDQoFdmFsdWUSBGZpbGUSQAoLUmVxdWVzdEJvZHkqMQoQYXBwbGljYXRpb24vanNvbhIbUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uGAMSZwoTUE9TVF9maWxlUGFyYW1ldGVycxoxUE9TVF9maWxlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBPU1RfZmlsZSodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMaMBIFL3BldHMaBVBBVENIKgpQQVRDSF9wZXRzShRQQVRDSF9wZXRzUGFyYW1ldGVycxpLEg4vcGV0cy1maWx0ZXJlZBoFUEFUQ0gqE1BBVENIX3BldHMtZmlsdGVyZWRKHVBBVENIX3BldHMtZmlsdGVyZWRQYXJhbWV0ZXJzGi0SBS9maWxlGgRQT1NUKglQT1NUX2ZpbGVKE1BPU1RfZmlsZVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSLiAwqkAQoFL3BldHMSmgFSlwE6fwp9EnsKeQoQYXBwbGljYXRpb24vanNvbhJlCmMKYRIKCghwZXRfdHlwZdoBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9DYXTaARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvRG9n2gEUChKSAg9Bbnkga2luZCBvZiBwZXRCFBISCgMyMDASCwoJCgdVcGRhdGVkCrABCg4vcGV0cy1maWx0ZXJlZBKdAVKaATqBAQp/En0KewoQYXBwbGljYXRpb24vanNvbhJnCmUKY+IBIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRCeUFnZeIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9QZXRCeVR5cGXiARcKFZICEkFueSBraW5kIG9mIGZpbHRlckIUEhIKAzIwMBILCgkKB1VwZGF0ZWQKhQEKBS9maWxlEnwyejpcCloSWApWChBhcHBsaWNhdGlvbi9qc29uEkIKQAo+ygEGb2JqZWN0+gEyCjAKBGZpbGUSKAom0gEJCgfKAQRmaWxl0gEXChWSAhJUaGUgZmlsZSB0byB1cGxvYWRCGhIYCgMyMDASEQoPCg1GaWxlIHVwbG9hZGVkKvcDCvQDCh0KA1BldBIWChS6AQhwZXRfdHlwZcoBBm9iamVjdAqxAQoDRG9nEqkBCqYB0gEUChKSAg9Eb2cgaW5mb3JtYXRpb27SARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV00gFtCmvKAQZvYmplY3T6AV8KFAoEYmFyaxIMCgrKAQdib29sZWFuCkcKBWJyZWVkEj4KPMIBCBIGRGluZ28KwgEIEgZIdXNreQrCAQwSClJldHJpZXZlcgrCAQsSCVNoZXBoZXJkCsoBBnN0cmluZwplCgNDYXQSXgpc0gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldNIBOgo4ygEGb2JqZWN0+gEsChUKBWh1bnRzEgwKCsoBB2Jvb2xlYW4KEwoDYWdlEgwKCsoBB2ludGVnZXIKTgoIUGV0QnlBZ2USQgpAugEDYWdlygEGb2JqZWN0+gEuChMKA2FnZRIMCgrKAQdpbnRlZ2VyChcKCG5pY2tuYW1lEgsKCcoBBnN0cmluZwpoCglQZXRCeVR5cGUSWwpZugEIcGV0X3R5cGXKAQZvYmplY3T6AUIKKQoIcGV0X3R5cGUSHQobwgEGEgRDYXQKwgEGEgREb2cKygEGc3RyaW5nChUKBWh1bnRzEgwKCsoBB2Jvb2xlYW4=')),
);

/// From: 3_0/issue_13043_recursive_model.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_13043_recursive_model = (
  model: surface.Model.fromBuffer(base64Decode('ChpBUElUZXN0IEFQSSBkb2N1bWVudGF0aW9uLhI4CgVQb2ludCofCgtjb29yZGluYXRlcxIGbnVtYmVyGAIiBmRvdWJsZSoOCgR0eXBlEgZzdHJpbmcSRQoSR2VvbWV0cnlDb2xsZWN0aW9uKg4KBHR5cGUSBnN0cmluZyofCgpnZW9tZXRyaWVzEg9HZW9Kc29uR2VvbWV0cnkYAhJzCg9HZW9Kc29uR2VvbWV0cnkqHwoLY29vcmRpbmF0ZXMSBm51bWJlchgCIgZkb3VibGUqDgoEdHlwZRIGc3RyaW5nKg4KBHR5cGUSBnN0cmluZyofCgpnZW9tZXRyaWVzEg9HZW9Kc29uR2VvbWV0cnkYAhJAChdwb3N0LWdlb2pzb25SZXF1ZXN0Qm9keSolChBhcHBsaWNhdGlvbi9qc29uEg9HZW9Kc29uR2VvbWV0cnkYAxJ8ChZQb3N0LUdlb2pzb25QYXJhbWV0ZXJzGjdQb3N0LUdlb2pzb25QYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUG9zdC1HZW9qc29uKikKDHJlcXVlc3RfYm9keRIXcG9zdC1nZW9qc29uUmVxdWVzdEJvZHkYAxJuChVQb3N0LUdlb2pzb25SZXNwb25zZXMaNVBvc3QtR2VvanNvblJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgUG9zdC1HZW9qc29uKh4KFDIwMSBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcSVworcG9zdC1nZW9qc29uLWdlb21ldHJ5LWNvbGxlY3Rpb25SZXF1ZXN0Qm9keSooChBhcHBsaWNhdGlvbi9qc29uEhJHZW9tZXRyeUNvbGxlY3Rpb24YAxLMAQoqUG9zdC1HZW9qc29uLUdlb21ldHJ5LUNvbGxlY3Rpb25QYXJhbWV0ZXJzGl9Qb3N0LUdlb2pzb24tR2VvbWV0cnktQ29sbGVjdGlvblBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQb3N0LUdlb2pzb24tR2VvbWV0cnktQ29sbGVjdGlvbio9CgxyZXF1ZXN0X2JvZHkSK3Bvc3QtZ2VvanNvbi1nZW9tZXRyeS1jb2xsZWN0aW9uUmVxdWVzdEJvZHkYAxKqAQopUG9zdC1HZW9qc29uLUdlb21ldHJ5LUNvbGxlY3Rpb25SZXNwb25zZXMaXVBvc3QtR2VvanNvbi1HZW9tZXRyeS1Db2xsZWN0aW9uUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQb3N0LUdlb2pzb24tR2VvbWV0cnktQ29sbGVjdGlvbioeChQyMDEgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nGlsKDHBvc3QtZ2VvanNvbhIIL2dlb2pzb24aBFBPU1QqDFBvc3QtR2VvanNvbkoWUG9zdC1HZW9qc29uUGFyYW1ldGVyc1IVUG9zdC1HZW9qc29uUmVzcG9uc2VzGr8BCiBwb3N0LWdlb2pzb24tZ2VvbWV0cnktY29sbGVjdGlvbhIcL2dlb2pzb25fZ2VvbWV0cnlfY29sbGVjdGlvbhoEUE9TVCogUG9zdC1HZW9qc29uLUdlb21ldHJ5LUNvbGxlY3Rpb25KKlBvc3QtR2VvanNvbi1HZW9tZXRyeS1Db2xsZWN0aW9uUGFyYW1ldGVyc1IpUG9zdC1HZW9qc29uLUdlb21ldHJ5LUNvbGxlY3Rpb25SZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJJChpBUElUZXN0IEFQSSBkb2N1bWVudGF0aW9uLhohaHR0cDovL2FwaS5hcGl0ZXN0LmNvbS9wYXJ0eS90b3MvMggwMS4wMS4wMBocChpodHRwczovL2FwaS5hcGl0ZXN0LmNvbS92MSL4AwraAQoIL2dlb2pzb24SzQEyygESFEFkZCBhIEdlb0pzb24gT2JqZWN0Kgxwb3N0LWdlb2pzb246RApCEkAKPgoQYXBwbGljYXRpb24vanNvbhIqCigSJgokIy9jb21wb25lbnRzL3NjaGVtYXMvR2VvSnNvbkdlb21ldHJ5Ql4SRAoDMjAxEj0KOwoHQ3JlYXRlZBowCi4KEGFwcGxpY2F0aW9uL2pzb24SGgoYChbKAQZzdHJpbmeSAgpHZW9Kc29uIElEEhYKAzQwMBIPCg0KC0JhZCBSZXF1ZXN0CpgCChwvZ2VvanNvbl9nZW9tZXRyeV9jb2xsZWN0aW9uEvcBMvQBEidBZGQgYSBHZW9Kc29uIEdlb21ldHJ5Q29sbGVjdGlvbiBPYmplY3QqIHBvc3QtZ2VvanNvbi1nZW9tZXRyeS1jb2xsZWN0aW9uOkcKRRJDCkEKEGFwcGxpY2F0aW9uL2pzb24SLQorEikKJyMvY29tcG9uZW50cy9zY2hlbWFzL0dlb21ldHJ5Q29sbGVjdGlvbkJeEkQKAzIwMRI9CjsKB0NyZWF0ZWQaMAouChBhcHBsaWNhdGlvbi9qc29uEhoKGAoWygEGc3RyaW5nkgIKR2VvSnNvbiBJRBIWCgM0MDASDwoNCgtCYWQgUmVxdWVzdCrhBgreBgqxAgoPR2VvSnNvbkdlb21ldHJ5Ep0CCpoCEmwKBHR5cGUSZAojCgVQb2ludBIaIy9jb21wb25lbnRzL3NjaGVtYXMvUG9pbnQKPQoSR2VvbWV0cnlDb2xsZWN0aW9uEicjL2NvbXBvbmVudHMvc2NoZW1hcy9HZW9tZXRyeUNvbGxlY3Rpb24yNxI1aHR0cDovL2dlb2pzb24ub3JnL2dlb2pzb24tc3BlYy5odG1sI2dlb21ldHJ5LW9iamVjdHNKD0dlb0pzb25HZW9tZXRyedoBHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9Qb2ludNoBKxIpCicjL2NvbXBvbmVudHMvc2NoZW1hcy9HZW9tZXRyeUNvbGxlY3Rpb26SAhBHZW9KU09OIGdlb21ldHJ5CooCCgVQb2ludBKAAgr9ATIqEihodHRwOi8vZ2VvanNvbi5vcmcvZ2VvanNvbi1zcGVjLmh0bWwjaWQySgVQb2ludLoBBHR5cGXKAQZvYmplY3T6AaMBCoEBCgtjb29yZGluYXRlcxJyCnAyKhIoaHR0cDovL2dlb2pzb24ub3JnL2dlb2pzb24tc3BlYy5odG1sI2lkMkoHUG9pbnQzRJABA5gBAsoBBWFycmF58gEWChQKEsoBBm51bWJlcpoCBmRvdWJsZZICEVBvaW50IGluIDNEIHNwYWNlCh0KBHR5cGUSFQoTygEGc3RyaW5nigIHGgVQb2ludJICEEdlb0pTT04gZ2VvbWV0cnkKmgIKEkdlb21ldHJ5Q29sbGVjdGlvbhKDAgqAAjI5EjdodHRwOi8vZ2VvanNvbi5vcmcvZ2VvanNvbi1zcGVjLmh0bWwjZ2VvbWV0cnljb2xsZWN0aW9uShJHZW9tZXRyeUNvbGxlY3Rpb266AQR0eXBlugEKZ2VvbWV0cmllc8oBBm9iamVjdPoBcwoqCgR0eXBlEiIKIMoBBnN0cmluZ4oCFBoSR2VvbWV0cnlDb2xsZWN0aW9uCkUKCmdlb21ldHJpZXMSNwo1ygEFYXJyYXnyASoKKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9HZW9Kc29uR2VvbWV0cnmSAhtHZW9KU29uIGdlb21ldHJ5IGNvbGxlY3Rpb24=')),
);

/// From: 3_0/petstore-multiple-required-properties-has-same-oneOf-object.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_multiple_required_properties_has_same_one_of_object = (
  model: surface.Model.fromBuffer(base64Decode('CghNeSB0aXRsZRIaCgNkb2cqEwoEYXR0chIGc3RyaW5nUgNET0cSGgoDY2F0KhMKBGF0dHISBnN0cmluZ1IDQ0FUEi8KA3BldCoTCgRhdHRyEgZzdHJpbmdSA0RPRyoTCgRhdHRyEgZzdHJpbmdSA0NBVBI8Cg1wZXRQcmVmZXJlbmNlKg0KBHBldDESA3BldBgDKg0KBHBldDISA3BldBgDKg0KBHBldDMSA3BldBgDEkAKGXBvc3RQcmVmZXJlbmNlUmVxdWVzdEJvZHkqIwoQYXBwbGljYXRpb24vanNvbhINcGV0UHJlZmVyZW5jZRgDEoQBChhQb3N0UHJlZmVyZW5jZVBhcmFtZXRlcnMaO1Bvc3RQcmVmZXJlbmNlUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFBvc3RQcmVmZXJlbmNlKisKDHJlcXVlc3RfYm9keRIZcG9zdFByZWZlcmVuY2VSZXF1ZXN0Qm9keRgDGlEKDnBvc3RQcmVmZXJlbmNlEg8vcGV0X3ByZWZlcmVuY2UaBFBPU1QqDlBvc3RQcmVmZXJlbmNlShhQb3N0UHJlZmVyZW5jZVBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIhCghNeSB0aXRsZRIOQVBJIHVuZGVyIHRlc3QyBTEuMC43Gh0KG2h0dHBzOi8vbG9jYWxob3N0Ojk5OTkvcm9vdCKBAQp/Cg8vcGV0X3ByZWZlcmVuY2USbDJqCgNwZXQqDnBvc3RQcmVmZXJlbmNlOkIKQBI+CjwKEGFwcGxpY2F0aW9uL2pzb24SKAomEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL3BldFByZWZlcmVuY2VCDxINCgMyMDESBgoECgJPSyq+Awq7Awo6CgNkb2cSMwoxugEEYXR0csoBBm9iamVjdPoBHgocCgRhdHRyEhQKEsIBBhIERE9HCsoBBnN0cmluZwo6CgNjYXQSMwoxugEEYXR0csoBBm9iamVjdPoBHgocCgRhdHRyEhQKEsIBBhIEQ0FUCsoBBnN0cmluZwqVAQoDcGV0Eo0BCooBEkoKBGF0dHISQgofCgNET0cSGCMvY29tcG9uZW50cy9zY2hlbWFzL2RvZwofCgNDQVQSGCMvY29tcG9uZW50cy9zY2hlbWFzL2NhdNoBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9kb2faARwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvY2F0CqgBCg1wZXRQcmVmZXJlbmNlEpYBCpMBugEEcGV0MboBBHBldDK6AQRwZXQzygEGb2JqZWN0+gFyCiQKBHBldDESHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9wZXQKJAoEcGV0MhIcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL3BldAokCgRwZXQzEhwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvcGV0')),
);

/// From: 3_0/property-readonly.yaml
final OpenApiProto<v3.Document> fixtures_3_0_property_readonly = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEjYKB1JlcXVlc3QqFgoMY3VzdG9tZXJDb2RlEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcSNwoIUmVzcG9uc2UqFgoMY3VzdG9tZXJDb2RlEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcSLAoLUmVxdWVzdEJvZHkqHQoQYXBwbGljYXRpb24vanNvbhIHUmVxdWVzdBgDEmcKE1BPU1RfdGVzdFBhcmFtZXRlcnMaMVBPU1RfdGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX3Rlc3QqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDEmkKElBPU1RfdGVzdFJlc3BvbnNlcxovUE9TVF90ZXN0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBQT1NUX3Rlc3QqIgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCFJlc3BvbnNlGAMaQRIFL3Rlc3QaBFBPU1QqCVBPU1RfdGVzdEoTUE9TVF90ZXN0UGFyYW1ldGVyc1ISUE9TVF90ZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSKhAQqeAQoFL3Rlc3QSlAEykQE6PAo6EjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvUmVxdWVzdEJREk8KAzIwMBJICkYKCXJlc3BvbnNlcxo5CjcKEGFwcGxpY2F0aW9uL2pzb24SIwohEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL1Jlc3BvbnNlKtQBCtEBCmcKB1JlcXVlc3QSXApaygEGb2JqZWN0+gFOCigKDGN1c3RvbWVyQ29kZRIYChYYAToJEgciMDAwMSIKygEGc3RyaW5nCiIKCWZpcnN0TmFtZRIVChM6CBIGZmlyc3QKygEGc3RyaW5nCmYKCFJlc3BvbnNlEloKWMoBBm9iamVjdPoBTAomCgxjdXN0b21lckNvZGUSFgoUOgkSByIwMDAxIgrKAQZzdHJpbmcKIgoJZmlyc3ROYW1lEhUKEzoIEgZmaXJzdArKAQZzdHJpbmc=')),
);

/// From: 3_0/allOf_no_fields.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_no_fields = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEiAKCUJhc2VDbGFzcyoTCglteURpc2NyaW0SBnN0cmluZxItChZDaGlsZFdpdGhvdXRQcm9wZXJ0aWVzKhMKCW15RGlzY3JpbRIGc3RyaW5nEkMKE0NoaWxkV2l0aFByb3BlcnRpZXMqFwoNY2hpbGRQcm9wZXJ0eRIGc3RyaW5nKhMKCW15RGlzY3JpbRIGc3RyaW5nEmQKEER1bW15aWRSZXNwb25zZXMaK0R1bW15aWRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIER1bW15aWQqIwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCUJhc2VDbGFzcxgDGjMKB2R1bW15aWQSCC9leGFtcGxlGgNHRVQqB0R1bW15aWRSEER1bW15aWRSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJmCmQKCC9leGFtcGxlElgiVioHZHVtbXlpZEJLEkkKAzIwMBJCCkAKAk9LGjoKOAoQYXBwbGljYXRpb24vanNvbhIkCiISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvQmFzZUNsYXNzKoUDCoIDCrsBCglCYXNlQ2xhc3MSrQEKqgESgQEKCW15RGlzY3JpbRJ0CjUKCVdJVEhQUk9QUxIoIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGRXaXRoUHJvcGVydGllcwo7CgxXSVRIT1VUUFJPUFMSKyMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkV2l0aG91dFByb3BlcnRpZXPKAQZvYmplY3T6ARoKGAoJbXlEaXNjcmltEgsKCcoBBnN0cmluZwpKChZDaGlsZFdpdGhvdXRQcm9wZXJ0aWVzEjAKLsoBBm9iamVjdNIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9CYXNlQ2xhc3MKdgoTQ2hpbGRXaXRoUHJvcGVydGllcxJfCl3KAQZvYmplY3TSASwKKsoBBm9iamVjdPoBHgocCg1jaGlsZFByb3BlcnR5EgsKCcoBBnN0cmluZ9IBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9CYXNlQ2xhc3M=')),
);

/// From: 3_0/test_regex.yaml
final OpenApiProto<v3.Document> fixtures_3_0_test_regex = (
  model: surface.Model.fromBuffer(base64Decode('Ci5UZXN0IFJlZ2V4IGdlbmVyYXRpb24gZm9yIHBhcmFtZXRlciB2YWxpZGF0aW9uErkBChJHRVRfcGluZ1BhcmFtZXRlcnMaL0dFVF9waW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF9waW5nKiYKGnBhdHRlcm5fbm9fZm9yd2FyZF9zbGFzaGVzEgZzdHJpbmcoASofChNwYXR0ZXJuX3R3b19zbGFzaGVzEgZzdHJpbmcoASopCh1wYXR0ZXJuX2RvbnRfZXNjYXBlX2JhY2tzbGFzaBIGc3RyaW5nKAESTgoRR0VUX3BpbmdSZXNwb25zZXMaLUdFVF9waW5nUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfcGluZyoKEgZPS18yMDAYAxpmEgUvcGluZxoDR0VUIidSZXR1cm5zIHRoZSBjb250ZW50IG9mIGEgcGF5bWVudCBvYmplY3QqCEdFVF9waW5nShJHRVRfcGluZ1BhcmFtZXRlcnNSEUdFVF9waW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRI3Ci5UZXN0IFJlZ2V4IGdlbmVyYXRpb24gZm9yIHBhcmFtZXRlciB2YWxpZGF0aW9uMgUxLjAuMCLIAgrFAgoFL3BpbmcSuwIiuAISF0dldCBQYXltZW50IEluZm9ybWF0aW9uGidSZXR1cm5zIHRoZSBjb250ZW50IG9mIGEgcGF5bWVudCBvYmplY3QyPwo9ChpwYXR0ZXJuX25vX2ZvcndhcmRfc2xhc2hlcxIGaGVhZGVyUhcKFYoBCV5wYXR0ZXJuJMoBBnN0cmluZzI7CjkKE3BhdHRlcm5fdHdvX3NsYXNoZXMSBmhlYWRlclIaChiKAQwvXnBhdHRlcm4kL2nKAQZzdHJpbmcySgpICh1wYXR0ZXJuX2RvbnRfZXNjYXBlX2JhY2tzbGFzaBIGaGVhZGVyUh8KHYoBES9ecGF0dGVyblxkezN9JC9pygEGc3RyaW5nQioSKAoDMjAwEiESHwodIy9jb21wb25lbnRzL3Jlc3BvbnNlcy9PS18yMDAqFhISChAKBk9LXzIwMBIGCgQKAk9LMgA=')),
);

/// From: 3_0/petstore-addpet-only.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_addpet_only = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEjAKCENhdGVnb3J5KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSKwoDVGFnKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSlQEKA1BldCoUCgJpZBIHaW50ZWdlciIFaW50NjQqFgoIY2F0ZWdvcnkSCENhdGVnb3J5GAMqDgoEbmFtZRIGc3RyaW5nKhUKCXBob3RvVXJscxIGc3RyaW5nGAIqDQoEdGFncxIDVGFnGAIqKgoGc3RhdHVzEgZzdHJpbmdSCWF2YWlsYWJsZVIHcGVuZGluZ1IEc29sZBI6CgNQZXQqGQoQYXBwbGljYXRpb24vanNvbhIDUGV0GAMqGAoPYXBwbGljYXRpb24veG1sEgNQZXQYAxJWChBBZGRQZXRQYXJhbWV0ZXJzGitBZGRQZXRQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQWRkUGV0KhUKDHJlcXVlc3RfYm9keRIDUGV0GAMSeQoPQWRkUGV0UmVzcG9uc2VzGilBZGRQZXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEFkZFBldCocChMyMDAgYXBwbGljYXRpb24veG1sEgNQZXQYAyodChQyMDAgYXBwbGljYXRpb24vanNvbhIDUGV0GAMaPwoGYWRkUGV0EgQvcGV0GgRQT1NUKgZBZGRQZXRKEEFkZFBldFBhcmFtZXRlcnNSD0FkZFBldFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBLeAQoQT3BlbkFQSSBQZXRzdG9yZRKCAVRoaXMgaXMgYSBzYW1wbGUgc2VydmVyIFBldHN0b3JlIHNlcnZlci4gRm9yIHRoaXMgc2FtcGxlLCB5b3UgY2FuIHVzZSB0aGUgYXBpIGtleSBgc3BlY2lhbC1rZXlgIHRvIHRlc3QgdGhlIGF1dGhvcml6YXRpb24gZmlsdGVycy4qPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMBofCh1odHRwOi8vcGV0c3RvcmUuc3dhZ2dlci5pby92MiKxAgquAgoEL3BldBKlAjKiAgoDcGV0EhpBZGQgYSBuZXcgcGV0IHRvIHRoZSBzdG9yZSoGYWRkUGV0OiISIAoeIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvUGV0QqYBEokBCgMyMDASgQEKfwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aZwoxCg9hcHBsaWNhdGlvbi94bWwSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQSGAoDNDA1EhEKDwoNSW52YWxpZCBpbnB1dFoqCigKDXBldHN0b3JlX2F1dGgSFwoKd3JpdGU6cGV0cwoJcmVhZDpwZXRzKv0HCrAFCqwBCghDYXRlZ29yeRKfAQqcASoKCghDYXRlZ29yeUoMUGV0IGNhdGVnb3J5ygEGb2JqZWN0+gFfChoKAmlkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NApBCgRuYW1lEjkKN4oBK15bYS16QS1aMC05XStbYS16QS1aMC05XC5cLV9dKlthLXpBLVowLTldKyTKAQZzdHJpbmeSAhRBIGNhdGVnb3J5IGZvciBhIHBldApoCgNUYWcSYQpfKgUKA1RhZ0oHUGV0IFRhZ8oBBm9iamVjdPoBMQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKEwoEbmFtZRILCgnKAQZzdHJpbmeSAg9BIHRhZyBmb3IgYSBwZXQKlAMKA1BldBKMAwqJAyoFCgNQZXRKBWEgUGV0ugEEbmFtZboBCXBob3RvVXJsc8oBBm9iamVjdPoBuQIKGgoCaWQSFAoSygEHaW50ZWdlcpoCBWludDY0Ci0KCGNhdGVnb3J5EiESHwodIy9jb21wb25lbnRzL3NjaGVtYXMvQ2F0ZWdvcnkKHgoEbmFtZRIWChQ6CRIHZG9nZ2llCsoBBnN0cmluZwo1CglwaG90b1VybHMSKAomKgwKCHBob3RvVXJsKAHKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKPAoEdGFncxI0CjIqBwoDdGFnKAHKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1RhZwpXCgZzdGF0dXMSTQpLQAHCAQwSCmF2YWlsYWJsZQrCAQoSCHBlbmRpbmcKwgEHEgVzb2xkCsoBBnN0cmluZ5ICF3BldCBzdGF0dXMgaW4gdGhlIHN0b3JlkgIfQSBwZXQgZm9yIHNhbGUgaW4gdGhlIHBldCBzdG9yZSqpAQqmAQoDUGV0Ep4BCpsBCi5QZXQgb2JqZWN0IHRoYXQgbmVlZHMgdG8gYmUgYWRkZWQgdG8gdGhlIHN0b3JlEmcKMgoQYXBwbGljYXRpb24vanNvbhIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0CjEKD2FwcGxpY2F0aW9uL3htbBIeChwSGgoYIy9jb21wb25lbnRzL3NjaGVtYXMvUGV0GAE6mwEKmAEKDXBldHN0b3JlX2F1dGgShgEKgwEKBm9hdXRoMjp5CncKK2h0dHA6Ly9wZXRzdG9yZS5zd2FnZ2VyLmlvL2FwaS9vYXV0aC9kaWFsb2ciSAopCgp3cml0ZTpwZXRzEhttb2RpZnkgcGV0cyBpbiB5b3VyIGFjY291bnQKGwoJcmVhZDpwZXRzEg5yZWFkIHlvdXIgcGV0czohCgNwZXQSGkV2ZXJ5dGhpbmcgYWJvdXQgeW91ciBQZXRzQjAKG0ZpbmQgb3V0IG1vcmUgYWJvdXQgU3dhZ2dlchIRaHR0cDovL3N3YWdnZXIuaW8=')),
);

/// From: 3_0/name-parameter-mappings.yaml
final OpenApiProto<v3.Document> fixtures_3_0_name_parameter_mappings = (
  model: surface.Model.fromBuffer(base64Decode('CgVEdW1teRIeCgtFbnZpcm9ubWVudCoPCgVkdW1teRIGc3RyaW5nEmcKE1Byb3BlcnR5TmFtZU1hcHBpbmcqHgoUaHR0cF9kZWJ1Z19vcGVyYXRpb24SBnN0cmluZyoPCgVfdHlwZRIGc3RyaW5nKg4KBHR5cGUSBnN0cmluZyoPCgV0eXBlXxIGc3RyaW5nEtEBCiFHZXRQYXJhbWV0ZXJOYW1lTWFwcGluZ1BhcmFtZXRlcnMaTUdldFBhcmFtZXRlck5hbWVNYXBwaW5nUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldFBhcmFtZXRlck5hbWVNYXBwaW5nKhkKBV90eXBlEgdpbnRlZ2VyIgVpbnQ2NCgBKhAKBHR5cGUSBnN0cmluZygDKhEKBXR5cGVfEgZzdHJpbmcoASodChFodHRwX2RlYnVnX29wdGlvbhIGc3RyaW5nKAMSlgEKIEdldFBhcmFtZXRlck5hbWVNYXBwaW5nUmVzcG9uc2VzGktHZXRQYXJhbWV0ZXJOYW1lTWFwcGluZ1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0UGFyYW1ldGVyTmFtZU1hcHBpbmcqJQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SC0Vudmlyb25tZW50GAMamgEKF2dldFBhcmFtZXRlck5hbWVNYXBwaW5nEhwvZmFrZS9wYXJhbWV0ZXItbmFtZS1tYXBwaW5nGgNHRVQqF0dldFBhcmFtZXRlck5hbWVNYXBwaW5nSiFHZXRQYXJhbWV0ZXJOYW1lTWFwcGluZ1BhcmFtZXRlcnNSIEdldFBhcmFtZXRlck5hbWVNYXBwaW5nUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBJ3CgVEdW1teRInVG8gdGVzdCBuYW1lLCBwYXJhbWV0ZXIgbWFwcGluZyBvcHRpb25zKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAilQMKkgMKHC9mYWtlL3BhcmFtZXRlci1uYW1lLW1hcHBpbmcS8QIi7gIKBGZha2USG3BhcmFtZXRlciBuYW1lIG1hcHBpbmcgdGVzdCoXZ2V0UGFyYW1ldGVyTmFtZU1hcHBpbmcyMAouCgVfdHlwZRIGaGVhZGVyGgVfdHlwZSABUhQKEsoBB2ludGVnZXKaAgVpbnQ2NDIkCiIKBHR5cGUSBXF1ZXJ5GgR0eXBlIAFSCwoJygEGc3RyaW5nMicKJQoFdHlwZV8SBmhlYWRlchoFdHlwZV8gAVILCgnKAQZzdHJpbmcyYApeChFodHRwX2RlYnVnX29wdGlvbhIFcXVlcnkaM2h0dHAgZGVidWcgb3B0aW9uICh0byB0ZXN0IHBhcmFtZXRlciBuYW1pbmcgb3B0aW9uKSABUgsKCcoBBnN0cmluZ0JNEksKAzIwMBJECkIKAk9LGjwKOgoQYXBwbGljYXRpb24vanNvbhImCiQSIgogIy9jb21wb25lbnRzL3NjaGVtYXMvRW52aXJvbm1lbnQqtAEKsQEKKgoLRW52aXJvbm1lbnQSGwoZ+gEWChQKBWR1bW15EgsKCcoBBnN0cmluZwqCAQoTUHJvcGVydHlOYW1lTWFwcGluZxJrCmn6AWYKIwoUaHR0cF9kZWJ1Z19vcGVyYXRpb24SCwoJygEGc3RyaW5nChQKBV90eXBlEgsKCcoBBnN0cmluZwoTCgR0eXBlEgsKCcoBBnN0cmluZwoUCgV0eXBlXxILCgnKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_15923.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_15923 = (
  model: surface.Model.fromBuffer(base64Decode('CgNCdWcSHAoKVGVzdEVudGl0eSoOCgRuYW1lEgZzdHJpbmcScgoPdGVzdFJlcXVlc3RCb2R5KiAKEGFwcGxpY2F0aW9uL2pzb24SClRlc3RFbnRpdHkYAyoZCgl0ZXh0L2pzb24SClRlc3RFbnRpdHkYAyoiChJhcHBsaWNhdGlvbi8qK2pzb24SClRlc3RFbnRpdHkYAxJcCg5UZXN0UGFyYW1ldGVycxonVGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBUZXN0KiEKDHJlcXVlc3RfYm9keRIPdGVzdFJlcXVlc3RCb2R5GAMSmwEKDVRlc3RSZXNwb25zZXMaJVRlc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIFRlc3QqHgoOMjAwIHRleHQvcGxhaW4SClRlc3RFbnRpdHkYAyokChQyMDAgYXBwbGljYXRpb24vanNvbhIKVGVzdEVudGl0eRgDKh0KDTIwMCB0ZXh0L2pzb24SClRlc3RFbnRpdHkYAxo/CgR0ZXN0Eg0vdjEvTXlSZXF1ZXN0GgNQVVQqBFRlc3RKDlRlc3RQYXJhbWV0ZXJzUg1UZXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRISCgNCdWcSB1dlYiBBUEkyAnYxIrADCq0DCg0vdjEvTXlSZXF1ZXN0EpsDKpgDCglNeVJlcXVlc3QSD1VwZGF0ZSB0aGUgdGVzdCoEdGVzdDqyAQqvARKsAQo5ChBhcHBsaWNhdGlvbi9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0RW50aXR5CjIKCXRleHQvanNvbhIlCiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvVGVzdEVudGl0eQo7ChJhcHBsaWNhdGlvbi8qK2pzb24SJQojEiEKHyMvY29tcG9uZW50cy9zY2hlbWFzL1Rlc3RFbnRpdHlCvgESuwEKAzIwMBKzAQqwAQoHU3VjY2VzcxqkAQozCgp0ZXh0L3BsYWluEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0RW50aXR5CjkKEGFwcGxpY2F0aW9uL2pzb24SJQojEiEKHyMvY29tcG9uZW50cy9zY2hlbWFzL1Rlc3RFbnRpdHkKMgoJdGV4dC9qc29uEiUKIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9UZXN0RW50aXR5KjwKOgo4CgpUZXN0RW50aXR5EioKKMoBBm9iamVjdPoBFwoVCgRuYW1lEg0KCwgBygEGc3RyaW5nggICEAA=')),
);

/// From: 3_0/issue_10330.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_10330 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEh8KDkNvbXBvc2VkT2JqZWN0EAEiC2ludGVyZmFjZXt9Eh4KDUNvbXBvc2VkQXJyYXkQASILaW50ZXJmYWNle30SIAoPQ29tcG9zZWRBbnlUeXBlEAEiC2ludGVyZmFjZXt9EokCChxPYmplY3RXaXRoQ29tcG9zZWRQcm9wZXJ0aWVzKiIKDkNvbXBvc2VkT2JqZWN0Eg5Db21wb3NlZE9iamVjdBgDKhgKDkNvbXBvc2VkTnVtYmVyEgZudW1iZXIqGgoPQ29tcG9zZWRJbnRlZ2VyEgdpbnRlZ2VyKhgKDkNvbXBvc2VkU3RyaW5nEgZzdHJpbmcqFwoMQ29tcG9zZWRCb29sEgdib29sZWFuKiAKDUNvbXBvc2VkQXJyYXkSDUNvbXBvc2VkQXJyYXkYAioUCgxDb21wb3NlZE5vbmUSBG51bGwqJAoPQ29tcG9zZWRBbnlUeXBlEg9Db21wb3NlZEFueVR5cGUYAxIhCg5Db21wb3NlZE51bWJlcioPCgV2YWx1ZRIGbnVtYmVyEiMKD0NvbXBvc2VkSW50ZWdlcioQCgV2YWx1ZRIHaW50ZWdlchIhCg5Db21wb3NlZFN0cmluZyoPCgV2YWx1ZRIGc3RyaW5nEiAKDENvbXBvc2VkQm9vbCoQCgV2YWx1ZRIHYm9vbGVhbhIdCgxDb21wb3NlZE5vbmUqDQoFdmFsdWUSBG51bGwSLAobUmVxdWVzdEJvZHlhcHBsaWNhdGlvbi9qc29uEAEiC2ludGVyZmFjZXt9EkAKC1JlcXVlc3RCb2R5KjEKEGFwcGxpY2F0aW9uL2pzb24SG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDEqgBChxHRVRfQ29tcG9zZWRPYmplY3RQYXJhbWV0ZXJzGkNHRVRfQ29tcG9zZWRPYmplY3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX0NvbXBvc2VkT2JqZWN0KiQKDkNvbXBvc2VkT2JqZWN0Eg5Db21wb3NlZE9iamVjdBgDKAMqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDEiUKFDIwMCBhcHBsaWNhdGlvbi9qc29uEAEiC2ludGVyZmFjZXt9EpABChtHRVRfQ29tcG9zZWRPYmplY3RSZXNwb25zZXMaQUdFVF9Db21wb3NlZE9iamVjdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX0NvbXBvc2VkT2JqZWN0Ki4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEhQyMDAgYXBwbGljYXRpb24vanNvbhgDEikKC1JlcXVlc3RCb2R5KhoKEGFwcGxpY2F0aW9uL2pzb24SBm51bWJlchKeAQocR0VUX0NvbXBvc2VkTnVtYmVyUGFyYW1ldGVycxpDR0VUX0NvbXBvc2VkTnVtYmVyUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF9Db21wb3NlZE51bWJlcioaCg5Db21wb3NlZE51bWJlchIGbnVtYmVyKAMqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDEoABChtHRVRfQ29tcG9zZWROdW1iZXJSZXNwb25zZXMaQUdFVF9Db21wb3NlZE51bWJlclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR0VUX0NvbXBvc2VkTnVtYmVyKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZudW1iZXISKgoLUmVxdWVzdEJvZHkqGwoQYXBwbGljYXRpb24vanNvbhIHaW50ZWdlchKjAQodR0VUX0NvbXBvc2VkSW50ZWdlclBhcmFtZXRlcnMaRUdFVF9Db21wb3NlZEludGVnZXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX0NvbXBvc2VkSW50ZWdlciocCg9Db21wb3NlZEludGVnZXISB2ludGVnZXIoAyodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMShAEKHEdFVF9Db21wb3NlZEludGVnZXJSZXNwb25zZXMaQ0dFVF9Db21wb3NlZEludGVnZXJSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9Db21wb3NlZEludGVnZXIqHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SB2ludGVnZXISKQoLUmVxdWVzdEJvZHkqGgoQYXBwbGljYXRpb24vanNvbhIGc3RyaW5nEp4BChxHRVRfQ29tcG9zZWRTdHJpbmdQYXJhbWV0ZXJzGkNHRVRfQ29tcG9zZWRTdHJpbmdQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gR0VUX0NvbXBvc2VkU3RyaW5nKhoKDkNvbXBvc2VkU3RyaW5nEgZzdHJpbmcoAyodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMSgAEKG0dFVF9Db21wb3NlZFN0cmluZ1Jlc3BvbnNlcxpBR0VUX0NvbXBvc2VkU3RyaW5nUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfQ29tcG9zZWRTdHJpbmcqHgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBnN0cmluZxIqCgtSZXF1ZXN0Qm9keSobChBhcHBsaWNhdGlvbi9qc29uEgdib29sZWFuEpcBChpHRVRfQ29tcG9zZWRCb29sUGFyYW1ldGVycxo/R0VUX0NvbXBvc2VkQm9vbFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfQ29tcG9zZWRCb29sKhkKDENvbXBvc2VkQm9vbBIHYm9vbGVhbigDKh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxJ7ChlHRVRfQ29tcG9zZWRCb29sUmVzcG9uc2VzGj1HRVRfQ29tcG9zZWRCb29sUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfQ29tcG9zZWRCb29sKh8KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgdib29sZWFuEkAKC1JlcXVlc3RCb2R5KjEKEGFwcGxpY2F0aW9uL2pzb24SG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgCEqMBChtHRVRfQ29tcG9zZWRBcnJheVBhcmFtZXRlcnMaQUdFVF9Db21wb3NlZEFycmF5UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdFVF9Db21wb3NlZEFycmF5KiIKDUNvbXBvc2VkQXJyYXkSDUNvbXBvc2VkQXJyYXkYAigDKh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxKNAQoaR0VUX0NvbXBvc2VkQXJyYXlSZXNwb25zZXMaP0dFVF9Db21wb3NlZEFycmF5UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfQ29tcG9zZWRBcnJheSouChQyMDAgYXBwbGljYXRpb24vanNvbhIUMjAwIGFwcGxpY2F0aW9uL2pzb24YAhInCgtSZXF1ZXN0Qm9keSoYChBhcHBsaWNhdGlvbi9qc29uEgRudWxsEpQBChpHRVRfQ29tcG9zZWROb25lUGFyYW1ldGVycxo/R0VUX0NvbXBvc2VkTm9uZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfQ29tcG9zZWROb25lKhYKDENvbXBvc2VkTm9uZRIEbnVsbCgDKh0KDHJlcXVlc3RfYm9keRILUmVxdWVzdEJvZHkYAxJ4ChlHRVRfQ29tcG9zZWROb25lUmVzcG9uc2VzGj1HRVRfQ29tcG9zZWROb25lUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHRVRfQ29tcG9zZWROb25lKhwKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgRudWxsEkAKC1JlcXVlc3RCb2R5KjEKEGFwcGxpY2F0aW9uL2pzb24SG1JlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDEq0BCh1HRVRfQ29tcG9zZWRBbnlUeXBlUGFyYW1ldGVycxpFR0VUX0NvbXBvc2VkQW55VHlwZVBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBHRVRfQ29tcG9zZWRBbnlUeXBlKiYKD0NvbXBvc2VkQW55VHlwZRIPQ29tcG9zZWRBbnlUeXBlGAMoAyodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMSkwEKHEdFVF9Db21wb3NlZEFueVR5cGVSZXNwb25zZXMaQ0dFVF9Db21wb3NlZEFueVR5cGVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF9Db21wb3NlZEFueVR5cGUqLgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SFDIwMCBhcHBsaWNhdGlvbi9qc29uGAMaZRIPL0NvbXBvc2VkT2JqZWN0GgNHRVQqEkdFVF9Db21wb3NlZE9iamVjdEocR0VUX0NvbXBvc2VkT2JqZWN0UGFyYW1ldGVyc1IbR0VUX0NvbXBvc2VkT2JqZWN0UmVzcG9uc2VzGmUSDy9Db21wb3NlZE51bWJlchoDR0VUKhJHRVRfQ29tcG9zZWROdW1iZXJKHEdFVF9Db21wb3NlZE51bWJlclBhcmFtZXRlcnNSG0dFVF9Db21wb3NlZE51bWJlclJlc3BvbnNlcxppEhAvQ29tcG9zZWRJbnRlZ2VyGgNHRVQqE0dFVF9Db21wb3NlZEludGVnZXJKHUdFVF9Db21wb3NlZEludGVnZXJQYXJhbWV0ZXJzUhxHRVRfQ29tcG9zZWRJbnRlZ2VyUmVzcG9uc2VzGmUSDy9Db21wb3NlZFN0cmluZxoDR0VUKhJHRVRfQ29tcG9zZWRTdHJpbmdKHEdFVF9Db21wb3NlZFN0cmluZ1BhcmFtZXRlcnNSG0dFVF9Db21wb3NlZFN0cmluZ1Jlc3BvbnNlcxpdEg0vQ29tcG9zZWRCb29sGgNHRVQqEEdFVF9Db21wb3NlZEJvb2xKGkdFVF9Db21wb3NlZEJvb2xQYXJhbWV0ZXJzUhlHRVRfQ29tcG9zZWRCb29sUmVzcG9uc2VzGmESDi9Db21wb3NlZEFycmF5GgNHRVQqEUdFVF9Db21wb3NlZEFycmF5ShtHRVRfQ29tcG9zZWRBcnJheVBhcmFtZXRlcnNSGkdFVF9Db21wb3NlZEFycmF5UmVzcG9uc2VzGl0SDS9Db21wb3NlZE5vbmUaA0dFVCoQR0VUX0NvbXBvc2VkTm9uZUoaR0VUX0NvbXBvc2VkTm9uZVBhcmFtZXRlcnNSGUdFVF9Db21wb3NlZE5vbmVSZXNwb25zZXMaaRIQL0NvbXBvc2VkQW55VHlwZRoDR0VUKhNHRVRfQ29tcG9zZWRBbnlUeXBlSh1HRVRfQ29tcG9zZWRBbnlUeXBlUGFyYW1ldGVyc1IcR0VUX0NvbXBvc2VkQW55VHlwZVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJ6ChBPcGVuQVBJIFBldHN0b3JlEh9jb21wb3NlZCBzY2hlbWEgaXNYIHR5cGUgY2hlY2tzKj4KCkFwYWNoZS0yLjASMGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuaHRtbDIFMS4wLjAaIgogaHR0cDovL3BldHN0b3JlLnN3YWdnZXIuaW86ODAvdjIi3gsKuwEKDy9Db21wb3NlZE9iamVjdBKnASKkATIrCikKDkNvbXBvc2VkT2JqZWN0EgVxdWVyeVIQCg7KAQZvYmplY3TSAQIKADouCiwSKAomChBhcHBsaWNhdGlvbi9qc29uEhIKEAoOygEGb2JqZWN00gECCgAYAUJFEkMKAzIwMBI8CjoKDkNvbXBvc2VkT2JqZWN0GigKJgoQYXBwbGljYXRpb24vanNvbhISChAKDsoBBm9iamVjdNIBAgoACrsBCg8vQ29tcG9zZWROdW1iZXISpwEipAEyKwopCg5Db21wb3NlZE51bWJlchIFcXVlcnlSEAoOygEGbnVtYmVy0gECCgA6LgosEigKJgoQYXBwbGljYXRpb24vanNvbhISChAKDsoBBm51bWJlctIBAgoAGAFCRRJDCgMyMDASPAo6Cg5Db21wb3NlZE51bWJlchooCiYKEGFwcGxpY2F0aW9uL2pzb24SEgoQCg7KAQZudW1iZXLSAQIKAArBAQoQL0NvbXBvc2VkSW50ZWdlchKsASKpATItCisKD0NvbXBvc2VkSW50ZWdlchIFcXVlcnlSEQoPygEHaW50ZWdlctIBAgoAOi8KLRIpCicKEGFwcGxpY2F0aW9uL2pzb24SEwoRCg/KAQdpbnRlZ2Vy0gECCgAYAUJHEkUKAzIwMBI+CjwKD0NvbXBvc2VkSW50ZWdlchopCicKEGFwcGxpY2F0aW9uL2pzb24SEwoRCg/KAQdpbnRlZ2Vy0gECCgAKuwEKDy9Db21wb3NlZFN0cmluZxKnASKkATIrCikKDkNvbXBvc2VkU3RyaW5nEgVxdWVyeVIQCg7KAQZzdHJpbmfSAQIKADouCiwSKAomChBhcHBsaWNhdGlvbi9qc29uEhIKEAoOygEGc3RyaW5n0gECCgAYAUJFEkMKAzIwMBI8CjoKDkNvbXBvc2VkU3RyaW5nGigKJgoQYXBwbGljYXRpb24vanNvbhISChAKDsoBBnN0cmluZ9IBAgoACrgBCg0vQ29tcG9zZWRCb29sEqYBIqMBMioKKAoMQ29tcG9zZWRCb29sEgVxdWVyeVIRCg/KAQdib29sZWFu0gECCgA6LwotEikKJwoQYXBwbGljYXRpb24vanNvbhITChEKD8oBB2Jvb2xlYW7SAQIKABgBQkQSQgoDMjAwEjsKOQoMQ29tcG9zZWRCb29sGikKJwoQYXBwbGljYXRpb24vanNvbhITChEKD8oBB2Jvb2xlYW7SAQIKAArKAQoOL0NvbXBvc2VkQXJyYXkStwEitAEyMAouCg1Db21wb3NlZEFycmF5EgVxdWVyeVIWChTKAQVhcnJhedIBAgoA8gEECgIKADo0CjISLgosChBhcHBsaWNhdGlvbi9qc29uEhgKFgoUygEFYXJyYXnSAQIKAPIBBAoCCgAYAUJKEkgKAzIwMBJBCj8KDUNvbXBvc2VkQXJyYXkaLgosChBhcHBsaWNhdGlvbi9qc29uEhgKFgoUygEFYXJyYXnSAQIKAPIBBAoCCgAKrwEKDS9Db21wb3NlZE5vbmUSnQEimgEyJwolCgxDb21wb3NlZE5vbmUSBXF1ZXJ5Ug4KDMoBBG51bGzSAQIKADosCioSJgokChBhcHBsaWNhdGlvbi9qc29uEhAKDgoMygEEbnVsbNIBAgoAGAFCQRI/CgMyMDASOAo2CgxDb21wb3NlZE5vbmUaJgokChBhcHBsaWNhdGlvbi9qc29uEhAKDgoMygEEbnVsbNIBAgoACqMBChAvQ29tcG9zZWRBbnlUeXBlEo4BIosBMiMKIQoPQ29tcG9zZWRBbnlUeXBlEgVxdWVyeVIHCgXSAQIKADolCiMSHwodChBhcHBsaWNhdGlvbi9qc29uEgkKBwoF0gECCgAYAUI9EjsKAzIwMBI0CjIKD0NvbXBvc2VkQW55VHlwZRofCh0KEGFwcGxpY2F0aW9uL2pzb24SCQoHCgXSAQIKACrrBAroBArLAgocT2JqZWN0V2l0aENvbXBvc2VkUHJvcGVydGllcxKqAgqnAsoBBm9iamVjdPoBmgIKIgoOQ29tcG9zZWRPYmplY3QSEAoOygEGb2JqZWN00gECCgAKIgoOQ29tcG9zZWROdW1iZXISEAoOygEGbnVtYmVy0gECCgAKJAoPQ29tcG9zZWRJbnRlZ2VyEhEKD8oBB2ludGVnZXLSAQIKAAoiCg5Db21wb3NlZFN0cmluZxIQCg7KAQZzdHJpbmfSAQIKAAohCgxDb21wb3NlZEJvb2wSEQoPygEHYm9vbGVhbtIBAgoACicKDUNvbXBvc2VkQXJyYXkSFgoUygEFYXJyYXnSAQIKAPIBBAoCCgAKHgoMQ29tcG9zZWROb25lEg4KDMoBBG51bGzSAQIKAAoaCg9Db21wb3NlZEFueVR5cGUSBwoF0gECCgAKIgoOQ29tcG9zZWRPYmplY3QSEAoOygEGb2JqZWN00gECCgAKIgoOQ29tcG9zZWROdW1iZXISEAoOygEGbnVtYmVy0gECCgAKJAoPQ29tcG9zZWRJbnRlZ2VyEhEKD8oBB2ludGVnZXLSAQIKAAoiCg5Db21wb3NlZFN0cmluZxIQCg7KAQZzdHJpbmfSAQIKAAohCgxDb21wb3NlZEJvb2wSEQoPygEHYm9vbGVhbtIBAgoACicKDUNvbXBvc2VkQXJyYXkSFgoUygEFYXJyYXnSAQIKAPIBBAoCCgAKHgoMQ29tcG9zZWROb25lEg4KDMoBBG51bGzSAQIKAAoaCg9Db21wb3NlZEFueVR5cGUSBwoF0gECCgA=')),
);

/// From: 3_0/external-refs/echo_api.yaml
final OpenApiProto<v3.Document> fixtures_3_0_external_refs_echo_api = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/deepobject.yaml
final OpenApiProto<v3.Document> fixtures_3_0_deepobject = (
  model: surface.Model.fromBuffer(base64Decode('Cg9kZWVwb2JqZWN0LXRlc3QSSAoHT3B0aW9ucyoWCgFhEgZzdHJpbmciCWRhdGUtdGltZSoWCgFiEgZzdHJpbmciCWRhdGUtdGltZSoNCgFjEgZzdHJpbmcYAhIwCghDYXRlZ29yeSoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEisKA1RhZyoUCgJpZBIHaW50ZWdlciIFaW50NjQqDgoEbmFtZRIGc3RyaW5nEpUBCgNQZXQqFAoCaWQSB2ludGVnZXIiBWludDY0Kg4KBG5hbWUSBnN0cmluZyoWCghjYXRlZ29yeRIIQ2F0ZWdvcnkYAyoVCglwaG90b1VybHMSBnN0cmluZxgCKg0KBHRhZ3MSA1RhZxgCKioKBnN0YXR1cxIGc3RyaW5nUglhdmFpbGFibGVSB3BlbmRpbmdSBHNvbGQSagoOVGVzdFBhcmFtZXRlcnMaJ1Rlc3RQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gVGVzdCoSCgdvcHRpb25zEgNQZXQYAygDKhsKDGlucHV0T3B0aW9ucxIHT3B0aW9ucxgDKAMSUAoNVGVzdFJlc3BvbnNlcxolVGVzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgVGVzdCoYCg4yMDAgdGV4dC9wbGFpbhIGc3RyaW5nEmEKE1Rlc3RfcG9zdFBhcmFtZXRlcnMaMVRlc3RfcG9zdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBUZXN0X3Bvc3QqFwoMcXVlcnlfb2JqZWN0EgNQZXQYAygDEl8KElRlc3RfcG9zdFJlc3BvbnNlcxovVGVzdF9wb3N0UmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBUZXN0X3Bvc3QqGAoOMjAwIHRleHQvcGxhaW4SBnN0cmluZxo3CgR0ZXN0EgUvdGVzdBoDR0VUKgRUZXN0Sg5UZXN0UGFyYW1ldGVyc1INVGVzdFJlc3BvbnNlcxpMCgl0ZXN0X3Bvc3QSBS90ZXN0GgRQT1NUKglUZXN0X3Bvc3RKE1Rlc3RfcG9zdFBhcmFtZXRlcnNSElRlc3RfcG9zdFJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIYCg9kZWVwb2JqZWN0LXRlc3QyBTEuMC4wIssCCsgCCgUvdGVzdBK+AiK/ASoEdGVzdDI+CjwKB29wdGlvbnMSBXF1ZXJ5OgpkZWVwT2JqZWN0QAFSHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXQyRwpFCgxpbnB1dE9wdGlvbnMSBXF1ZXJ5OgpkZWVwT2JqZWN0QAFSIBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9PcHRpb25zQi4SLAoDMjAwEiUKIwoCT0saHQobCgp0ZXh0L3BsYWluEg0KCwoJygEGc3RyaW5nMnoqCXRlc3RfcG9zdDI9CjsKDHF1ZXJ5X29iamVjdBIFcXVlcnk6BGZvcm1AAVIcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1BldEIuEiwKAzIwMBIlCiMKAk9LGh0KGwoKdGV4dC9wbGFpbhINCgsKCcoBBnN0cmluZyqmBQqjBQp6CgdPcHRpb25zEm8KbcoBBm9iamVjdPoBYQoeCgFhEhkKFwgBygEGc3RyaW5nmgIJZGF0ZS10aW1lCh4KAWISGQoXCAHKAQZzdHJpbmeaAglkYXRlLXRpbWUKHwoBYxIaChjKAQVhcnJhefIBDQoLCgnKAQZzdHJpbmcKZgoIQ2F0ZWdvcnkSWgpYKgoKCGNhdGVnb3J5ygEGb2JqZWN0+gFACiAKAmlkEhoKGDoEEgIxCsoBB2ludGVnZXKaAgVpbnQ2NAocCgRuYW1lEhQKEjoHEgVEb2dzCsoBBnN0cmluZwpNCgNUYWcSRgpEKgUKA3RhZ8oBBm9iamVjdPoBMQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKEwoEbmFtZRILCgnKAQZzdHJpbmcK7QIKA1BldBLlAgriAioFCgNwZXS6AQRuYW1lugEJcGhvdG9VcmxzygEGb2JqZWN0+gG7AgohCgJpZBIbChk6BRIDMTAKygEHaW50ZWdlcpoCBWludDY0Ch4KBG5hbWUSFgoUOgkSB2RvZ2dpZQrKAQZzdHJpbmcKLQoIY2F0ZWdvcnkSIRIfCh0jL2NvbXBvbmVudHMvc2NoZW1hcy9DYXRlZ29yeQo3CglwaG90b1VybHMSKgooKgIoAcoBBWFycmF58gEZChcKFSoKCghwaG90b1VybMoBBnN0cmluZwo3CgR0YWdzEi8KLSoCKAHKAQVhcnJhefIBHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL1RhZwpVCgZzdGF0dXMSSwpJwgEMEgphdmFpbGFibGUKwgEKEghwZW5kaW5nCsIBBxIFc29sZArKAQZzdHJpbmeSAhdwZXQgc3RhdHVzIGluIHRoZSBzdG9yZQ==')),
);

/// From: 3_0/issue_11521.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_11521 = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlEiQKDkRhdGVUaW1lT2JqZWN0KhIKCGRhdGV0aW1lEgZzdHJpbmc=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBKBAQoQT3BlbkFQSSBQZXRzdG9yZRImYSBzcGVjIHRvIHRlc3QgZnJlZSBmb3JtIG9iamVjdCBtb2RlbHMqPgoKQXBhY2hlLTIuMBIwaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMC5odG1sMgUxLjAuMCIAKmEKXwpdCg5EYXRlVGltZU9iamVjdBJLCkn6AUYKRAoIZGF0ZXRpbWUSOAo2igEqW1xkXXs0fS1bXGRdezJ9LVtcZF17Mn1UW1xkXXsxLDJ9OltcZF17Mn1aygEGc3RyaW5n')),
);

/// From: 3_0/allOf_composition.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of_composition = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEi0KBUh1bWFuKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcSUwoJU3VwZXJCYWJ5KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqEAoGZ2VuZGVyEgZzdHJpbmcqDgoDYWdlEgdpbnRlZ2VyElYKCFN1cGVyQm95KhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqEgoIY2F0ZWdvcnkSBnN0cmluZyoQCgVsZXZlbBIHaW50ZWdlchIyCgRIZXJvKhgKBnJld2FyZBIHaW50ZWdlciIFaW50NjQqEAoGb3JpZ2luEgZzdHJpbmcSggEKCFN1cGVyTWFuKhQKAmlkEgdpbnRlZ2VyIgVpbnQ2NCoOCgRuYW1lEgZzdHJpbmcqGAoGcmV3YXJkEgdpbnRlZ2VyIgVpbnQ2NCoQCgZvcmlnaW4SBnN0cmluZyoSCghjYXRlZ29yeRIGc3RyaW5nKhAKBWxldmVsEgdpbnRlZ2VyEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEEloKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIgoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCFN1cGVyTWFuGAMaTAoEbGlzdBIaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0aA0dFVCoETGlzdEoOTGlzdFBhcmFtZXRlcnNSDUxpc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK8AQq5AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmgEilwEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCShJICgMyMDASQQo/CgJPSxo5CjcKEGFwcGxpY2F0aW9uL2pzb24SIwohEh8KHSMvY29tcG9uZW50cy9zY2hlbWFzL1N1cGVyTWFuKsYECsMECmwKCVN1cGVyQmFieRJfCl3SAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvSHVtYW7SATkKN7oBBWxldmVs+gEsChUKBmdlbmRlchILCgnKAQZzdHJpbmcKEwoDYWdlEgwKCsoBB2ludGVnZXIKeAoIU3VwZXJCb3kSbApq0gEeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0h1bWFu0gFGCkS6AQVsZXZlbMoBBm9iamVjdPoBMAoXCghjYXRlZ29yeRILCgnKAQZzdHJpbmcKFQoFbGV2ZWwSDAoKygEHaW50ZWdlcgqaAQoIU3VwZXJNYW4SjQEKigHSAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvSHVtYW7SAR0SGwoZIy9jb21wb25lbnRzL3NjaGVtYXMvSGVyb9IBRgpEugEFbGV2ZWzKAQZvYmplY3T6ATAKFwoIY2F0ZWdvcnkSCwoJygEGc3RyaW5nChUKBWxldmVsEgwKCsoBB2ludGVnZXIKXQoESGVybxJVClO6AQZvcmlnaW7KAQZvYmplY3T6ATcKHgoGcmV3YXJkEhQKEsoBB2ludGVnZXKaAgVpbnQ2NAoVCgZvcmlnaW4SCwoJygEGc3RyaW5nkgIESGVybwpdCgVIdW1hbhJUClK6AQJpZMoBBm9iamVjdPoBOQoaCgJpZBIUChLKAQdpbnRlZ2VymgIFaW50NjQKGwoEbmFtZRITChE6BhIEVG9tCsoBBnN0cmluZ5ICBUh1bWFu')),
);

/// From: 3_0/issue_13025.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_13025 = (
  model: surface.Model.fromBuffer(base64Decode('Cg5BcnJheSBOb3QgTnVsbBIjCgRCb2R5KhsKD2FycmF5VGhhdElzTnVsbBIGc3RyaW5nGAISNwoYQm9keVdpdGhSZXF1aXJlZE51bGxhYmxlKhsKD2FycmF5VGhhdElzTnVsbBIGc3RyaW5nGAISMgoQQm9keVdpdGhSZXF1aXJlZCoeChJhcnJheVRoYXRJc05vdE51bGwSBnN0cmluZxgCEikKC1JlcXVlc3RCb2R5KhoKEGFwcGxpY2F0aW9uL2pzb24SBEJvZHkYAxKFAQodUE9TVF9hcnJheV9ub3RfbnVsbFBhcmFtZXRlcnMaRVBPU1RfYXJyYXlfbm90X251bGxQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUE9TVF9hcnJheV9ub3RfbnVsbCodCgxyZXF1ZXN0X2JvZHkSC1JlcXVlc3RCb2R5GAMaSxIPL2FycmF5L25vdC9udWxsGgRQT1NUKhNQT1NUX2FycmF5X25vdF9udWxsSh1QT1NUX2FycmF5X25vdF9udWxsUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxIXCg5BcnJheSBOb3QgTnVsbDIFMS4wLjAiaApmCg8vYXJyYXkvbm90L251bGwSUzJROjkKNxI1CjMKEGFwcGxpY2F0aW9uL2pzb24SHwodEhsKGSMvY29tcG9uZW50cy9zY2hlbWFzL0JvZHlCFBISCgMyMDASCwoJCgdTdWNjZXNzKqYCCqMCCkcKBEJvZHkSPwo9ygEGb2JqZWN0+gExCi8KD2FycmF5VGhhdElzTnVsbBIcChoIAcoBBWFycmF58gENCgsKCcoBBnN0cmluZwptChhCb2R5V2l0aFJlcXVpcmVkTnVsbGFibGUSUQpPugEPYXJyYXlUaGF0SXNOdWxsygEGb2JqZWN0+gExCi8KD2FycmF5VGhhdElzTnVsbBIcChoIAcoBBWFycmF58gENCgsKCcoBBnN0cmluZwppChBCb2R5V2l0aFJlcXVpcmVkElUKU7oBEmFycmF5VGhhdElzTm90TnVsbMoBBm9iamVjdPoBMgowChJhcnJheVRoYXRJc05vdE51bGwSGgoYygEFYXJyYXnyAQ0KCwoJygEGc3RyaW5n')),
);

/// From: 3_0/issue11242.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue11242 = (
  model: surface.Model.fromBuffer(base64Decode('CiFJc3N1ZSAxMTI0MiAtIFBhdGggUGFyYW0gZW5jb2RpbmcSJgoPU29tZVJldHVyblZhbHVlKhMKCXNvbWVQYXJhbRIGc3RyaW5nEnkKFUdldFNvbWVQYXJhbVJlc3BvbnNlcxo1R2V0U29tZVBhcmFtUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZXRTb21lUGFyYW0qKQoUMjAwIGFwcGxpY2F0aW9uL2pzb24SD1NvbWVSZXR1cm5WYWx1ZRgDGkoKDEdldFNvbWVQYXJhbRIQL2FwaS97c29tZVBhcmFtfRoDR0VUKgxHZXRTb21lUGFyYW1SFUdldFNvbWVQYXJhbVJlc3BvbnNlcw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMxJTCiFJc3N1ZSAxMTI0MiAtIFBhdGggUGFyYW0gZW5jb2RpbmcSJ1doaXRlIHNwYWNlIGVuY29kaW5nIGluIHBhdGggcGFyYW1ldGVyczIFMS4wLjAaEAoObG9jYWxob3N0OjgwODAi6gEK5wEKEC9hcGkve3NvbWVQYXJhbX0S0gEimgESD1ZpZXcgc29tZSBwYXJhbSoMR2V0U29tZVBhcmFtQnkSdwoDMjAwEnAKbgoRU29tZSByZXR1cm4gdmFsdWUaWQpXChBhcHBsaWNhdGlvbi9qc29uEkMKKBImCiQjL2NvbXBvbmVudHMvc2NoZW1hcy9Tb21lUmV0dXJuVmFsdWUSFxIVc29tZVBhcmFtOiBzb21lVmFsdWUKajMKMQoJc29tZVBhcmFtEgRwYXRoGg9Tb21lIHBhcmFtZXRlci4gAVILCgnKAQZzdHJpbmcqSwpJCkcKD1NvbWVSZXR1cm5WYWx1ZRI0CjK6AQlzb21lUGFyYW3KAQZvYmplY3T6ARoKGAoJc29tZVBhcmFtEgsKCcoBBnN0cmluZw==')),
);

/// From: 3_0/example_generator_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_example_generator_test = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFBldHN0b3JlElUKCkRhdGVTY2hlbWEqIQoRZGF0ZV93aXRoX2V4YW1wbGUSBnN0cmluZyIEZGF0ZSokChRkYXRlX3dpdGhvdXRfZXhhbXBsZRIGc3RyaW5nIgRkYXRlEh8KDFN0cmluZ1NjaGVtYSoPCgV2YWx1ZRIGc3RyaW5nEjIKDUV4YW1wbGVTY2hlbWEqIQoXZXhhbXBsZV9zY2hlbWFfcHJvcGVydHkSBnN0cmluZxJjChJFeGFtcGxlQWxsT2ZTY2hlbWEqIQoXZXhhbXBsZV9zY2hlbWFfcHJvcGVydHkSBnN0cmluZyoqCiBleGFtcGxlX3NjaGVtYV9wcm9wZXJ0eV9jb21wb3NlZBIGc3RyaW5nEmMKEkV4YW1wbGVBbnlPZlNjaGVtYSohChdleGFtcGxlX3NjaGVtYV9wcm9wZXJ0eRIGc3RyaW5nKioKIGV4YW1wbGVfc2NoZW1hX3Byb3BlcnR5X2NvbXBvc2VkEgZzdHJpbmcSYwoSRXhhbXBsZU9uZU9mU2NoZW1hKiEKF2V4YW1wbGVfc2NoZW1hX3Byb3BlcnR5EgZzdHJpbmcqKgogZXhhbXBsZV9zY2hlbWFfcHJvcGVydHlfY29tcG9zZWQSBnN0cmluZxK/AQowR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlUmVzcG9uc2VzGmtHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhOb0V4YW1wbGVSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE5vRXhhbXBsZSoeChQyMDAgYXBwbGljYXRpb24vanNvbhIGc3RyaW5nEr8BCjBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhOb0V4YW1wbGVSZXNwb25zZXMaa0dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE5vRXhhbXBsZVJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlKh4KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcSyAEKMUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXRSZXNwb25zZXMabUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXRSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXQqJAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SCkRhdGVTY2hlbWEYAxLQAQozR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQXJyYXlPZk1vZGVsUmVzcG9uc2VzGnFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBcnJheU9mTW9kZWxSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZNb2RlbComChQyMDAgYXBwbGljYXRpb24vanNvbhIMU3RyaW5nU2NoZW1hGAIS5gEKPEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZQcmltaXRpdmVUeXBlc1Jlc3BvbnNlcxqDAUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZQcmltaXRpdmVUeXBlc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQXJyYXlPZlByaW1pdGl2ZVR5cGVzKiAKFDIwMCBhcHBsaWNhdGlvbi9qc29uEgZzdHJpbmcYAhK8AQosR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTW9kZWxSZXNwb25zZXMaY0dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE1vZGVsUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhNb2RlbConChQyMDAgYXBwbGljYXRpb24vanNvbhINRXhhbXBsZVNjaGVtYRgDEtABCjFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsUmVzcG9uc2VzGm1HZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsUmVzcG9uc2VzIGhvbGRzIHJlc3BvbnNlcyBvZiBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsKiwKFDIwMCBhcHBsaWNhdGlvbi9qc29uEhJFeGFtcGxlQWxsT2ZTY2hlbWEYAxLQAQoxR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQW55T2ZNb2RlbFJlc3BvbnNlcxptR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQW55T2ZNb2RlbFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQW55T2ZNb2RlbCosChQyMDAgYXBwbGljYXRpb24vanNvbhISRXhhbXBsZUFueU9mU2NoZW1hGAMS0AEKMUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWxSZXNwb25zZXMabUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWxSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWwqLAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SEkV4YW1wbGVPbmVPZlNjaGVtYRgDGrkBCidnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhOb0V4YW1wbGUSLi9nZW5lcmF0ZV9mcm9tX3Jlc3BvbnNlX3NjaGVtYV93aXRoX25vX2V4YW1wbGUaA0dFVConR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlUjBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhOb0V4YW1wbGVSZXNwb25zZXMavQEKJ2dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE5vRXhhbXBsZRIyL2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfcHJpbWl0aXZlX3R5cGUaA0dFVConR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlUjBHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhOb0V4YW1wbGVSZXNwb25zZXMavQEKKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXQSLy9nZW5lcmF0ZV9mcm9tX3Jlc3BvbnNlX3NjaGVtYV93aXRoX2RhdGVfZm9ybWF0GgNHRVQqKEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXRSMUdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aERhdGVGb3JtYXRSZXNwb25zZXMaxgEKKmdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZNb2RlbBIyL2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfYXJyYXlfb2ZfbW9kZWwaA0dFVCoqR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQXJyYXlPZk1vZGVsUjNHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBcnJheU9mTW9kZWxSZXNwb25zZXMa6wEKM2dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZQcmltaXRpdmVUeXBlcxI8L2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfYXJyYXlfb2ZfcHJpbWl0aXZlX3R5cGVzGgNHRVQqM0dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZQcmltaXRpdmVUeXBlc1I8R2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoQXJyYXlPZlByaW1pdGl2ZVR5cGVzUmVzcG9uc2VzGqgBCiNnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhNb2RlbBIpL2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfbW9kZWwaA0dFVCojR2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTW9kZWxSLEdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE1vZGVsUmVzcG9uc2VzGsYBCihnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsEjgvZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9hbGxPZl9jb21wb3NlZF9tb2RlbBoDR0VUKihHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsUjFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbGxPZk1vZGVsUmVzcG9uc2VzGsYBCihnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbnlPZk1vZGVsEjgvZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9hbnlPZl9jb21wb3NlZF9tb2RlbBoDR0VUKihHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbnlPZk1vZGVsUjFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhBbnlPZk1vZGVsUmVzcG9uc2VzGsYBCihnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsEjgvZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9vbmVPZl9jb21wb3NlZF9tb2RlbBoDR0VUKihHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsUjFHZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhPbmVPZk1vZGVsUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhInChBPcGVuQVBJIFBldHN0b3JlKgwKCkFwYWNoZS0yLjAyBTEuMC4wIsUOCqUBCi4vZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9ub19leGFtcGxlEnMicSonZ2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlQkYSRAoDMjAwEj0KOwoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aIwohChBhcHBsaWNhdGlvbi9qc29uEg0KCwoJygEGc3RyaW5nCswBCjIvZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9wcmltaXRpdmVfdHlwZRKVASKSASonZ2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoTm9FeGFtcGxlQmcSZQoDMjAwEl4KXAoUc3VjY2Vzc2Z1bCBvcGVyYXRpb24aRApCChBhcHBsaWNhdGlvbi9qc29uEi4KLAoqOh8SHXByaW1pdGl2ZSB0eXBlIGV4YW1wbGUgdmFsdWUKygEGc3RyaW5nCsEBCi8vZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9kYXRlX2Zvcm1hdBKNASKKASooZ2VuZXJhdGVGcm9tUmVzcG9uc2VTY2hlbWFXaXRoRGF0ZUZvcm1hdEJeElwKAzIwMBJVClMKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGjsKOQoQYXBwbGljYXRpb24vanNvbhIlCiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvRGF0ZVNjaGVtYQrXAQoyL2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfYXJyYXlfb2ZfbW9kZWwSoAEinQEqKmdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZNb2RlbEJvEm0KAzIwMBJmCmQKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGkwKSgoQYXBwbGljYXRpb24vanNvbhI2CjQKMsoBBWFycmF58gEnCiUSIwohIy9jb21wb25lbnRzL3NjaGVtYXMvU3RyaW5nU2NoZW1hCvIBCjwvZ2VuZXJhdGVfZnJvbV9yZXNwb25zZV9zY2hlbWFfd2l0aF9hcnJheV9vZl9wcmltaXRpdmVfdHlwZXMSsQEirgEqM2dlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFycmF5T2ZQcmltaXRpdmVUeXBlc0J3EnUKAzIwMBJuCmwKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGlQKUgoQYXBwbGljYXRpb24vanNvbhI+CjwKOsoBBWFycmF58gEvCi0KKzogEh5wcmltaXRpdmUgdHlwZXMgZXhhbXBsZSB2YWx1ZQrKAQZzdHJpbmcKuQEKKS9nZW5lcmF0ZV9mcm9tX3Jlc3BvbnNlX3NjaGVtYV93aXRoX21vZGVsEosBIogBKiNnZW5lcmF0ZUZyb21SZXNwb25zZVNjaGVtYVdpdGhNb2RlbEJhEl8KAzIwMBJYClYKFHN1Y2Nlc3NmdWwgb3BlcmF0aW9uGj4KPAoQYXBwbGljYXRpb24vanNvbhIoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZVNjaGVtYQrSAQo4L2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfYWxsT2ZfY29tcG9zZWRfbW9kZWwSlQEikgEqKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFsbE9mTW9kZWxCZhJkCgMyMDASXQpbChRzdWNjZXNzZnVsIG9wZXJhdGlvbhpDCkEKEGFwcGxpY2F0aW9uL2pzb24SLQorEikKJyMvY29tcG9uZW50cy9zY2hlbWFzL0V4YW1wbGVBbGxPZlNjaGVtYQrSAQo4L2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfYW55T2ZfY29tcG9zZWRfbW9kZWwSlQEikgEqKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aEFueU9mTW9kZWxCZhJkCgMyMDASXQpbChRzdWNjZXNzZnVsIG9wZXJhdGlvbhpDCkEKEGFwcGxpY2F0aW9uL2pzb24SLQorEikKJyMvY29tcG9uZW50cy9zY2hlbWFzL0V4YW1wbGVBbnlPZlNjaGVtYQrSAQo4L2dlbmVyYXRlX2Zyb21fcmVzcG9uc2Vfc2NoZW1hX3dpdGhfb25lT2ZfY29tcG9zZWRfbW9kZWwSlQEikgEqKGdlbmVyYXRlRnJvbVJlc3BvbnNlU2NoZW1hV2l0aE9uZU9mTW9kZWxCZhJkCgMyMDASXQpbChRzdWNjZXNzZnVsIG9wZXJhdGlvbhpDCkEKEGFwcGxpY2F0aW9uL2pzb24SLQorEikKJyMvY29tcG9uZW50cy9zY2hlbWFzL0V4YW1wbGVPbmVPZlNjaGVtYSriBgrfBgqAAQoKRGF0ZVNjaGVtYRJyCnDKAQZvYmplY3T6AWQKNgoRZGF0ZV93aXRoX2V4YW1wbGUSIQofOg0SCzIwMjQtMDEtMDEKygEGc3RyaW5nmgIEZGF0ZQoqChRkYXRlX3dpdGhvdXRfZXhhbXBsZRISChDKAQZzdHJpbmeaAgRkYXRlCjsKDFN0cmluZ1NjaGVtYRIrCik6HhIcc3RyaW5nIHNjaGVtYSBleGFtcGxlIHZhbHVlCsoBBnN0cmluZwppCg1FeGFtcGxlU2NoZW1hElgKVsoBBm9iamVjdPoBSgpIChdleGFtcGxlX3NjaGVtYV9wcm9wZXJ0eRItCis6IBIeZXhhbXBsZSBzY2hlbWEgcHJvcGVydHkgdmFsdWUKygEGc3RyaW5nCrkBChJFeGFtcGxlQWxsT2ZTY2hlbWESogEKnwHKAQZvYmplY3TSASYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZVNjaGVtYdIBagpoygEGb2JqZWN0+gFcCloKIGV4YW1wbGVfc2NoZW1hX3Byb3BlcnR5X2NvbXBvc2VkEjYKNDopEidleGFtcGxlIHNjaGVtYSBwcm9wZXJ0eSB2YWx1ZSBjb21wb3NlZArKAQZzdHJpbmcKuQEKEkV4YW1wbGVBbnlPZlNjaGVtYRKiAQqfAcoBBm9iamVjdOIBJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9FeGFtcGxlU2NoZW1h4gFqCmjKAQZvYmplY3T6AVwKWgogZXhhbXBsZV9zY2hlbWFfcHJvcGVydHlfY29tcG9zZWQSNgo0OikSJ2V4YW1wbGUgc2NoZW1hIHByb3BlcnR5IHZhbHVlIGNvbXBvc2VkCsoBBnN0cmluZwq5AQoSRXhhbXBsZU9uZU9mU2NoZW1hEqIBCp8BygEGb2JqZWN02gEmEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0V4YW1wbGVTY2hlbWHaAWoKaMoBBm9iamVjdPoBXApaCiBleGFtcGxlX3NjaGVtYV9wcm9wZXJ0eV9jb21wb3NlZBI2CjQ6KRInZXhhbXBsZSBzY2hlbWEgcHJvcGVydHkgdmFsdWUgY29tcG9zZWQKygEGc3RyaW5n')),
);

/// From: 3_0/allOf.yaml
final OpenApiProto<v3.Document> fixtures_3_0_all_of = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEkMKBlBlcnNvbioQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nElcKBUFkdWx0KhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqEwoIY2hpbGRyZW4SBUNoaWxkGAIScQoFQ2hpbGQqFgoLYm9vc3RlclNlYXQSB2Jvb2xlYW4qFQoDYWdlEgdpbnRlZ2VyIgVpbnQzMioQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElgKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBlBlcnNvbhgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbireAwrbAwqdAQoGUGVyc29uEpIBCo8BEjcKBiRfdHlwZRItCh8KAWESGiMvY29tcG9uZW50cy9zY2hlbWFzL0FkdWx0CgoKAWMSBUNoaWxkygEGb2JqZWN0+gFKChUKBiRfdHlwZRILCgnKAQZzdHJpbmcKFwoIbGFzdE5hbWUSCwoJygEGc3RyaW5nChgKCWZpcnN0TmFtZRILCgnKAQZzdHJpbmcKmgEKBUFkdWx0EpABCo0B0gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbtIBSQpHygEGb2JqZWN0+gE7CjkKCGNoaWxkcmVuEi0KK8oBBWFycmF58gEgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGSSAhxBIHJlcHJlc2VudGF0aW9uIG9mIGFuIGFkdWx0CpsBCgVDaGlsZBKRAQqOAdIBKwopygEGb2JqZWN0+gEdChsKA2FnZRIUChLKAQdpbnRlZ2VymgIFaW50MzLSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGVyc29u+gEdChsKC2Jvb3N0ZXJTZWF0EgwKCsoBB2Jvb2xlYW6SAhtBIHJlcHJlc2VudGF0aW9uIG9mIGEgY2hpbGQ=')),
);

/// From: 3_0/oneOfArrayMapImport.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_array_map_import = (
  model: surface.Model.fromBuffer(base64Decode('CgZmcnVpdHkSNQoGYXBwbGVzKisKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIQbWFwW3N0cmluZ11hcHBsZRgBEhoKBmdyYXBlcyoQCgV2YWx1ZRIFZ3JhcGUYAhJXCgVmcnVpdCoPCgVjb2xvchIGc3RyaW5nKisKFWFkZGl0aW9uYWxfcHJvcGVydGllcxIQbWFwW3N0cmluZ11hcHBsZRgBKhAKBXZhbHVlEgVncmFwZRgCEhcKBWFwcGxlKg4KBGtpbmQSBnN0cmluZxIYCgVncmFwZSoPCgVjb2xvchIGc3RyaW5nElcKDUdFVF9SZXNwb25zZXMaJUdFVF9SZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIEdFVF8qHwoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBWZydWl0GAMSMAofdGVzdFJlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhABIgtpbnRlcmZhY2V7fRJICg90ZXN0UmVxdWVzdEJvZHkqNQoQYXBwbGljYXRpb24vanNvbhIfdGVzdFJlcXVlc3RCb2R5YXBwbGljYXRpb24vanNvbhgDElwKDlRlc3RQYXJhbWV0ZXJzGidUZXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIFRlc3QqIQoMcmVxdWVzdF9ib2R5Eg90ZXN0UmVxdWVzdEJvZHkYAxodEgEvGgNHRVQqBEdFVF9SDUdFVF9SZXNwb25zZXMaJAoEdGVzdBIBLxoDUFVUKgRUZXN0Sg5UZXN0UGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIPCgZmcnVpdHkyBTAuMC4xIpQBCpEBCgEvEosBIktCSRJHCgMyMDASQAo+CgRkZXNjGjYKNAoQYXBwbGljYXRpb24vanNvbhIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvZnJ1aXQqPCoEdGVzdDoeChwSGgoYChBhcHBsaWNhdGlvbi9qc29uEgQKAgoAQhQSEgoDMjA0EgsKCQoHU3VjY2VzcyriAgrfAgpvCgVmcnVpdBJmCmRKBWZydWl02gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL2FwcGxlc9oBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9ncmFwZXP6ARYKFAoFY29sb3ISCwoJygEGc3RyaW5nCjMKBWFwcGxlEioKKEoFYXBwbGXKAQZvYmplY3T6ARUKEwoEa2luZBILCgnKAQZzdHJpbmcKQAoGYXBwbGVzEjYKNEoGYXBwbGVzygEGb2JqZWN0ggIgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvYXBwbGUKNAoFZ3JhcGUSKwopSgVncmFwZcoBBm9iamVjdPoBFgoUCgVjb2xvchILCgnKAQZzdHJpbmcKPwoGZ3JhcGVzEjUKM0oGZ3JhcGVzygEFYXJyYXnyASAKHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9ncmFwZQ==')),
);

/// From: 3_0/ping.yaml
final OpenApiProto<v3.Document> fixtures_3_0_ping = (
  model: surface.Model.fromBuffer(base64Decode('CglwaW5nIHRlc3QaHgoHcGluZ0dldBIFL3BpbmcaA0dFVCoHUGluZ0dldA==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIQCglwaW5nIHRlc3QyAzEuMBoYChZodHRwOi8vbG9jYWxob3N0OjgwMDAvIicKJQoFL3BpbmcSHCIaKgdwaW5nR2V0Qg8SDQoDMjAxEgYKBAoCT0s=')),
);

/// From: 3_0/petstore-with-nullable-required.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_with_nullable_required = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/tags.yaml
final OpenApiProto<v3.Document> fixtures_3_0_tags = (
  model: surface.Model.fromBuffer(base64Decode('ChBPcGVuQVBJIFRlc3QgQVBJEh0KB1NvbWVPYmoqEgoIc29tZVByb3ASBnN0cmluZxJKCg5PcElkUGFyYW1ldGVycxonT3BJZFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBPcElkKg8KAmlkEgdpbnRlZ2VyKAQaEgoDb3AwEgEvGgNHRVQqA09wMBooCgRvcElkEgUve2lkfRoDR0VUKgRPcElkSg5PcElkUGFyYW1ldGVycxocCgNvcDESCy9ncm91cDEvb3AxGgNHRVQqA09wMRocCgNvcDISCy9ncm91cDEvb3AyGgNHRVQqA09wMhocCgNvcDMSCy9ncm91cDIvb3AzGgNHRVQqA09wMxocCgNvcDQSCy9ncm91cDMvb3A0GgNHRVQqA09wNBocCgNvcDUSCy9ncm91cDQvb3A1GgNHRVQqA09wNRocCgNvcDYSCy9ncm91cDQvb3A2GgNHRVQqA09wNhocCgNvcDcSCy9ncm91cDUvb3A3GgNHRVQqA09wNxocCgNvcDgSCy9ncm91cDYvb3A4GgNHRVQqA09wOA==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIkChBPcGVuQVBJIFRlc3QgQVBJEglUYWdzIFRlc3QyBTEuMC4wGhsKGWh0dHA6Ly9hcGkuY29tcGFueS54eXovdjIi5wMKIwoBLxIeIhwKBHRhZzAqA29wMEIPEg0KAzIwMBIGCgQKAk9rCkYKBS97aWR9Ej0iOwoEdGFnMCoEb3BJZDIcChoKAmlkEgRwYXRoIAFSDAoKygEHaW50ZWdlckIPEg0KAzIwMBIGCgQKAk9rCi0KCy9ncm91cDEvb3AxEh4iHAoEdGFnMSoDb3AxQg8SDQoDMjAwEgYKBAoCT2sKLQoLL2dyb3VwMS9vcDISHiIcCgR0YWcyKgNvcDJCDxINCgMyMDASBgoECgJPawotCgsvZ3JvdXAyL29wMxIeIhwKBHRhZzIqA29wM0IPEg0KAzIwMBIGCgQKAk9rCicKCy9ncm91cDMvb3A0EhgiFioDb3A0Qg8SDQoDMjAwEgYKBAoCT2sKLwoLL2dyb3VwNC9vcDUSICIeCgZncm91cDQqA29wNUIPEg0KAzIwMBIGCgQKAk9rCi8KCy9ncm91cDQvb3A2EiAiHgoGZ3JvdXA0KgNvcDZCDxINCgMyMDASBgoECgJPawovCgsvZ3JvdXA1L29wNxIgIh4KBmdyb3VwNSoDb3A3Qg8SDQoDMjAwEgYKBAoCT2sKLwoLL2dyb3VwNi9vcDgSICIeCgZncm91cDUqA29wOEIPEg0KAzIwMBIGCgQKAk9rKjYKNAoyCgdTb21lT2JqEicKJcoBBm9iamVjdPoBGQoXCghzb21lUHJvcBILCgnKAQZzdHJpbmc=')),
);

/// From: 3_0/issue_11772.yml
final OpenApiProto<v3.Document> fixtures_3_0_issue_11772 = (
  model: surface.Model.fromBuffer(base64Decode('ChVFeHRyYSBBbm5vdGF0aW9uIFRlc3QSrgEKCEVtcGxveWVlKgwKAmlkEgZzdHJpbmcqDgoEbmFtZRIGc3RyaW5nKg8KBWVtYWlsEgZzdHJpbmcqDgoEcm9sZRIGc3RyaW5nKhsKEGhhc0FjY2VwdGVkVGVybXMSB2Jvb2xlYW4qIQoRZGF0ZVRlcm1zQWNjZXB0ZWQSBnN0cmluZyIEZGF0ZSojChJ0ZXJtc1ZlcnNpb25OdW1iZXISBm51bWJlciIFZmxvYXQS2QEKDkVtcGxveWVlRW50aXR5KiMKC2Fzc2lnbm1lbnRzEhJFbXBsb3llZUFzc2lnbm1lbnQYAioMCgJpZBIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoPCgVlbWFpbBIGc3RyaW5nKg4KBHJvbGUSBnN0cmluZyobChBoYXNBY2NlcHRlZFRlcm1zEgdib29sZWFuKiEKEWRhdGVUZXJtc0FjY2VwdGVkEgZzdHJpbmciBGRhdGUqIwoSdGVybXNWZXJzaW9uTnVtYmVyEgZudW1iZXIiBWZsb2F0Eo8CCgtTdXJ2ZXlHcm91cCoSCgJpZBIGc3RyaW5nIgR1dWlkKiAKC2NyZWF0ZWREYXRlEgZzdHJpbmciCWRhdGUtdGltZSoTCgljcmVhdGVkQnkSBnN0cmluZyohCgxtb2RpZmllZERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKhQKCm1vZGlmaWVkQnkSBnN0cmluZyoXCg1vcHBvcnR1bml0eUlkEgZzdHJpbmcqFQoLcHJvamVjdE5hbWUSBnN0cmluZyoaChBwcm9qZWN0Q3JlYXRvcklkEgZzdHJpbmcqMAoQc3VibWlzc2lvblN0YXR1cxIGc3RyaW5nUghDb21wbGV0ZVIKSW5jb21wbGV0ZRLPAgoRU3VydmV5R3JvdXBFbnRpdHkqIwoLYXNzaWdubWVudHMSEkVtcGxveWVlQXNzaWdubWVudBgCKhMKCGRpc2FibGVkEgdib29sZWFuKhIKAmlkEgZzdHJpbmciBHV1aWQqIAoLY3JlYXRlZERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKhMKCWNyZWF0ZWRCeRIGc3RyaW5nKiEKDG1vZGlmaWVkRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqFAoKbW9kaWZpZWRCeRIGc3RyaW5nKhcKDW9wcG9ydHVuaXR5SWQSBnN0cmluZyoVCgtwcm9qZWN0TmFtZRIGc3RyaW5nKhoKEHByb2plY3RDcmVhdG9ySWQSBnN0cmluZyowChBzdWJtaXNzaW9uU3RhdHVzEgZzdHJpbmdSCENvbXBsZXRlUgpJbmNvbXBsZXRlEtMBCghlbXBsb3llZSojCgthc3NpZ25tZW50cxISRW1wbG95ZWVBc3NpZ25tZW50GAIqDAoCaWQSBnN0cmluZyoOCgRuYW1lEgZzdHJpbmcqDwoFZW1haWwSBnN0cmluZyoOCgRyb2xlEgZzdHJpbmcqGwoQaGFzQWNjZXB0ZWRUZXJtcxIHYm9vbGVhbiohChFkYXRlVGVybXNBY2NlcHRlZBIGc3RyaW5nIgRkYXRlKiMKEnRlcm1zVmVyc2lvbk51bWJlchIGbnVtYmVyIgVmbG9hdBLJAgoLc3VydmV5R3JvdXAqIwoLYXNzaWdubWVudHMSEkVtcGxveWVlQXNzaWdubWVudBgCKhMKCGRpc2FibGVkEgdib29sZWFuKhIKAmlkEgZzdHJpbmciBHV1aWQqIAoLY3JlYXRlZERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKhMKCWNyZWF0ZWRCeRIGc3RyaW5nKiEKDG1vZGlmaWVkRGF0ZRIGc3RyaW5nIglkYXRlLXRpbWUqFAoKbW9kaWZpZWRCeRIGc3RyaW5nKhcKDW9wcG9ydHVuaXR5SWQSBnN0cmluZyoVCgtwcm9qZWN0TmFtZRIGc3RyaW5nKhoKEHByb2plY3RDcmVhdG9ySWQSBnN0cmluZyowChBzdWJtaXNzaW9uU3RhdHVzEgZzdHJpbmdSCENvbXBsZXRlUgpJbmNvbXBsZXRlErQBChJFbXBsb3llZUFzc2lnbm1lbnQqEgoCaWQSBnN0cmluZyIEdXVpZCoWCghlbXBsb3llZRIIZW1wbG95ZWUYAyocCgtzdXJ2ZXlHcm91cBILc3VydmV5R3JvdXAYAyoeCglzdGFydERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKhwKB2VuZERhdGUSBnN0cmluZyIJZGF0ZS10aW1lKhYKDGJpbGxhYmxlUm9sZRIGc3RyaW5nEk4KGVNhbXBsaW5nUHJpY2VDYXRlZ29yeUVudW0qMQoFdmFsdWUSBnN0cmluZ1IERlJFRVIMUFJJQ0VfVElFUl8xUgxQUklDRV9USUVSXzISQgoNcHJpY2VDYXRlZ29yeSoxCgV2YWx1ZRIGc3RyaW5nUgRGUkVFUgxQUklDRV9USUVSXzFSDFBSSUNFX1RJRVJfMhIuCgpDb21wYW55RHRvKiAKDXByaWNlQ2F0ZWdvcnkSDXByaWNlQ2F0ZWdvcnkYAxLtAQoWR2V0RW1wbG95ZWVzUGFyYW1ldGVycxo3R2V0RW1wbG95ZWVzUGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIEdldEVtcGxveWVlcyoUCghmaWx0ZXJCeRIGc3RyaW5nKAMqEgoGZmlsdGVyEgZzdHJpbmcoAyoSCgZzb3J0QnkSBnN0cmluZygDKiAKCXNvcnRPcmRlchIGc3RyaW5nKANSA0FTQ1IEREVTQyoaCgZvZmZzZXQSB2ludGVnZXIiBWludDMyKAMqHgoKbWF4UmVzdWx0cxIHaW50ZWdlciIFaW50MzIoAxJyChVHZXRFbXBsb3llZXNSZXNwb25zZXMaNUdldEVtcGxveWVlc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0RW1wbG95ZWVzKiIKFDIwMCBhcHBsaWNhdGlvbi9qc29uEghFbXBsb3llZRgCGlsKDGdldEVtcGxveWVlcxIJL2VtcGxveWVlGgNHRVQqDEdldEVtcGxveWVlc0oWR2V0RW1wbG95ZWVzUGFyYW1ldGVyc1IVR2V0RW1wbG95ZWVzUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/oneOf_primitive.yaml
final OpenApiProto<v3.Document> fixtures_3_0_one_of_primitive = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEhcKBUNoaWxkKg4KBG5hbWUSBnN0cmluZxIyCgdFeGFtcGxlKg4KBG5hbWUSBnN0cmluZyoXCgV2YWx1ZRIHaW50ZWdlciIFaW50MzISWQoNTGlzdFJlc3BvbnNlcxolTGlzdFJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgTGlzdCohChQyMDAgYXBwbGljYXRpb24vanNvbhIHRXhhbXBsZRgDGioKBGxpc3QSCC9leGFtcGxlGgNHRVQqBExpc3RSDUxpc3RSZXNwb25zZXM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJhCl8KCC9leGFtcGxlElMiUSoEbGlzdEJJEkcKAzIwMBJACj4KAk9LGjgKNgoQYXBwbGljYXRpb24vanNvbhIiCiASHgocIy9jb21wb25lbnRzL3NjaGVtYXMvRXhhbXBsZSp3CnUKLAoFQ2hpbGQSIwohygEGb2JqZWN0+gEVChMKBG5hbWUSCwoJygEGc3RyaW5nCkUKB0V4YW1wbGUSOgo42gEeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxk2gEUChLKAQdpbnRlZ2VymgIFaW50MzI=')),
);

/// From: 3_0/invalid_ref_request_body.yaml
final OpenApiProto<v3.Document> fixtures_3_0_invalid_ref_request_body = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEikKBVVzZXJzKhAKBnN0cmVldBIGc3RyaW5nKg4KBGNpdHkSBnN0cmluZxKcAQomUmVzb2x2ZVJlcXVlc3RCb2R5SW52YWxpZFJlZlBhcmFtZXRlcnMaV1Jlc29sdmVSZXF1ZXN0Qm9keUludmFsaWRSZWZQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gUmVzb2x2ZVJlcXVlc3RCb2R5SW52YWxpZFJlZioZCgxyZXF1ZXN0X2JvZHkSB0ludmFsaWQYAxqNAQoccmVzb2x2ZVJlcXVlc3RCb2R5SW52YWxpZFJlZhIhL3Jlc29sdmVfcmVxdWVzdF9ib2R5X2ludmFsaWRfcmVmGgRQT1NUKhxSZXNvbHZlUmVxdWVzdEJvZHlJbnZhbGlkUmVmSiZSZXNvbHZlUmVxdWVzdEJvZHlJbnZhbGlkUmVmUGFyYW1ldGVycw==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSJ6CngKIS9yZXNvbHZlX3JlcXVlc3RfYm9keV9pbnZhbGlkX3JlZhJTMlEqHHJlc29sdmVSZXF1ZXN0Qm9keUludmFsaWRSZWY6IBIeChwjL2NvbXBvbmVudHMvc2NoZW1hcy9JbnZhbGlkQg8SDQoDMjAwEgYKBAoCT0sqXgpaClgKBVVzZXJzEk8KTcoBBWFycmF58gFCCkAKPkoEVXNlcsoBBm9iamVjdPoBLAoVCgZzdHJlZXQSCwoJygEGc3RyaW5nChMKBGNpdHkSCwoJygEGc3RyaW5nKgA=')),
);

/// From: 3_0/oneof_polymorphism_and_inheritance.yaml
final OpenApiProto<v3.Document> fixtures_3_0_oneof_polymorphism_and_inheritance = (
  model: surface.Model.fromBuffer(base64Decode('CgxCeVJlZk9yVmFsdWUSKwoLQWRkcmVzc2FibGUqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcSTQoKRXh0ZW5zaWJsZSoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEmcKBkVudGl0eSoOCgRocmVmEgZzdHJpbmcqDAoCaWQSBnN0cmluZyoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEpMBCglFbnRpdHlSZWYqDgoEbmFtZRIGc3RyaW5nKhcKDUByZWZlcnJlZFR5cGUSBnN0cmluZyoOCgRocmVmEgZzdHJpbmcqDAoCaWQSBnN0cmluZyoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEowBCgNGb28qEgoIZm9vUHJvcEESBnN0cmluZyoSCghmb29Qcm9wQhIGc3RyaW5nKg4KBGhyZWYSBnN0cmluZyoMCgJpZBIGc3RyaW5nKhkKD0BzY2hlbWFMb2NhdGlvbhIGc3RyaW5nKhMKCUBiYXNlVHlwZRIGc3RyaW5nKg8KBUB0eXBlEgZzdHJpbmcSpwEKBkZvb1JlZioVCgtmb29yZWZQcm9wQRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoXCg1AcmVmZXJyZWRUeXBlEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxK1AgoNRm9vUmVmT3JWYWx1ZSoSCghmb29Qcm9wQRIGc3RyaW5nKhIKCGZvb1Byb3BCEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZyoVCgtmb29yZWZQcm9wQRIGc3RyaW5nKg4KBG5hbWUSBnN0cmluZyoXCg1AcmVmZXJyZWRUeXBlEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxKQAQoGQmFyUmVmKg4KBG5hbWUSBnN0cmluZyoXCg1AcmVmZXJyZWRUeXBlEgZzdHJpbmcqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxKrAQoKQmFyX0NyZWF0ZSoSCghiYXJQcm9wQRIGc3RyaW5nKhIKCGZvb1Byb3BCEgZzdHJpbmcqFgoDZm9vEg1Gb29SZWZPclZhbHVlGAMqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxKyAQoDQmFyKgwKAmlkEgZzdHJpbmcqEgoIYmFyUHJvcEESBnN0cmluZyoSCghmb29Qcm9wQhIGc3RyaW5nKhYKA2ZvbxINRm9vUmVmT3JWYWx1ZRgDKg4KBGhyZWYSBnN0cmluZyoMCgJpZBIGc3RyaW5nKhkKD0BzY2hlbWFMb2NhdGlvbhIGc3RyaW5nKhMKCUBiYXNlVHlwZRIGc3RyaW5nKg8KBUB0eXBlEgZzdHJpbmcSxAIKDUJhclJlZk9yVmFsdWUqDAoCaWQSBnN0cmluZyoSCghiYXJQcm9wQRIGc3RyaW5nKhIKCGZvb1Byb3BCEgZzdHJpbmcqFgoDZm9vEg1Gb29SZWZPclZhbHVlGAMqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZyoOCgRuYW1lEgZzdHJpbmcqFwoNQHJlZmVycmVkVHlwZRIGc3RyaW5nKg4KBGhyZWYSBnN0cmluZyoMCgJpZBIGc3RyaW5nKhkKD0BzY2hlbWFMb2NhdGlvbhIGc3RyaW5nKhMKCUBiYXNlVHlwZRIGc3RyaW5nKg8KBUB0eXBlEgZzdHJpbmcSewoFUGl6emEqEwoJcGl6emFTaXplEgZudW1iZXIqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxJ4CgVQYXN0YSoQCgZ2ZW5kb3ISBnN0cmluZyoOCgRocmVmEgZzdHJpbmcqDAoCaWQSBnN0cmluZyoZCg9Ac2NoZW1hTG9jYXRpb24SBnN0cmluZyoTCglAYmFzZVR5cGUSBnN0cmluZyoPCgVAdHlwZRIGc3RyaW5nEpcBCg1QaXp6YVNwZXppYWxlKhIKCHRvcHBpbmdzEgZzdHJpbmcqEwoJcGl6emFTaXplEgZudW1iZXIqDgoEaHJlZhIGc3RyaW5nKgwKAmlkEgZzdHJpbmcqGQoPQHNjaGVtYUxvY2F0aW9uEgZzdHJpbmcqEwoJQGJhc2VUeXBlEgZzdHJpbmcqDwoFQHR5cGUSBnN0cmluZxIrCglGcnVpdFR5cGUqHgoFdmFsdWUSBnN0cmluZ1IFQVBQTEVSBkJBTkFOQRIZCgVBcHBsZSoQCgVzZWVkcxIHaW50ZWdlchIbCgZCYW5hbmEqEQoGbGVuZ3RoEgdpbnRlZ2VyEkYKBUZydWl0KhgKCWZydWl0VHlwZRIJRnJ1aXRUeXBlGAMqEAoFc2VlZHMSB2ludGVnZXIqEQoGbGVuZ3RoEgdpbnRlZ2VyEiIKBjIwMUZvbyoYCgV2YWx1ZRINRm9vUmVmT3JWYWx1ZRgDEicKCzIwMEZvb0FycmF5KhgKBXZhbHVlEg1Gb29SZWZPclZhbHVlGAISLgoDRm9vKicKHmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOBIDRm9vGAMSWQoTR2V0QWxsRm9vc1Jlc3BvbnNlcxoxR2V0QWxsRm9vc1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgR2V0QWxsRm9vcyoPEgsyMDBGb29BcnJheRgDEl8KE0NyZWF0ZUZvb1BhcmFtZXRlcnMaMUNyZWF0ZUZvb1BhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBDcmVhdGVGb28qFQoMcmVxdWVzdF9ib2R5EgNGb28YAxJRChJDcmVhdGVGb29SZXNwb25zZXMaL0NyZWF0ZUZvb1Jlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQ3JlYXRlRm9vKgoSBjIwMUZvbxgDEjgKFGNyZWF0ZUJhclJlcXVlc3RCb2R5KiAKEGFwcGxpY2F0aW9uL2pzb24SCkJhcl9DcmVhdGUYAxJwChNDcmVhdGVCYXJQYXJhbWV0ZXJzGjFDcmVhdGVCYXJQYXJhbWV0ZXJzIGhvbGRzIHBhcmFtZXRlcnMgdG8gQ3JlYXRlQmFyKiYKDHJlcXVlc3RfYm9keRIUY3JlYXRlQmFyUmVxdWVzdEJvZHkYAxJkChJDcmVhdGVCYXJSZXNwb25zZXMaL0NyZWF0ZUJhclJlc3BvbnNlcyBob2xkcyByZXNwb25zZXMgb2YgQ3JlYXRlQmFyKh0KFDIwMCBhcHBsaWNhdGlvbi9qc29uEgNCYXIYAxo4CgpnZXRBbGxGb29zEgQvZm9vGgNHRVQqCkdldEFsbEZvb3NSE0dldEFsbEZvb3NSZXNwb25zZXMaSwoJY3JlYXRlRm9vEgQvZm9vGgRQT1NUKglDcmVhdGVGb29KE0NyZWF0ZUZvb1BhcmFtZXRlcnNSEkNyZWF0ZUZvb1Jlc3BvbnNlcxpLCgljcmVhdGVCYXISBC9iYXIaBFBPU1QqCUNyZWF0ZUJhckoTQ3JlYXRlQmFyUGFyYW1ldGVyc1ISQ3JlYXRlQmFyUmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJHCgxCeVJlZk9yVmFsdWUSMFRoaXMgdGVzdHMgZm9yIGEgb25lT2YgaW50ZXJmYWNlIHJlcHJlc2VudGF0aW9uCjIFMC4wLjEaFwoVaHR0cDovL2xvY2FsaG9zdDo4MDgwIo4DCssBCgQvZm9vEsIBIlAKA0ZvbxIMR0VUIGFsbCBGb29zKgpnZXRBbGxGb29zQi8SLQoDMjAwEiYSJAoiIy9jb21wb25lbnRzL3Jlc3BvbnNlcy8yMDBGb29BcnJheTJuCgNGb28SDENyZWF0ZSBhIEZvbyoJY3JlYXRlRm9vOiISIAoeIy9jb21wb25lbnRzL3JlcXVlc3RCb2RpZXMvRm9vQioSKAoDMjAxEiESHwodIy9jb21wb25lbnRzL3Jlc3BvbnNlcy8yMDFGb28KvQEKBC9iYXIStAEysQEKA0JhchIMQ3JlYXRlIGEgQmFyKgljcmVhdGVCYXI6QQo/EjsKOQoQYXBwbGljYXRpb24vanNvbhIlCiMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvQmFyX0NyZWF0ZRgBQk4STAoDMjAwEkUKQwoLQmFyIGNyZWF0ZWQaNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXIqphUK1BIKmAEKC0FkZHJlc3NhYmxlEogBCoUBygEGb2JqZWN0+gFSCikKBGhyZWYSIQofygEGc3RyaW5nkgITSHlwZXJsaW5rIHJlZmVyZW5jZQolCgJpZBIfCh3KAQZzdHJpbmeSAhF1bmlxdWUgaWRlbnRpZmllcpICJEJhc2Ugc2NoZW1hIGZvciBhZGRyZXNzYWJsZSBlbnRpdGllcwq8AgoKRXh0ZW5zaWJsZRKtAgqqAroBBUB0eXBlygEGb2JqZWN0+gGVAgpxCg9Ac2NoZW1hTG9jYXRpb24SXgpcygEGc3RyaW5nkgJQQSBVUkkgdG8gYSBKU09OLVNjaGVtYSBmaWxlIHRoYXQgZGVmaW5lcyBhZGRpdGlvbmFsIGF0dHJpYnV0ZXMgYW5kIHJlbGF0aW9uc2hpcHMKSgoJQGJhc2VUeXBlEj0KO8oBBnN0cmluZ5ICL1doZW4gc3ViLWNsYXNzaW5nLCB0aGlzIGRlZmluZXMgdGhlIHN1cGVyLWNsYXNzClQKBUB0eXBlEksKScoBBnN0cmluZ5ICPVdoZW4gc3ViLWNsYXNzaW5nLCB0aGlzIGRlZmluZXMgdGhlIHN1Yi1jbGFzcyBFeHRlbnNpYmxlIG5hbWUKawoGRW50aXR5EmEKXxIHCgVAdHlwZcoBBm9iamVjdNIBJBIiCiAjL2NvbXBvbmVudHMvc2NoZW1hcy9BZGRyZXNzYWJsZdIBIxIhCh8jL2NvbXBvbmVudHMvc2NoZW1hcy9FeHRlbnNpYmxlCssCCglFbnRpdHlSZWYSvQIKugISBwoFQHR5cGXKAQZvYmplY3TSASQSIgogIy9jb21wb25lbnRzL3NjaGVtYXMvQWRkcmVzc2FibGXSASMSIQofIy9jb21wb25lbnRzL3NjaGVtYXMvRXh0ZW5zaWJsZfoBmgEKMQoEbmFtZRIpCifKAQZzdHJpbmeSAhtOYW1lIG9mIHRoZSByZWxhdGVkIGVudGl0eS4KZQoNQHJlZmVycmVkVHlwZRJUClLKAQZzdHJpbmeSAkZUaGUgYWN0dWFsIHR5cGUgb2YgdGhlIHRhcmdldCBpbnN0YW5jZSB3aGVuIG5lZWRlZCBmb3IgZGlzYW1iaWd1YXRpb24ukgI6RW50aXR5IHJlZmVyZW5jZSBzY2hlbWEgdG8gYmUgdXNlIGZvciBhbGwgZW50aXR5UmVmIGNsYXNzLgpmCg1Gb29SZWZPclZhbHVlElUKUxIHCgVAdHlwZcoBBm9iamVjdNoBHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb2/aAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vUmVmCmkKA0ZvbxJiCmDKAQZvYmplY3TSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvRW50aXR5+gEyChcKCGZvb1Byb3BBEgsKCcoBBnN0cmluZwoXCghmb29Qcm9wQhILCgnKAQZzdHJpbmcKWQoGRm9vUmVmEk8KTcoBBm9iamVjdNIBIhIgCh4jL2NvbXBvbmVudHMvc2NoZW1hcy9FbnRpdHlSZWb6ARwKGgoLZm9vcmVmUHJvcEESCwoJygEGc3RyaW5nCjoKBkJhclJlZhIwCi7KAQZvYmplY3TSASISIAoeIy9jb21wb25lbnRzL3NjaGVtYXMvRW50aXR5UmVmCqEBCgpCYXJfQ3JlYXRlEpIBCo8BygEGb2JqZWN00gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0VudGl0efoBYQoXCghiYXJQcm9wQRILCgnKAQZzdHJpbmcKFwoIZm9vUHJvcEISCwoJygEGc3RyaW5nCi0KA2ZvbxImEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0Zvb1JlZk9yVmFsdWUKsgEKA0JhchKqAQqnAboBAmlkygEGb2JqZWN00gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0VudGl0efoBdAoRCgJpZBILCgnKAQZzdHJpbmcKFwoIYmFyUHJvcEESCwoJygEGc3RyaW5nChcKCGZvb1Byb3BCEgsKCcoBBnN0cmluZwotCgNmb28SJhIkCiIjL2NvbXBvbmVudHMvc2NoZW1hcy9Gb29SZWZPclZhbHVlCl0KDUJhclJlZk9yVmFsdWUSTApKygEGb2JqZWN02gEcEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0JhctoBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9CYXJSZWYKUwoFUGl6emESSgpIygEGb2JqZWN00gEfEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL0VudGl0efoBGgoYCglwaXp6YVNpemUSCwoJygEGbnVtYmVyClAKBVBhc3RhEkcKRcoBBm9iamVjdNIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9FbnRpdHn6ARcKFQoGdmVuZG9yEgsKCcoBBnN0cmluZwpZCg1QaXp6YVNwZXppYWxlEkgKRsoBBm9iamVjdNIBHhIcChojL2NvbXBvbmVudHMvc2NoZW1hcy9QaXp6YfoBGQoXCgh0b3BwaW5ncxILCgnKAQZzdHJpbmcKLwoJRnJ1aXRUeXBlEiIKIMIBCBIGQVBQTEUKwgEJEgdCQU5BTkEKygEGc3RyaW5nCvQBCgVGcnVpdBLqAQrnARJZCglmcnVpdFR5cGUSTAojCgVBUFBMRRIaIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGUKJQoGQkFOQU5BEhsjL2NvbXBvbmVudHMvc2NoZW1hcy9CYW5hbmG6AQlmcnVpdFR5cGXKAQZvYmplY3TaAR4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQXBwbGXaAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvQmFuYW5h+gExCi8KCWZydWl0VHlwZRIiEiAKHiMvY29tcG9uZW50cy9zY2hlbWFzL0ZydWl0VHlwZQo2CgVBcHBsZRItCiu6AQVzZWVkc8oBBm9iamVjdPoBFwoVCgVzZWVkcxIMCgrKAQdpbnRlZ2VyCjkKBkJhbmFuYRIvCi26AQZsZW5ndGjKAQZvYmplY3T6ARgKFgoGbGVuZ3RoEgwKCsoBB2ludGVnZXIS5AEKFAoDMjA0Eg0KCwoHRGVsZXRlZBoAClMKBjIwMUZvbxJJCkcKBUVycm9yGj4KPAoQYXBwbGljYXRpb24vanNvbhIoCiYSJAoiIy9jb21wb25lbnRzL3NjaGVtYXMvRm9vUmVmT3JWYWx1ZQp3CgsyMDBGb29BcnJheRJoCmYKB1N1Y2Nlc3MaWwpZCh5hcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgSNwo1CjPKAQVhcnJhefIBKAomEiQKIiMvY29tcG9uZW50cy9zY2hlbWFzL0Zvb1JlZk9yVmFsdWUqZgpkCgNGb28SXQpbChVUaGUgRm9vIHRvIGJlIGNyZWF0ZWQSQgpACh5hcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgSHgocEhoKGCMvY29tcG9uZW50cy9zY2hlbWFzL0ZvbzoFCgNGb286BQoDQmFy')),
);

/// From: 3_0/petstore_oas3_test.yaml
final OpenApiProto<v3.Document> fixtures_3_0_petstore_oas3_test = (
  model: surface.Model.fromBuffer(base64Decode('')),
  document: v3.Document.fromBuffer(base64Decode('')),
);

/// From: 3_0/issue_14584_bigdecimal_default.yaml
final OpenApiProto<v3.Document> fixtures_3_0_issue_14584_bigdecimal_default = (
  model: surface.Model.fromBuffer(base64Decode('CgREZW1vEmoKA0FwYSoUCgRiZXBhEgZudW1iZXIiBGxvbmcqDgoEY2VwYRIGbnVtYmVyKg4KBGRlcGESBm51bWJlcioNCgNlcGESBm51bWJlcioOCgRmZXBhEgZudW1iZXIqDgoEZ2VwYRIGbnVtYmVyEigKC1JlcXVlc3RCb2R5KhkKEGFwcGxpY2F0aW9uL2pzb24SA0FwYRgDEmcKE1BPU1RfdGVzdFBhcmFtZXRlcnMaMVBPU1RfdGVzdFBhcmFtZXRlcnMgaG9sZHMgcGFyYW1ldGVycyB0byBQT1NUX3Rlc3QqHQoMcmVxdWVzdF9ib2R5EgtSZXF1ZXN0Qm9keRgDGi0SBS90ZXN0GgRQT1NUKglQT1NUX3Rlc3RKE1BPU1RfdGVzdFBhcmFtZXRlcnM=')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMBINCgREZW1vMgUxLjAuMCJsCmoKBS90ZXN0EmEyXzo6CjgSNAoyChBhcHBsaWNhdGlvbi9qc29uEh4KHBIaChgjL2NvbXBvbmVudHMvc2NoZW1hcy9BcGEYAUIhEh8KAzIwMBIYChYKFFN1Y2Nlc3NmdWwgb3BlcmF0aW9uKvIBCu8BCuwBCgNBcGES5AEK4QG6AQRiZXBhugEEY2VwYcoBBm9iamVjdPoBxgEKJgoEYmVwYRIeChzKAQZudW1iZXKKAgkJAAAAAAAAAACaAgRsb25nCh8KBGNlcGESFwoVygEGbnVtYmVyigIJCW6GG/D5IRlACh8KBGRlcGESFwoVygEGbnVtYmVyigIJCQAAAAAAwFFACh4KA2VwYRIXChXKAQZudW1iZXKKAgkJAAAAAADAUcAKIwoEZmVwYRIbChkIAUABygEGbnVtYmVyigIJCQAAAAAAAFlAChUKBGdlcGESDQoLCAHKAQZudW1iZXI=')),
);

/// From: 3_1/matrix-path-params-spec.json
final OpenApiProto<v3.Document> fixtures_3_1_matrix_path_params_spec = (
  model: surface.Model.fromBuffer(base64Decode('ChtNYXRyaXggUGF0aCBQYXJhbWV0ZXIgU3R1ZmYaYwoUcGxhaW5NYXRyaXhQYXJhbUZsYXQSMC9wbGFpbk1hdHJpeFBhcmFtRmxhdHttYXRyaXhQYXJhbX0ve3NpbXBsZVBhcmFtfRoDUFVUKhRQbGFpbk1hdHJpeFBhcmFtRmxhdA==')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMRJhChtNYXRyaXggUGF0aCBQYXJhbWV0ZXIgU3R1ZmYSO1RoaXMgQVBJIHNob3dzIHRoZSB1c2FnZSBvZiBwYXRoIHBhcmFtZXRlcnMgaW4gbWF0cml4IHN0eWxlMgUxLjAuMCK5AQq2AQowL3BsYWluTWF0cml4UGFyYW1GbGF0e21hdHJpeFBhcmFtfS97c2ltcGxlUGFyYW19EoEBKicqFHBsYWluTWF0cml4UGFyYW1GbGF0Qg8SDQoDMjAwEgYKBAoCT0tqKgooCgttYXRyaXhQYXJhbRIEcGF0aDoGbWF0cml4UgsKCcoBBnN0cmluZ2oqCigKC3NpbXBsZVBhcmFtEgRwYXRoOgZzaW1wbGVSCwoJygEGc3RyaW5n')),
);

/// From: 3_1/null-types.yaml
final OpenApiProto<v3.Document> fixtures_3_1_null_types = (
  model: surface.Model.fromBuffer(base64Decode('CgdFeGFtcGxlEiwKCm1haWRlbk5hbWUqDwoFdmFsdWUSBnN0cmluZyoNCgV2YWx1ZRIEbnVsbBIrCgdhZGRyZXNzKhAKBnN0cmVldBIGc3RyaW5nKg4KBGNpdHkSBnN0cmluZxIYCgZza2lsbHMqDgoEbmFtZRIGc3RyaW5nEjcKFm51bGxhYmxlU2tpbGxzVmFyaWFudDIqDQoFdmFsdWUSBG51bGwqDgoEbmFtZRIGc3RyaW5nEuYBCgZQZXJzb24qEAoGJF90eXBlEgZzdHJpbmcqEgoIbGFzdE5hbWUSBnN0cmluZyoTCglmaXJzdE5hbWUSBnN0cmluZyoaCgptYWlkZW5OYW1lEgptYWlkZW5OYW1lGAMqFAoHYWRkcmVzcxIHYWRkcmVzcxgDKicKEXNlY29uZEhvbWVBZGRyZXNzEhBOdWxsYWJsZS5BZGRyZXNzGAMqEgoGc2tpbGxzEgZza2lsbHMYAioyChZudWxsYWJsZVNraWxsc1ZhcmlhbnQyEhZudWxsYWJsZVNraWxsc1ZhcmlhbnQyGAMSOwoYbnVsbGFibGVDaGlsZHJlblZhcmlhbnQyKg0KBXZhbHVlEgRudWxsKhAKBXZhbHVlEgVDaGlsZBgCErICCgVBZHVsdCoQCgYkX3R5cGUSBnN0cmluZyoSCghsYXN0TmFtZRIGc3RyaW5nKhMKCWZpcnN0TmFtZRIGc3RyaW5nKhoKCm1haWRlbk5hbWUSCm1haWRlbk5hbWUYAyoUCgdhZGRyZXNzEgdhZGRyZXNzGAMqJwoRc2Vjb25kSG9tZUFkZHJlc3MSEE51bGxhYmxlLkFkZHJlc3MYAyoSCgZza2lsbHMSBnNraWxscxgCKjIKFm51bGxhYmxlU2tpbGxzVmFyaWFudDISFm51bGxhYmxlU2tpbGxzVmFyaWFudDIYAyoTCghjaGlsZHJlbhIFQ2hpbGQYAio2ChhudWxsYWJsZUNoaWxkcmVuVmFyaWFudDISGG51bGxhYmxlQ2hpbGRyZW5WYXJpYW50MhgDEvwBCgVDaGlsZCoVCgNhZ2USB2ludGVnZXIiBWludDMyKhAKBiRfdHlwZRIGc3RyaW5nKhIKCGxhc3ROYW1lEgZzdHJpbmcqEwoJZmlyc3ROYW1lEgZzdHJpbmcqGgoKbWFpZGVuTmFtZRIKbWFpZGVuTmFtZRgDKhQKB2FkZHJlc3MSB2FkZHJlc3MYAyonChFzZWNvbmRIb21lQWRkcmVzcxIQTnVsbGFibGUuQWRkcmVzcxgDKhIKBnNraWxscxIGc2tpbGxzGAIqMgoWbnVsbGFibGVTa2lsbHNWYXJpYW50MhIWbnVsbGFibGVTa2lsbHNWYXJpYW50MhgDEjQKEE51bGxhYmxlLkFkZHJlc3MqEAoGc3RyZWV0EgZzdHJpbmcqDgoEY2l0eRIGc3RyaW5nEk8KDkxpc3RQYXJhbWV0ZXJzGidMaXN0UGFyYW1ldGVycyBob2xkcyBwYXJhbWV0ZXJzIHRvIExpc3QqFAoIcGVyc29uSWQSBnN0cmluZygEElgKDUxpc3RSZXNwb25zZXMaJUxpc3RSZXNwb25zZXMgaG9sZHMgcmVzcG9uc2VzIG9mIExpc3QqIAoUMjAwIGFwcGxpY2F0aW9uL2pzb24SBlBlcnNvbhgDGkwKBGxpc3QSGi9wZXJzb24vZGlzcGxheS97cGVyc29uSWR9GgNHRVQqBExpc3RKDkxpc3RQYXJhbWV0ZXJzUg1MaXN0UmVzcG9uc2Vz')),
  document: v3.Document.fromBuffer(base64Decode('CgUzLjAuMhIXCgdFeGFtcGxlKgUKA01JVDIFMS4wLjAaGwoZaHR0cDovL2FwaS5leGFtcGxlLnh5ei92MSK6AQq3AQoaL3BlcnNvbi9kaXNwbGF5L3twZXJzb25JZH0SmAEilQEqBGxpc3QyQwpBCghwZXJzb25JZBIEcGF0aBogVGhlIGlkIG9mIHRoZSBwZXJzb24gdG8gcmV0cmlldmUgAVILCgnKAQZzdHJpbmdCSBJGCgMyMDASPwo9CgJPSxo3CjUKEGFwcGxpY2F0aW9uL2pzb24SIQofEh0KGyMvY29tcG9uZW50cy9zY2hlbWFzL1BlcnNvbir7Bwr4BwrxAwoGUGVyc29uEuYDCuMDEjcKBiRfdHlwZRItCh8KAWESGiMvY29tcG9uZW50cy9zY2hlbWFzL0FkdWx0CgoKAWMSBUNoaWxkygEGb2JqZWN0+gGdAwoVCgYkX3R5cGUSCwoJygEGc3RyaW5nChcKCGxhc3ROYW1lEgsKCcoBBnN0cmluZwoYCglmaXJzdE5hbWUSCwoJygEGc3RyaW5nCi0KCm1haWRlbk5hbWUSHwod2gEOCgx4/wHKAQZzdHJpbmfaAQkKB8oBBG51bGwKRQoHYWRkcmVzcxI6CjjKAQZvYmplY3T6ASwKFQoGc3RyZWV0EgsKCcoBBnN0cmluZwoTCgRjaXR5EgsKCcoBBnN0cmluZwo+ChFzZWNvbmRIb21lQWRkcmVzcxIpEicKJSMvY29tcG9uZW50cy9zY2hlbWFzL051bGxhYmxlLkFkZHJlc3MKPAoGc2tpbGxzEjIKMMoBBWFycmF58gElCiMKIcoBBm9iamVjdPoBFQoTCgRuYW1lEgsKCcoBBnN0cmluZwpdChZudWxsYWJsZVNraWxsc1ZhcmlhbnQyEkMKQdoBCQoHygEEbnVsbNoBMgowygEFYXJyYXnyASUKIwohygEGb2JqZWN0+gEVChMKBG5hbWUSCwoJygEGc3RyaW5nCvkBCgVBZHVsdBLvAQrsAdIBHxIdChsjL2NvbXBvbmVudHMvc2NoZW1hcy9QZXJzb27SAacBCqQBygEGb2JqZWN0+gGXAQo5CghjaGlsZHJlbhItCivKAQVhcnJhefIBIAoeEhwKGiMvY29tcG9uZW50cy9zY2hlbWFzL0NoaWxkCloKGG51bGxhYmxlQ2hpbGRyZW5WYXJpYW50MhI+CjzaAQkKB8oBBG51bGzaAS0KK8oBBWFycmF58gEgCh4SHAoaIy9jb21wb25lbnRzL3NjaGVtYXMvQ2hpbGSSAhxBIHJlcHJlc2VudGF0aW9uIG9mIGFuIGFkdWx0CnkKBUNoaWxkEnAKbtIBKwopygEGb2JqZWN0+gEdChsKA2FnZRIUChLKAQdpbnRlZ2VymgIFaW50MzLSAR8SHQobIy9jb21wb25lbnRzL3NjaGVtYXMvUGVyc29ukgIbQSByZXByZXNlbnRhdGlvbiBvZiBhIGNoaWxkCooBChBOdWxsYWJsZS5BZGRyZXNzEnYKdAgBygEGb2JqZWN0+gEsChUKBnN0cmVldBILCgnKAQZzdHJpbmcKEwoEY2l0eRILCgnKAQZzdHJpbmeSAjdBIHJlcHJlc2VudGF0aW9uIG9mIGFuIGFkZHJlc3Mgd2hvc2UgdmFsdWUgY2FuIGJlIG51bGwu')),
);

/// All V2 fixtures from `openapi-generator`.
final openApiGeneratorFixturesV2 = <String, OpenApiProto<v2.Document>>{

  '2_0/post_body_test': fixtures_2_0_post_body_test,
  '2_0/petstore_with_spring_pageable': fixtures_2_0_petstore_with_spring_pageable,
  '2_0/global_consumes_and_produces': fixtures_2_0_global_consumes_and_produces,
  '2_0/petstore_with_fake_endpoints_models_for_testing_saga_and_records': fixtures_2_0_petstore_with_fake_endpoints_models_for_testing_saga_and_records,
  '2_0/petstore_orig': fixtures_2_0_petstore_orig,
  '2_0/response_selection_test': fixtures_2_0_response_selection_test,
  '2_0/regression_6905': fixtures_2_0_regression_6905,
  '2_0/issue_9086': fixtures_2_0_issue_9086,
  '2_0/array_ref_body': fixtures_2_0_array_ref_body,
  '2_0/python_flask/petstore': fixtures_2_0_python_flask_petstore,
  '2_0/petstore_with_fake_endpoints_for_testing_playframework_with_security': fixtures_2_0_petstore_with_fake_endpoints_for_testing_playframework_with_security,
  '2_0/rust_server/rust_server_test': fixtures_2_0_rust_server_rust_server_test,
  '2_0/path_with_html_entity': fixtures_2_0_path_with_html_entity,
  '2_0/empty_base_model': fixtures_2_0_empty_base_model,
  '2_0/petstore_with_date_field': fixtures_2_0_petstore_with_date_field,
  '2_0/duplicate_operation_ids': fixtures_2_0_duplicate_operation_ids,
  '2_0/issue1226': fixtures_2_0_issue1226,
  '2_0/global_security': fixtures_2_0_global_security,
  '2_0/issue15822': fixtures_2_0_issue15822,
  '2_0/petstore_with_operations_without_required_params': fixtures_2_0_petstore_with_operations_without_required_params,
  '2_0/issue15264': fixtures_2_0_issue15264,
  '2_0/map_args': fixtures_2_0_map_args,
  '2_0/response_header_test': fixtures_2_0_response_header_test,
  '2_0/issue8084': fixtures_2_0_issue8084,
  '2_0/global_produces_consumes_test': fixtures_2_0_global_produces_consumes_test,
  '2_0/markdown': fixtures_2_0_markdown,
  '2_0/petstore_nullable': fixtures_2_0_petstore_nullable,
  '2_0/petstore_bash': fixtures_2_0_petstore_bash,
  '2_0/issue5857': fixtures_2_0_issue5857,
  '2_0/petstore_proto': fixtures_2_0_petstore_proto,
  '2_0/petstore': fixtures_2_0_petstore,
  '2_0/response_code_test': fixtures_2_0_response_code_test,
  '2_0/issue12219': fixtures_2_0_issue12219,
  '2_0/ref_aliased_primitive_with_validation': fixtures_2_0_ref_aliased_primitive_with_validation,
  '2_0/nested_form_parameter': fixtures_2_0_nested_form_parameter,
  '2_0/npe1': fixtures_2_0_npe1,
  '2_0/x_discriminator_value': fixtures_2_0_x_discriminator_value,
  '2_0/required_test': fixtures_2_0_required_test,
  '2_0/wordnik': fixtures_2_0_wordnik,
  '2_0/long_description_issue_7839': fixtures_2_0_long_description_issue_7839,
  '2_0/issue12341': fixtures_2_0_issue12341,
  '2_0/date_property_test': fixtures_2_0_date_property_test,
  '2_0/composed_allof': fixtures_2_0_composed_allof,
  '2_0/all_of_test': fixtures_2_0_all_of_test,
  '2_0/binary_data_test': fixtures_2_0_binary_data_test,
  '2_0/c/petstore': fixtures_2_0_c_petstore,
  '2_0/issue12219_array': fixtures_2_0_issue12219_array,
  '2_0/swift4_test': fixtures_2_0_swift4_test,
  '2_0/swift5_test': fixtures_2_0_swift5_test,
  '2_0/issue_8289': fixtures_2_0_issue_8289,
  '3_0/issue_10865_default_values': fixtures_3_0_issue_10865_default_values,
};

/// All V3 fixtures from `openapi-generator`.
final openApiGeneratorFixturesV3 = <String, OpenApiProto<v3.Document>>{

  '2_0/issue_9086_expected': fixtures_2_0_issue_9086_expected,
  'bugs/issue_14917': fixtures_bugs_issue_14917,
  'bugs/issue_12494': fixtures_bugs_issue_12494,
  'bugs/issue_12457': fixtures_bugs_issue_12457,
  'bugs/issue_constructor_required_values_with_multiple_inheritance': fixtures_bugs_issue_constructor_required_values_with_multiple_inheritance,
  'bugs/issue_7125': fixtures_bugs_issue_7125,
  'bugs/issue_11304_kotlin_backticks_reserved_words': fixtures_bugs_issue_11304_kotlin_backticks_reserved_words,
  'bugs/issue_12790': fixtures_bugs_issue_12790,
  'bugs/issue_13385_2': fixtures_bugs_issue_13385_2,
  'bugs/issue_13385': fixtures_bugs_issue_13385,
  'bugs/issue_12524': fixtures_bugs_issue_12524,
  'bugs/issue_15265': fixtures_bugs_issue_15265,
  'bugs/issue_14907': fixtures_bugs_issue_14907,
  'bugs/issue_14252': fixtures_bugs_issue_14252,
  'bugs/issue_7118': fixtures_bugs_issue_7118,
  'bugs/swift5_code_generation_bug2': fixtures_bugs_swift5_code_generation_bug2,
  'bugs/issue_14418': fixtures_bugs_issue_14418,
  'bugs/issue_14731': fixtures_bugs_issue_14731,
  'bugs/issue_9719': fixtures_bugs_issue_9719,
  'bugs/issue_11731': fixtures_bugs_issue_11731,
  'bugs/issue_13917': fixtures_bugs_issue_13917,
  'bugs/issue_13150': fixtures_bugs_issue_13150,
  'bugs/issue_14026_kotlin_backticks_reserved_words': fixtures_bugs_issue_14026_kotlin_backticks_reserved_words,
  'bugs/swift5_code_generation_stack_overflow_2966': fixtures_bugs_swift5_code_generation_stack_overflow_2966,
  'bugs/issue_11897': fixtures_bugs_issue_11897,
  'bugs/merger_test/spec2': fixtures_bugs_merger_test_spec2,
  'bugs/merger_test/spec1': fixtures_bugs_merger_test_spec1,
  'bugs/issue_13932': fixtures_bugs_issue_13932,
  'bugs/issue_11957': fixtures_bugs_issue_11957,
  'bugs/issue_12622': fixtures_bugs_issue_12622,
  'bugs/issue_4947': fixtures_bugs_issue_4947,
  'bugs/issue_12692': fixtures_bugs_issue_12692,
  'bugs/issue_11537': fixtures_bugs_issue_11537,
  'bugs/issue_11464': fixtures_bugs_issue_11464,
  'bugs/issue_14723': fixtures_bugs_issue_14723,
  'bugs/java_codegen_empty_array_as_default_value/issue_wrong_default': fixtures_bugs_java_codegen_empty_array_as_default_value_issue_wrong_default,
  'bugs/issue_13052': fixtures_bugs_issue_13052,
  '3_0/issue_16496': fixtures_3_0_issue_16496,
  '3_0/any_of_discriminator': fixtures_3_0_any_of_discriminator,
  '3_0/any_of': fixtures_3_0_any_of,
  '3_0/map_schemas': fixtures_3_0_map_schemas,
  '3_0/http_basic_test': fixtures_3_0_http_basic_test,
  '3_0/issue_12857': fixtures_3_0_issue_12857,
  '3_0/allof_primitive': fixtures_3_0_allof_primitive,
  '3_0/sse': fixtures_3_0_sse,
  '3_0/simplify_one_of_any_of_test': fixtures_3_0_simplify_one_of_any_of_test,
  '3_0/schema_with_nullable_arrays': fixtures_3_0_schema_with_nullable_arrays,
  '3_0/issue_10866_bigdecimal_default': fixtures_3_0_issue_10866_bigdecimal_default,
  '3_0/all_of_required_parent': fixtures_3_0_all_of_required_parent,
  '3_0/inner_enum': fixtures_3_0_inner_enum,
  '3_0/all_of_multi_parent': fixtures_3_0_all_of_multi_parent,
  '3_0/one_of_discriminator': fixtures_3_0_one_of_discriminator,
  '3_0/issue_5381': fixtures_3_0_issue_5381,
  '3_0/issue7356': fixtures_3_0_issue7356,
  '3_0/form_multipart_binary_array': fixtures_3_0_form_multipart_binary_array,
  '3_0/ping_array_default': fixtures_3_0_ping_array_default,
  '3_0/issue_7651': fixtures_3_0_issue_7651,
  '3_0/issue_14432': fixtures_3_0_issue_14432,
  '3_0/conflicting_parameter': fixtures_3_0_conflicting_parameter,
  '3_0/13942_schema_enum_names': fixtures_3_0_13942_schema_enum_names,
  '3_0/remove_any_of_one_of_and_keep_properties_only_test': fixtures_3_0_remove_any_of_one_of_and_keep_properties_only_test,
  '3_0/schema_unalias_test': fixtures_3_0_schema_unalias_test,
  '3_0/parameter_test_spec': fixtures_3_0_parameter_test_spec,
  '3_0/issue677': fixtures_3_0_issue677,
  '3_0/issue7506': fixtures_3_0_issue7506,
  '3_0/all_of_extension_parent': fixtures_3_0_all_of_extension_parent,
  '3_0/one_of_reuse_ref': fixtures_3_0_one_of_reuse_ref,
  '3_0/container_type_import': fixtures_3_0_container_type_import,
  '3_0/ping_some_obj': fixtures_3_0_ping_some_obj,
  '3_0/type_alias': fixtures_3_0_type_alias,
  '3_0/issue_8906': fixtures_3_0_issue_8906,
  '3_0/response_tests': fixtures_3_0_response_tests,
  '3_0/set_container_to_nullable_test': fixtures_3_0_set_container_to_nullable_test,
  '3_0/array_ref_body': fixtures_3_0_array_ref_body,
  '3_0/issue_8052_recursive_model': fixtures_3_0_issue_8052_recursive_model,
  '3_0/issue_7372': fixtures_3_0_issue_7372,
  '3_0/issue12545': fixtures_3_0_issue12545,
  '3_0/exploded_query_param_array': fixtures_3_0_exploded_query_param_array,
  '3_0/form_duplicated_parameter': fixtures_3_0_form_duplicated_parameter,
  '3_0/issue8352': fixtures_3_0_issue8352,
  '3_0/property_deprecated': fixtures_3_0_property_deprecated,
  '3_0/issue_10056': fixtures_3_0_issue_10056,
  '3_0/issue4808': fixtures_3_0_issue4808,
  '3_0/issue_17376': fixtures_3_0_issue_17376,
  '3_0/two_responses': fixtures_3_0_two_responses,
  '3_0/issue_12196': fixtures_3_0_issue_12196,
  '3_0/all_of_nullable': fixtures_3_0_all_of_nullable,
  '3_0/all_of_readonly': fixtures_3_0_all_of_readonly,
  '3_0/issue_7791': fixtures_3_0_issue_7791,
  '3_0/property_name_collision': fixtures_3_0_property_name_collision,
  '3_0/all_of_duplicated_properties': fixtures_3_0_all_of_duplicated_properties,
  '3_0/issue_1517': fixtures_3_0_issue_1517,
  '3_0/issue7262': fixtures_3_0_issue7262,
  '3_0/set_primitive_types_to_nullable_test': fixtures_3_0_set_primitive_types_to_nullable_test,
  '3_0/scala_reserved_words': fixtures_3_0_scala_reserved_words,
  '3_0/issue13146_file_abstraction_response': fixtures_3_0_issue13146_file_abstraction_response,
  '3_0/petstore_with_fake_endpoints_models_for_testing_with_http_signature': fixtures_3_0_petstore_with_fake_endpoints_models_for_testing_with_http_signature,
  '3_0/any_codable': fixtures_3_0_any_codable,
  '3_0/issue_7532': fixtures_3_0_issue_7532,
  '3_0/add_unsigned_to_integer_with_invalid_max_value_test': fixtures_3_0_add_unsigned_to_integer_with_invalid_max_value_test,
  '3_0/features/dynamic_servers': fixtures_3_0_features_dynamic_servers,
  '3_0/features/generate_alias_as_model': fixtures_3_0_features_generate_alias_as_model,
  '3_0/type_mapping_test': fixtures_3_0_type_mapping_test,
  '3_0/property_title': fixtures_3_0_property_title,
  '3_0/schema_with_special_characters': fixtures_3_0_schema_with_special_characters,
  '3_0/issue_7533': fixtures_3_0_issue_7533,
  '3_0/issue_15511': fixtures_3_0_issue_15511,
  '3_0/recursion': fixtures_3_0_recursion,
  '3_0/issues_13069': fixtures_3_0_issues_13069,
  '3_0/examples': fixtures_3_0_examples,
  '3_0/simplify_any_of_string_and_enum_string_test': fixtures_3_0_simplify_any_of_string_and_enum_string_test,
  '3_0/issue796': fixtures_3_0_issue796,
  '3_0/all_of_composition_discriminator': fixtures_3_0_all_of_composition_discriminator,
  '3_0/one_of_non_primitive': fixtures_3_0_one_of_non_primitive,
  '3_0/petstore_with_complex_headers': fixtures_3_0_petstore_with_complex_headers,
  '3_0/issue_17367': fixtures_3_0_issue_17367,
  '3_0/nested_anyof': fixtures_3_0_nested_anyof,
  '3_0/ping_bearer_auth': fixtures_3_0_ping_bearer_auth,
  '3_0/enum': fixtures_3_0_enum,
  '3_0/issue_4876_format_email': fixtures_3_0_issue_4876_format_email,
  '3_0/issue_16223': fixtures_3_0_issue_16223,
  '3_0/issue4584': fixtures_3_0_issue4584,
  '3_0/unsigned_test': fixtures_3_0_unsigned_test,
  '3_0/enum_and_inner_enum_uri': fixtures_3_0_enum_and_inner_enum_uri,
  '3_0/issue_10725': fixtures_3_0_issue_10725,
  '3_0/issue_9848': fixtures_3_0_issue_9848,
  '3_0/issue15859': fixtures_3_0_issue15859,
  '3_0/deepobject_array_with_pattern': fixtures_3_0_deepobject_array_with_pattern,
  '3_0/3248_regression_dates': fixtures_3_0_3248_regression_dates,
  '3_0/validation': fixtures_3_0_validation,
  '3_0/echo_api': fixtures_3_0_echo_api,
  '3_0/elm': fixtures_3_0_elm,
  '3_0/composed_oneof': fixtures_3_0_composed_oneof,
  '3_0/petstore_with_object_as_parameter': fixtures_3_0_petstore_with_object_as_parameter,
  '3_0/all_of_required': fixtures_3_0_all_of_required,
  '3_0/issue_1997': fixtures_3_0_issue_1997,
  '3_0/all_of_composition_discriminator_recursive': fixtures_3_0_all_of_composition_discriminator_recursive,
  '3_0/issue_8535': fixtures_3_0_issue_8535,
  '3_0/3248_regression': fixtures_3_0_3248_regression,
  '3_0/issue_14765': fixtures_3_0_issue_14765,
  '3_0/simplify_boolean_enum_test': fixtures_3_0_simplify_boolean_enum_test,
  '3_0/issue_241': fixtures_3_0_issue_241,
  '3_0/any_type': fixtures_3_0_any_type,
  '3_0/issue_4832': fixtures_3_0_issue_4832,
  '3_0/issue_12445': fixtures_3_0_issue_12445,
  '3_0/enable_keep_only_first_tag_in_operation_test': fixtures_3_0_enable_keep_only_first_tag_in_operation_test,
  '3_0/issue_7199_array_simple_string': fixtures_3_0_issue_7199_array_simple_string,
  '3_0/schema': fixtures_3_0_schema,
  '3_0/petstore': fixtures_3_0_petstore,
  '3_0/root_operation': fixtures_3_0_root_operation,
  '3_0/issue_9447': fixtures_3_0_issue_9447,
  '3_0/additional_properties_deeply_nested': fixtures_3_0_additional_properties_deeply_nested,
  '3_0/issue_10792': fixtures_3_0_issue_10792,
  '3_0/issue392': fixtures_3_0_issue392,
  '3_0/issue14525': fixtures_3_0_issue14525,
  '3_0/issue_7361': fixtures_3_0_issue_7361,
  '3_0/one_of': fixtures_3_0_one_of,
  '3_0/11_regex': fixtures_3_0_11_regex,
  '3_0/issue_17555': fixtures_3_0_issue_17555,
  '3_0/issue8792': fixtures_3_0_issue8792,
  '3_0/issue_2908': fixtures_3_0_issue_2908,
  '3_0/issue_11340': fixtures_3_0_issue_11340,
  '3_0/dict_query_parameter': fixtures_3_0_dict_query_parameter,
  '3_0/all_of_mapping_duplicated_properties': fixtures_3_0_all_of_mapping_duplicated_properties,
  '3_0/3134_regression': fixtures_3_0_3134_regression,
  '3_0/issue_4062': fixtures_3_0_issue_4062,
  '3_0/issue_7614': fixtures_3_0_issue_7614,
  '3_0/one_of_primitive_and_array': fixtures_3_0_one_of_primitive_and_array,
  '3_0/optional_response': fixtures_3_0_optional_response,
  '3_0/inline_model_allof_propertyof_oneof': fixtures_3_0_inline_model_allof_propertyof_oneof,
  '3_0/inline_request_body_no_components': fixtures_3_0_inline_request_body_no_components,
  '3_0/streaming': fixtures_3_0_streaming,
  '3_0/petstore_with_deprecated_fields': fixtures_3_0_petstore_with_deprecated_fields,
  '3_0/required_and_readonly_property': fixtures_3_0_required_and_readonly_property,
  '3_0/callbacks': fixtures_3_0_callbacks,
  '3_0/issue855': fixtures_3_0_issue855,
  '3_0/one_of_two_primitives': fixtures_3_0_one_of_two_primitives,
  '3_0/issue_7193': fixtures_3_0_issue_7193,
  '3_0/issue_kotlin_array_enum_embedded': fixtures_3_0_issue_kotlin_array_enum_embedded,
  '3_0/one_of_duplicate_array': fixtures_3_0_one_of_duplicate_array,
  '3_0/convert_enum_null_to_nullable_test': fixtures_3_0_convert_enum_null_to_nullable_test,
  '3_0/issue_7613': fixtures_3_0_issue_7613,
  '3_0/composed_schemas': fixtures_3_0_composed_schemas,
  '3_0/issue_13043_recursive_model': fixtures_3_0_issue_13043_recursive_model,
  '3_0/petstore_multiple_required_properties_has_same_one_of_object': fixtures_3_0_petstore_multiple_required_properties_has_same_one_of_object,
  '3_0/property_readonly': fixtures_3_0_property_readonly,
  '3_0/all_of_no_fields': fixtures_3_0_all_of_no_fields,
  '3_0/test_regex': fixtures_3_0_test_regex,
  '3_0/petstore_addpet_only': fixtures_3_0_petstore_addpet_only,
  '3_0/name_parameter_mappings': fixtures_3_0_name_parameter_mappings,
  '3_0/issue_15923': fixtures_3_0_issue_15923,
  '3_0/issue_10330': fixtures_3_0_issue_10330,
  '3_0/external_refs/echo_api': fixtures_3_0_external_refs_echo_api,
  '3_0/deepobject': fixtures_3_0_deepobject,
  '3_0/issue_11521': fixtures_3_0_issue_11521,
  '3_0/all_of_composition': fixtures_3_0_all_of_composition,
  '3_0/issue_13025': fixtures_3_0_issue_13025,
  '3_0/issue11242': fixtures_3_0_issue11242,
  '3_0/example_generator_test': fixtures_3_0_example_generator_test,
  '3_0/all_of': fixtures_3_0_all_of,
  '3_0/one_of_array_map_import': fixtures_3_0_one_of_array_map_import,
  '3_0/ping': fixtures_3_0_ping,
  '3_0/petstore_with_nullable_required': fixtures_3_0_petstore_with_nullable_required,
  '3_0/tags': fixtures_3_0_tags,
  '3_0/issue_11772': fixtures_3_0_issue_11772,
  '3_0/one_of_primitive': fixtures_3_0_one_of_primitive,
  '3_0/invalid_ref_request_body': fixtures_3_0_invalid_ref_request_body,
  '3_0/oneof_polymorphism_and_inheritance': fixtures_3_0_oneof_polymorphism_and_inheritance,
  '3_0/petstore_oas3_test': fixtures_3_0_petstore_oas3_test,
  '3_0/issue_14584_bigdecimal_default': fixtures_3_0_issue_14584_bigdecimal_default,
  '3_1/matrix_path_params_spec': fixtures_3_1_matrix_path_params_spec,
  '3_1/null_types': fixtures_3_1_null_types,
};
