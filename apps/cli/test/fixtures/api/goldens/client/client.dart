// Generated by Celest. This file should not be modified manually, but
// it can be checked into version control.
// ignore_for_file: type=lint, unused_local_variable, unnecessary_cast

library; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:celest_core/celest_core.dart' as _i3;
import 'package:http/http.dart' as _i1;

import 'functions.dart' as _i2;
import 'serializers.dart' as _i4;

final Celest celest = Celest();

class Celest {
  late _i1.Client httpClient = _i1.Client();

  final functions = _i2.CelestFunctions();

  void init() {
    _i3.Serializers.scoped.put(const _i4.EmptySerializer());
    _i3.Serializers.scoped.put(const _i4.FieldsSerializer());
    _i3.Serializers.scoped.put(const _i4.NamedFieldsSerializer());
    _i3.Serializers.scoped.put(const _i4.MixedFieldsSerializer());
    _i3.Serializers.scoped.put(const _i4.DefaultValuesSerializer());
    _i3.Serializers.scoped.put(const _i4.NestedClassSerializer());
    _i3.Serializers.scoped.put(const _i4.OnlyFromJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.OnlyToJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.OnlyToJsonWithDefaultsSerializer());
    _i3.Serializers.scoped.put(const _i4.FromJsonAndToJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.NonMapToJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.NonMapToJsonWithDefaultsSerializer());
    _i3.Serializers.scoped.put(const _i4.NonMapFromAndToJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.NodeSerializer());
    _i3.Serializers.scoped.put(const _i4.ChildSerializer());
    _i3.Serializers.scoped.put(const _i4.ParentSerializer());
    _i3.Serializers.scoped.put(const _i4.SelfReferencingWrapperSerializer());
    _i3.Serializers.scoped.put(const _i4.SelfReferencingSerializer());
    _i3.Serializers.scoped.put(const _i4.SupportedExceptionTypeSerializer());
    _i3.Serializers.scoped.put(const _i4.SupportedErrorTypeSerializer());
    _i3.Serializers.scoped.put(const _i4.CustomExceptionSerializer());
    _i3.Serializers.scoped.put(const _i4.CustomExceptionToFromJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.CustomErrorSerializer());
    _i3.Serializers.scoped.put(const _i4.CustomErrorToFromJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.CustomErrorWithStackTraceSerializer());
    _i3.Serializers.scoped.put(const _i4.IListStringSerializer());
    _i3.Serializers.scoped.put(const _i4.IListUriSerializer());
    _i3.Serializers.scoped.put(const _i4.SimpleClassSerializer());
    _i3.Serializers.scoped.put(const _i4.IListSimpleClassSerializer());
    _i3.Serializers.scoped.put(const _i4.IListIListStringSerializer());
    _i3.Serializers.scoped.put(const _i4.IListIListUriSerializer());
    _i3.Serializers.scoped.put(const _i4.IListIListSimpleClassSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringStringSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringUriSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringSimpleClassSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringIListStringSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringIListUriSerializer());
    _i3.Serializers.scoped
        .put(const _i4.IMapStringIListSimpleClassSerializer());
    _i3.Serializers.scoped
        .put(const _i4.IMapStringIMapStringStringSerializer());
    _i3.Serializers.scoped.put(const _i4.IMapStringIMapStringUriSerializer());
    _i3.Serializers.scoped
        .put(const _i4.IMapStringIMapStringSimpleClassSerializer());
    _i3.Serializers.scoped.put(const _i4.GenericWrappersSerializer());
    _i3.Serializers.scoped.put(const _i4.ExportableSerializer());
    _i3.Serializers.scoped.put(const _i4.SerializableSerializer());
    _i3.Serializers.scoped.put(const _i4.LiteralEnumSerializer());
    _i3.Serializers.scoped.put(const _i4.Record$k7x4l9Serializer());
    _i3.Serializers.scoped.put(const _i4.MyEnumSerializer());
    _i3.Serializers.scoped.put(const _i4.SimpleStructSerializer());
    _i3.Serializers.scoped.put(const _i4.ComplexStructSerializer());
    _i3.Serializers.scoped.put(const _i4.ComplexClassSerializer());
    _i3.Serializers.scoped.put(const _i4.Record$rmm4wtSerializer());
    _i3.Serializers.scoped.put(const _i4.Record$sxv9hgSerializer());
    _i3.Serializers.scoped.put(const _i4.NestedSerializer());
    _i3.Serializers.scoped.put(const _i4.NullableNestedSerializer());
    _i3.Serializers.scoped.put(const _i4.ShapeSerializer());
    _i3.Serializers.scoped.put(const _i4.RectangleSerializer());
    _i3.Serializers.scoped.put(const _i4.CircleSerializer());
    _i3.Serializers.scoped
        .put(const _i4.ShapeWithInheritedCustomJsonSerializer());
    _i3.Serializers.scoped
        .put(const _i4.RectangleWithInheritedCustomJsonSerializer());
    _i3.Serializers.scoped
        .put(const _i4.CircleWithInheritedCustomJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.ShapeWithCustomJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.CircleWithCustomJsonSerializer());
    _i3.Serializers.scoped.put(const _i4.RectangleWithCustomJsonSerializer());
    _i3.Serializers.scoped
        .put(const _i4.ShapeWithOverriddenCustomJsonSerializer());
    _i3.Serializers.scoped
        .put(const _i4.RectangleWithOverriddenCustomJsonSerializer());
    _i3.Serializers.scoped
        .put(const _i4.CircleWithOverriddenCustomJsonSerializer());
  }
}
