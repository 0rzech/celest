// Generated by `celest start`. This file should not be modified manually, but
// it can be checked into version control.

library; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:celest/celest.dart' as _i1;

import 'apis/parameter_types.dart' as _i2;

final $_Celest celest = $_Celest();

final class $_ParameterTypesApi {
  final simple = _i1.CloudFunction<
      (
        String,
        int,
        double,
        bool,
        _i2.MyEnum,
        Null,
        Iterable<String>,
        Iterable<int>,
        Iterable<double>,
        Iterable<bool>,
        Iterable<_i2.MyEnum>,
        Iterable<Null>,
        List<String>,
        List<int>,
        List<double>,
        List<bool>,
        List<_i2.MyEnum>,
        List<Null>,
        Map<String, String>,
        Map<String, int>,
        Map<String, double>,
        Map<String, bool>,
        Map<String, _i2.MyEnum>,
        Map<String, Null>
      ),
      void>(
    api: r'parameter_types',
    functionName: r'simple',
  );

  final simpleOptional = _i1.CloudFunction<
      (
        String?,
        int?,
        double?,
        bool?,
        _i2.MyEnum?,
        Null,
        Iterable<String>?,
        Iterable<int>?,
        Iterable<double>?,
        Iterable<bool>?,
        Iterable<_i2.MyEnum>?,
        Iterable<Null>?,
        List<String>?,
        List<int>?,
        List<double>?,
        List<bool>?,
        List<_i2.MyEnum>?,
        List<Null>?,
        Map<String, String>?,
        Map<String, int>?,
        Map<String, double>?,
        Map<String, bool>?,
        Map<String, _i2.MyEnum>?,
        Map<String, Null>?
      ),
      void>(
    api: r'parameter_types',
    functionName: r'simpleOptional',
  );

  final complex = _i1.CloudFunction<
      (
        _i2.SimpleStruct,
        _i2.ComplexStruct,
        _i2.SimpleStruct?,
        _i2.ComplexStruct?,
        Iterable<_i2.SimpleStruct>,
        Iterable<_i2.ComplexStruct>,
        Iterable<_i2.SimpleStruct>?,
        Iterable<_i2.ComplexStruct>?,
        Iterable<_i2.SimpleStruct?>,
        Iterable<_i2.ComplexStruct?>,
        List<_i2.SimpleStruct>,
        List<_i2.ComplexStruct>,
        List<_i2.SimpleStruct>?,
        List<_i2.ComplexStruct>?,
        List<_i2.SimpleStruct?>,
        List<_i2.ComplexStruct?>,
        Map<String, _i2.SimpleStruct>,
        Map<String, _i2.ComplexStruct>,
        Map<String, _i2.SimpleStruct>?,
        Map<String, _i2.ComplexStruct>?,
        Map<String, _i2.SimpleStruct?>,
        Map<String, _i2.ComplexStruct?>,
        Map<String, _i2.SimpleStruct?>?,
        Map<String, _i2.ComplexStruct?>?
      ),
      void>(
    api: r'parameter_types',
    functionName: r'complex',
  );
}

final class $_ReturnTypesApi {
  final asyncVoidReturn = _i1.CloudFunction<void, void>(
    api: r'return_types',
    functionName: r'asyncVoidReturn',
  );

  final asyncStringReturn = _i1.CloudFunction<void, String>(
    api: r'return_types',
    functionName: r'asyncStringReturn',
  );

  final asyncIntReturn = _i1.CloudFunction<void, int>(
    api: r'return_types',
    functionName: r'asyncIntReturn',
  );

  final asyncDoubleReturn = _i1.CloudFunction<void, double>(
    api: r'return_types',
    functionName: r'asyncDoubleReturn',
  );

  final asyncBoolReturn = _i1.CloudFunction<void, bool>(
    api: r'return_types',
    functionName: r'asyncBoolReturn',
  );

  final asyncListReturn = _i1.CloudFunction<void, List<String>>(
    api: r'return_types',
    functionName: r'asyncListReturn',
  );

  final asyncMapReturn = _i1.CloudFunction<void, Map<String, String>>(
    api: r'return_types',
    functionName: r'asyncMapReturn',
  );

  final asyncIterableReturn = _i1.CloudFunction<void, Iterable<String>>(
    api: r'return_types',
    functionName: r'asyncIterableReturn',
  );

  final asyncStructReturn = _i1.CloudFunction<void, _i2.SimpleStruct>(
    api: r'return_types',
    functionName: r'asyncStructReturn',
  );

  final asyncStructReturnNullable = _i1.CloudFunction<void, _i2.SimpleStruct?>(
    api: r'return_types',
    functionName: r'asyncStructReturnNullable',
  );

  final asyncComplexReturn = _i1.CloudFunction<void, _i2.ComplexStruct>(
    api: r'return_types',
    functionName: r'asyncComplexReturn',
  );

  final asyncOrVoidReturn = _i1.CloudFunction<void, void>(
    api: r'return_types',
    functionName: r'asyncOrVoidReturn',
  );

  final asyncOrStringReturn = _i1.CloudFunction<void, String>(
    api: r'return_types',
    functionName: r'asyncOrStringReturn',
  );

  final asyncOrIntReturn = _i1.CloudFunction<void, int>(
    api: r'return_types',
    functionName: r'asyncOrIntReturn',
  );

  final asyncOrDoubleReturn = _i1.CloudFunction<void, double>(
    api: r'return_types',
    functionName: r'asyncOrDoubleReturn',
  );

  final asyncOrBoolReturn = _i1.CloudFunction<void, bool>(
    api: r'return_types',
    functionName: r'asyncOrBoolReturn',
  );

  final asyncOrListReturn = _i1.CloudFunction<void, List<String>>(
    api: r'return_types',
    functionName: r'asyncOrListReturn',
  );

  final asyncOrMapReturn = _i1.CloudFunction<void, Map<String, String>>(
    api: r'return_types',
    functionName: r'asyncOrMapReturn',
  );

  final asyncOrIterableReturn = _i1.CloudFunction<void, Iterable<String>>(
    api: r'return_types',
    functionName: r'asyncOrIterableReturn',
  );

  final asyncOrStructReturn = _i1.CloudFunction<void, _i2.SimpleStruct>(
    api: r'return_types',
    functionName: r'asyncOrStructReturn',
  );

  final asyncOrComplexReturn = _i1.CloudFunction<void, _i2.ComplexStruct>(
    api: r'return_types',
    functionName: r'asyncOrComplexReturn',
  );

  final asyncOrVoidReturnNullable = _i1.CloudFunction<void, void>(
    api: r'return_types',
    functionName: r'asyncOrVoidReturnNullable',
  );

  final asyncOrStringReturnNullable = _i1.CloudFunction<void, String?>(
    api: r'return_types',
    functionName: r'asyncOrStringReturnNullable',
  );

  final asyncOrIntReturnNullable = _i1.CloudFunction<void, int?>(
    api: r'return_types',
    functionName: r'asyncOrIntReturnNullable',
  );

  final asyncOrDoubleReturnNullable = _i1.CloudFunction<void, double?>(
    api: r'return_types',
    functionName: r'asyncOrDoubleReturnNullable',
  );

  final asyncOrBoolReturnNullable = _i1.CloudFunction<void, bool?>(
    api: r'return_types',
    functionName: r'asyncOrBoolReturnNullable',
  );

  final asyncOrListReturnNullable = _i1.CloudFunction<void, List<String>?>(
    api: r'return_types',
    functionName: r'asyncOrListReturnNullable',
  );

  final asyncOrMapReturnNullable =
      _i1.CloudFunction<void, Map<String, String>?>(
    api: r'return_types',
    functionName: r'asyncOrMapReturnNullable',
  );

  final asyncOrIterableReturnNullable =
      _i1.CloudFunction<void, Iterable<String>?>(
    api: r'return_types',
    functionName: r'asyncOrIterableReturnNullable',
  );

  final asyncOrStructReturnNullable =
      _i1.CloudFunction<void, _i2.SimpleStruct?>(
    api: r'return_types',
    functionName: r'asyncOrStructReturnNullable',
  );

  final asyncOrComplexReturnNullable =
      _i1.CloudFunction<void, _i2.ComplexStruct?>(
    api: r'return_types',
    functionName: r'asyncOrComplexReturnNullable',
  );

  final voidReturn = _i1.CloudFunction<void, void>(
    api: r'return_types',
    functionName: r'voidReturn',
  );

  final stringReturn = _i1.CloudFunction<void, String>(
    api: r'return_types',
    functionName: r'stringReturn',
  );

  final intReturn = _i1.CloudFunction<void, int>(
    api: r'return_types',
    functionName: r'intReturn',
  );

  final doubleReturn = _i1.CloudFunction<void, double>(
    api: r'return_types',
    functionName: r'doubleReturn',
  );

  final boolReturn = _i1.CloudFunction<void, bool>(
    api: r'return_types',
    functionName: r'boolReturn',
  );

  final listReturn = _i1.CloudFunction<void, List<String>>(
    api: r'return_types',
    functionName: r'listReturn',
  );

  final mapReturn = _i1.CloudFunction<void, Map<String, String>>(
    api: r'return_types',
    functionName: r'mapReturn',
  );

  final iterableReturn = _i1.CloudFunction<void, Iterable<String>>(
    api: r'return_types',
    functionName: r'iterableReturn',
  );

  final structReturn = _i1.CloudFunction<void, _i2.SimpleStruct>(
    api: r'return_types',
    functionName: r'structReturn',
  );

  final complexReturn = _i1.CloudFunction<void, _i2.ComplexStruct>(
    api: r'return_types',
    functionName: r'complexReturn',
  );

  final stringReturnNullable = _i1.CloudFunction<void, String?>(
    api: r'return_types',
    functionName: r'stringReturnNullable',
  );

  final intReturnNullable = _i1.CloudFunction<void, int?>(
    api: r'return_types',
    functionName: r'intReturnNullable',
  );

  final doubleReturnNullable = _i1.CloudFunction<void, double?>(
    api: r'return_types',
    functionName: r'doubleReturnNullable',
  );

  final boolReturnNullable = _i1.CloudFunction<void, bool?>(
    api: r'return_types',
    functionName: r'boolReturnNullable',
  );

  final listReturnNullable = _i1.CloudFunction<void, List<String>?>(
    api: r'return_types',
    functionName: r'listReturnNullable',
  );

  final mapReturnNullable = _i1.CloudFunction<void, Map<String, String>?>(
    api: r'return_types',
    functionName: r'mapReturnNullable',
  );

  final iterableReturnNullable = _i1.CloudFunction<void, Iterable<String>?>(
    api: r'return_types',
    functionName: r'iterableReturnNullable',
  );

  final structReturnNullable = _i1.CloudFunction<void, _i2.SimpleStruct?>(
    api: r'return_types',
    functionName: r'structReturnNullable',
  );

  final complexReturnNullable = _i1.CloudFunction<void, _i2.ComplexStruct?>(
    api: r'return_types',
    functionName: r'complexReturnNullable',
  );
}

final class $_MiddlewareApi {
  final sayHello = _i1.CloudFunction<String, String>(
    api: r'middleware',
    functionName: r'sayHello',
  );
}

final class $_ParametersApi {
  final optionalPositional = _i1.CloudFunction<(String?, int?), void>(
    api: r'parameters',
    functionName: r'optionalPositional',
  );

  final optionalNamed =
      _i1.CloudFunction<({String? namedString, int? namedInt}), void>(
    api: r'parameters',
    functionName: r'optionalNamed',
  );

  final requiredPositional = _i1.CloudFunction<(String, int), void>(
    api: r'parameters',
    functionName: r'requiredPositional',
  );

  final requiredNamed =
      _i1.CloudFunction<({String requiredString, int requiredInt}), void>(
    api: r'parameters',
    functionName: r'requiredNamed',
  );
}

final class $_CelestApis {
  final $_ParameterTypesApi parameterTypes = $_ParameterTypesApi();

  final $_ReturnTypesApi returnTypes = $_ReturnTypesApi();

  final $_MiddlewareApi middleware = $_MiddlewareApi();

  final $_ParametersApi parameters = $_ParametersApi();
}

final class $_Celest {
  final $_CelestApis apis = $_CelestApis();
}
